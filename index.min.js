/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./africa/index.css":
/*!**************************!*\
  !*** ./africa/index.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./africa/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./africa/index.js":
/*!*************************!*\
  !*** ./africa/index.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ "./game/index.js");
/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ "./africa/player/index.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map */ "./africa/map/index.js");
/* harmony import */ var _tribe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tribe */ "./africa/tribe/index.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index.css */ "./africa/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }








var AfricaGame =
/*#__PURE__*/
function () {
  function AfricaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AfricaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_5__["default"](this);
    this._points = 0;
    this.intersector = new _game__WEBPACK_IMPORTED_MODULE_0__["Intersector"]();
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_0__["GameTable"]({
      "points": {
        name: "Алмазы",
        value: 0
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_0__["GameField"](element, this.table.element);
    /** Герой */

    this.hero = new _player__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.field.appendChild(this.hero.element);
    this.hero.on('boundary', function (boundary) {
      return _this._onHeroBoundary(boundary);
    });
    /** Карта платформ */

    this.map = new _map__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.map.init();
    this.field.appendChild(this.map.element);
    /** Вражеское племя */

    this.tribe = new _tribe__WEBPACK_IMPORTED_MODULE_3__["default"](this);
    this.field.appendChild(this.tribe.element);
    /** Пересечение финиша */

    var finish = this.map.finish;
    var finishWatcher = this.intersector.watch(finish, this.hero.element);
    finish.on('intersector.events.collision', function (data) {
      _this.win();

      _this.intersector.stopWatcher(finishWatcher);
    });
    /** Столкновение с племенем */

    this.intersector.watch(this.tribe.element, this.hero.element);
    this.tribe.element.on('intersector.events.collision', function (data) {
      _this.lose();
    });
    /** Движение племени при движении карты */

    this.map.on('move', function (_ref) {
      var direction = _ref.direction,
          speed = _ref.speed;

      _this.tribe.move(direction, speed);
    });

    this._setHeroStartPosition();

    this._setTribeStartPosition();

    this.start();
  }

  _createClass(AfricaGame, [{
    key: "win",
    value: function win() {
      this.trigger("win", this.points * 100 + 100);
    }
  }, {
    key: "lose",
    value: function lose() {
      var _this2 = this;

      this._setHeroStartPosition();

      this._setTribeStartPosition();

      this.points = this.defaultPoints;
      this.tribe.reset();
      this.map.reset();
      this.hero.pause = true;
      this.tribe.pause = true;
      this.field.onLose(function () {
        return _this2.start();
      });
    }
  }, {
    key: "start",
    value: function start() {
      this.hero.pause = false;
      this.tribe.pause = false;
      this.map.start();
    }
  }, {
    key: "_setHeroStartPosition",
    value: function _setHeroStartPosition() {
      var position = this.map.heroStartPosition;
      this.hero.left = position.left;
      this.hero.top = position.top;
    }
  }, {
    key: "_setTribeStartPosition",
    value: function _setTribeStartPosition() {
      var position = this.map.tribeStartPosition;
      this.tribe.left = position.left;
      this.tribe.top = position.top;
    }
  }, {
    key: "_onHeroBoundary",
    value: function _onHeroBoundary(boundary) {
      if (this.hero.mapBoundary) return;
      this.map.move(boundary, this.hero);
    }
  }, {
    key: "canMove",
    value: function canMove(mover, direction) {
      var moverStartPosition = mover.element.getBoundingClientRect();
      var moverNextPosition = {
        top: moverStartPosition.top,
        bottom: moverStartPosition.bottom,
        left: moverStartPosition.left,
        right: moverStartPosition.right
      };

      switch (direction) {
        case "up":
          moverNextPosition.top -= mover.speed.up;
          moverNextPosition.bottom -= mover.speed.up;
          break;

        case "down":
          moverNextPosition.top += mover.speed.down;
          moverNextPosition.bottom += mover.speed.down;
          break;

        case "left":
          moverNextPosition.left -= mover.speed.left;
          moverNextPosition.right -= mover.speed.left;
          break;

        case "right":
          moverNextPosition.left += mover.speed.right;
          moverNextPosition.right += mover.speed.right;
          break;
      }

      var mapPosition = this.map.element.getBoundingClientRect();
      var mapCoordinates = {
        left: moverNextPosition.left - mapPosition.left,
        right: moverNextPosition.right - mapPosition.left,
        top: moverNextPosition.top - mapPosition.top,
        bottom: moverNextPosition.bottom - mapPosition.top
      };
      var hasObject = this.map.hasObject(mapCoordinates);
      return !hasObject;
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    },
    set: function set(value) {
      this._points = parseInt(value) || 0;
      this.table.update({
        "points": this._points
      });
    }
  }]);

  return AfricaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AfricaGame);

/***/ }),

/***/ "./africa/map/index.css":
/*!******************************!*\
  !*** ./africa/map/index.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./africa/map/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./africa/map/index.js":
/*!*****************************!*\
  !*** ./africa/map/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./africa/map/map.js");
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.css */ "./africa/map/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_2__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var Map =
/*#__PURE__*/
function () {
  function Map(game) {
    _classCallCheck(this, Map);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.pointSize = 50;
    this.objects = [];
    this.map = [];
    this.game = game;
    this.element = this.render();
  }

  _createClass(Map, [{
    key: "init",
    value: function init() {
      this.initialLeft = this.left;
      this.minLeft = -1 * this.width;
    }
  }, {
    key: "render",
    value: function render() {
      var el = document.createElement('div');
      el.id = 'map';

      for (var y = 0, rows = _map__WEBPACK_IMPORTED_MODULE_0__["map"].length; y < rows; y++) {
        this.map.push([]);

        for (var x = 0, cols = _map__WEBPACK_IMPORTED_MODULE_0__["map"][0].length; x < cols; x++) {
          var point = this.drawPoint(y, x);

          if (point) {
            el.appendChild(point.element);
          }

          this.map[y][x] = point || null;
        }
      }

      el.style.width = _map__WEBPACK_IMPORTED_MODULE_0__["map"][0].length * this.pointSize + "px";
      el.style.height = _map__WEBPACK_IMPORTED_MODULE_0__["map"].length * this.pointSize + "px";
      return el;
    }
  }, {
    key: "drawPoint",
    value: function drawPoint(row, col) {
      var _this = this;

      var symbol = _map__WEBPACK_IMPORTED_MODULE_0__["map"][row][col];
      var object = _map__WEBPACK_IMPORTED_MODULE_0__["legend"][symbol];
      if (!object) return;

      switch (object) {
        case "ground":
        case "platform":
          var el = document.createElement('div');
          el.style.width = this.pointSize + 'px';
          el.style.height = this.pointSize + 'px';
          el.classList.add(object);
          el.style.position = "absolute";
          el.style.top = this.pointSize * row + 'px';
          el.style.left = this.pointSize * col + 'px';
          return {
            object: object,
            element: el
          };

        case "hero":
          this._heroStartPosition = {
            top: this.pointSize * row,
            left: this.pointSize * col
          };
          break;

        case "coin":
          var coin = document.createElement('div');
          coin.style.width = this.pointSize + 'px';
          coin.style.height = this.pointSize + 'px';
          coin.classList.add(object);
          coin.style.position = "absolute";
          coin.style.top = this.pointSize * row + 'px';
          coin.style.left = this.pointSize * col + 'px';
          this.game.intersector.watch(coin, this.game.hero.element);
          coin.on('intersector.events.collision', function (data) {
            _this.game.points = _this.game.points + 1;
            coin.remove();
          });
          return {
            object: object,
            element: coin
          };

        case "tribe":
          this._tribeStartPosition = {
            top: this.pointSize * row,
            left: this.pointSize * col
          };
          break;

        case "exit":
          var finish = document.createElement('div');
          finish.style.width = this.pointSize + 'px';
          finish.style.height = this.pointSize + 'px';
          finish.classList.add("finish");
          finish.style.position = "absolute";
          finish.style.top = this.pointSize * row + 'px';
          finish.style.left = this.pointSize * col + 'px';
          this.finish = finish;
          return {
            object: "exit",
            element: finish
          };
      }
    }
  }, {
    key: "start",
    value: function start() {
      this.pause = false;
    }
  }, {
    key: "move",
    value: function move(direction, hero) {
      if (this.pause) return;
      var newPosition, speed;

      if (direction === "left") {
        speed = hero.speed.left / 2;
      } else if (direction === "right") {
        speed = -1 * hero.speed.right / 2;
      }

      newPosition = this.left + speed;
      if (newPosition > this.initialLeft) return;
      if (newPosition < this.minLeft) return;
      this.left = newPosition;
      this.trigger('move', {
        direction: direction,
        speed: speed
      });
    }
  }, {
    key: "reset",
    value: function reset() {
      var _this2 = this;

      this.left = this.initialLeft;
      this.map.forEach(function (row) {
        row.forEach(function (point) {
          if (point && point.object == 'coin') {
            _this2.element.appendChild(point.element);
          }
        });
      });
    }
  }, {
    key: "hasObject",
    value: function hasObject(coords) {
      for (var y = 0, rows = this.map.length; y < rows; y++) {
        for (var x = 0, cols = this.map[0].length; x < cols; x++) {
          var point = this.map[y][x];
          if (!point) continue;
          if (point.object !== 'platform' && point.object !== 'ground') continue;
          var pointCoords = {
            left: this.pointSize * x,
            right: this.pointSize * x + this.pointSize,
            top: this.pointSize * y,
            bottom: this.pointSize * y + this.pointSize
          };
          var isMoreLeft = coords.right <= pointCoords.left;
          var isMoreRight = coords.left >= pointCoords.right;
          var isMoreUp = coords.bottom <= pointCoords.top;
          var isMoreDown = coords.top >= pointCoords.bottom;
          if (isMoreLeft || isMoreRight || isMoreUp || isMoreDown) continue;
          return true;
        }
      }

      return false;
    }
  }, {
    key: "width",
    get: function get() {
      return this.pointSize * _map__WEBPACK_IMPORTED_MODULE_0__["map"][0].length;
    }
  }, {
    key: "height",
    get: function get() {
      return this.pointSize * _map__WEBPACK_IMPORTED_MODULE_0__["map"].length;
    }
  }, {
    key: "left",
    get: function get() {
      return parseInt(this.element.style.left) || 0;
    },
    set: function set(value) {
      this.element.style.left = Number(value) + 'px';
    }
  }, {
    key: "heroStartPosition",
    get: function get() {
      return this._heroStartPosition;
    }
  }, {
    key: "tribeStartPosition",
    get: function get() {
      return this._tribeStartPosition;
    }
  }]);

  return Map;
}();

/* harmony default export */ __webpack_exports__["default"] = (Map);

/***/ }),

/***/ "./africa/map/map.js":
/*!***************************!*\
  !*** ./africa/map/map.js ***!
  \***************************/
/*! exports provided: map, legend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "legend", function() { return legend; });
var map = ["........................................................................", "................................................*....*..................", "................................................=...===.................", "................*...........*................=......*......*............", ".....*.........==.....*...===....*.....*..=.........=x...===..........*.", "....==.....==.........==.........=.....=............===........=......=.", "+..-....................................................................", "########################################################################"];
var legend = {
  ".": null,
  "#": "ground",
  "=": "platform",
  "*": "coin",
  "+": "hero",
  "-": "tribe",
  "x": "exit"
};


/***/ }),

/***/ "./africa/player/index.js":
/*!********************************!*\
  !*** ./africa/player/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var Player =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Player, _player$Mover);

  function Player(game) {
    var _this;

    _classCallCheck(this, Player);

    var element = document.createElement('div');
    element.id = "hero";
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Player).call(this, element, {
      speed: {
        up: 4,
        down: 4,
        left: 4,
        right: 4
      },
      field: game.field,
      diff: {
        left: 0,
        right: game.field.offsetWidth / 2,
        top: 0,
        bottom: 0
      }
    }));
    _this.jumpTimer;
    _this.jumpHeight = 140;
    _this.game = game;
    new _game_player__WEBPACK_IMPORTED_MODULE_0__["KeyboardMover"](_assertThisInitialized(_this), 10);
    _this.checkTimer = setInterval(function () {
      if (_this.jumping) return;

      if (_this.canMove("down")) {
        _this.top = _this.top + _this.speed.down;
      }
    }, 10);
    return _this;
  }

  _createClass(Player, [{
    key: "canMove",
    value: function canMove(direction) {
      if (!this.game.canMove(this, direction)) {
        this.mapBoundary = true;
        return false;
      }

      this.mapBoundary = false;
      return _get(_getPrototypeOf(Player.prototype), "canMove", this).call(this, direction);
    }
  }, {
    key: "toUp",
    value: function toUp() {
      if (this.pause) return;

      if (this.canMove("up")) {
        this.startJump();
      } else {
        this.trigger("boundary", "up");
      }
    }
  }, {
    key: "startJump",
    value: function startJump() {
      var _this2 = this;

      if (this.jumping) return;
      this.jumping = true;
      var jumpStart = this.top;
      this.jumpTimer = setInterval(function () {
        var canMove = _this2.canMove("up");

        var maxHeight = _this2.top <= jumpStart - _this2.jumpHeight;

        if (!canMove || maxHeight) {
          clearInterval(_this2.jumpTimer);
          _this2.jumpTimer = setInterval(function () {
            if (!_this2.canMove("down")) {
              clearInterval(_this2.jumpTimer);
              _this2.jumping = false;
            } else {
              _this2.top = _this2.top + _this2.speed.down;
            }
          }, 10);
        } else {
          _this2.top = _this2.top - _this2.speed.up;
        }
      }, 10);
    }
  }]);

  return Player;
}(_game_player__WEBPACK_IMPORTED_MODULE_0__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Player);

/***/ }),

/***/ "./africa/tribe/index.css":
/*!********************************!*\
  !*** ./africa/tribe/index.css ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./africa/tribe/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./africa/tribe/index.js":
/*!*******************************!*\
  !*** ./africa/tribe/index.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.css */ "./africa/tribe/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var Tribe =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Tribe, _player$Mover);

  function Tribe(game) {
    var _this;

    _classCallCheck(this, Tribe);

    var el = document.createElement('div');
    el.id = 'tribe';
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tribe).call(this, el, {
      speed: {
        up: 0,
        down: 0,
        left: 1,
        right: 1
      },
      field: game.field,
      diff: {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
      }
    }));
    _this.name = "tribe";
    _this.game = game;
    _this._pause = true;
    _this._direction = 'right';

    _this.on('boundary', function (boundary) {
      if (boundary === 'right') _this.direction = 'left';else _this.direction = 'right';
    });

    return _this;
  }

  _createClass(Tribe, [{
    key: "reset",
    value: function reset() {
      this._direction = 'right';
    }
  }, {
    key: "reset",
    value: function reset() {
      this.pause = true;
      this.direction = 'right';
    }
  }, {
    key: "move",
    value: function move(direction, speed) {
      this.left = this.left + speed;
    }
  }, {
    key: "direction",
    get: function get() {
      return this._direction;
    },
    set: function set(value) {
      this._direction = value;
      if (this._direction === 'left') this.element.classList.add('revert');else this.element.classList.remove('revert');
    }
  }, {
    key: "left",
    get: function get() {
      return parseInt(this.element.style.left) || 0;
    },
    set: function set(value) {
      this.element.style.left = Number(value) + 'px';
    }
  }, {
    key: "top",
    get: function get() {
      return parseInt(this.element.style.top) || 0;
    },
    set: function set(value) {
      this.element.style.top = Number(value) + 'px';
    }
  }, {
    key: "pause",
    get: function get() {
      return this._pause;
    },
    set: function set(value) {
      var _this2 = this;

      this._pause = Boolean(value);
      clearInterval(this._moveTimer);

      if (!this._pause) {
        this._moveTimer = setInterval(function () {
          if (_this2.direction == 'right') {
            _this2.toRight();
          } else {
            _this2.toLeft();
          }
        }, 10);
      }
    }
  }]);

  return Tribe;
}(_game_player__WEBPACK_IMPORTED_MODULE_1__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Tribe);

/***/ }),

/***/ "./america/index.css":
/*!***************************!*\
  !*** ./america/index.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./america/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./america/index.js":
/*!**************************!*\
  !*** ./america/index.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ "./game/index.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "./america/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var AmericaGame =
/*#__PURE__*/
function () {
  function AmericaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AmericaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this._points = 0;
    this.time = 0;
    this.intersector = new _game__WEBPACK_IMPORTED_MODULE_0__["Intersector"]();
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_0__["GameTable"]({
      "time": {
        name: "Время",
        value: this.time
      }
    });
    this.timer = setInterval(function () {
      _this.time++;

      _this.showTime();
    }, 1000);
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_0__["GameField"](element, this.table.element);
    this.width = 50;
    this.height = 20;
    this.step = 20;
    this.currentPosition = [0, 0];
    this.walls = [];
    this.$maze = this._createMaze();
    this.maze = this._fillMaze();
    this.amaze(this.currentPosition[0], this.currentPosition[1], true);

    while (this.walls.length != 0) {
      var randomWall = this.walls[Math.floor(Math.random() * this.walls.length)],
          host = randomWall[2],
          opposite = [host[0] + (randomWall[0] - host[0]) * 2, host[1] + (randomWall[1] - host[1]) * 2];

      if (this.valid(opposite[0], opposite[1])) {
        if (this.maze[opposite[0]][opposite[1]] == 'maze') {
          this.walls.splice(this.walls.indexOf(randomWall), 1);
        } else {
          this.amaze(randomWall[0], randomWall[1], false), this.amaze(opposite[0], opposite[1], true);
        }
      } else {
        this.walls.splice(this.walls.indexOf(randomWall), 1);
      }
    }

    document.getElementById('0-0').className = 'block me';
    document.getElementById(this.height - 2 + '-' + (this.width - 2)).className = 'block finish';

    document.body.onkeydown = function (e) {
      _this._onKeydown(e);
    };
  }

  _createClass(AmericaGame, [{
    key: "showTime",
    value: function showTime() {
      var min = Math.floor(this.time / 60);
      var sec = this.time - min * 60;
      this.table.update({
        time: (min < 10 ? "0" + min : min) + ":" + (sec < 10 ? "0" + sec : sec)
      });
    }
  }, {
    key: "_createMaze",
    value: function _createMaze() {
      var el = document.createElement("div");
      el.style.width = this.width * this.step + 'px';
      el.style.height = this.height * this.step + 'px';
      this.field.appendChild(el);
      return el;
    }
  }, {
    key: "_onKeydown",
    value: function _onKeydown(e) {
      var newPosition = [this.currentPosition[0] + (e.keyCode - 39) % 2, this.currentPosition[1] + (e.keyCode - 38) % 2];

      if (this.valid(newPosition[0], newPosition[1]) && this.maze[newPosition[0]][newPosition[1]] != 'wall') {
        document.getElementById(this.currentPosition[0] + '-' + this.currentPosition[1]).className = 'block';
        this.currentPosition = newPosition;
        document.getElementById(this.currentPosition[0] + '-' + this.currentPosition[1]).className = 'block me';

        if (this.currentPosition[0] == this.height - 2 && this.currentPosition[1] == this.width - 2) {
          this.win();
        }
      }
    }
  }, {
    key: "valid",
    value: function valid(a, b) {
      return a < this.height && a >= 0 && b < this.width && b >= 0 ? true : false;
    }
  }, {
    key: "amaze",
    value: function amaze(y, x, addBlockWalls) {
      this.maze[y][x] = 'maze';
      document.getElementById(y + '-' + x).className = 'block';
      if (addBlockWalls && this.valid(y + 1, x) && this.maze[y + 1][x] == 'wall') this.walls.push([y + 1, x, [y, x]]);
      if (addBlockWalls && this.valid(y - 1, x) && this.maze[y - 1][x] == 'wall') this.walls.push([y - 1, x, [y, x]]);
      if (addBlockWalls && this.valid(y, x + 1) && this.maze[y][x + 1] == 'wall') this.walls.push([y, x + 1, [y, x]]);
      if (addBlockWalls && this.valid(y, x - 1) && this.maze[y][x - 1] == 'wall') this.walls.push([y, x - 1, [y, x]]);
    }
  }, {
    key: "_fillMaze",
    value: function _fillMaze() {
      var maze = [];

      for (var y = 0; y < this.height; y++) {
        maze[y] = [];

        for (var x = 0; x < this.width; maze[y][x++] = 'wall') {
          var el = document.createElement("div");
          this.$maze.appendChild(el);
          el.className = 'block wall';
          el.setAttribute('id', y + '-' + x);
        }
      }

      return maze;
    }
  }, {
    key: "win",
    value: function win() {
      window.onkeydown = null;
      this.trigger("win", Math.floor(1000 / this.time + 100));
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    },
    set: function set(value) {
      this._points = parseInt(value) || 0;
      this.table.update({
        "points": this._points
      });
    }
  }]);

  return AmericaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AmericaGame);

/***/ }),

/***/ "./antarctica/faller/faller.js":
/*!*************************************!*\
  !*** ./antarctica/faller/faller.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var Faller =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Faller, _player$Mover);

  function Faller(game, config) {
    var _this;

    _classCallCheck(this, Faller);

    var element = document.createElement('div');
    element.classList.add(config.className);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Faller).call(this, element, {
      speed: {
        up: 0,
        down: config.speed,
        left: 0,
        right: 0
      },
      field: game.field,
      diff: {
        bottom: config.bottomOffset
      }
    }));
    _this.left = Math.random() * (game.field.offsetWidth - _this.element.offsetWidth - 10) + 10;
    _this.timer = setInterval(function () {
      return _this.toDown();
    }, 100);

    _this.on('boundary', function () {
      return _this.remove();
    });

    return _this;
  }

  _createClass(Faller, [{
    key: "canMove",
    value: function canMove(direction) {
      if (direction !== "down") return false;
      return _get(_getPrototypeOf(Faller.prototype), "canMove", this).call(this, direction);
    }
  }, {
    key: "remove",
    value: function remove() {
      clearInterval(this.timer);
      this.element.remove();
      this.trigger('remove');
    }
  }]);

  return Faller;
}(_game_player__WEBPACK_IMPORTED_MODULE_0__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Faller);

/***/ }),

/***/ "./antarctica/faller/flow.js":
/*!***********************************!*\
  !*** ./antarctica/faller/flow.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var get_random_integer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-random-integer */ "./node_modules/get-random-integer/index.js");
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var Flow =
/*#__PURE__*/
function () {
  function Flow(game, config) {
    _classCallCheck(this, Flow);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.game = game;
    this.elements = {};
    this.element = config.element;
    this.minTimeout = config.minTimeout;
    this.maxTimeout = config.maxTimeout;
    this.timer = null;
  }

  _createClass(Flow, [{
    key: "_generateElement",
    value: function _generateElement() {
      var _this = this;

      var flowElement = new this.element(this.game);
      this.game.field.appendChild(flowElement.element);
      var watcher = this.game.intersector.watch(flowElement.element, this.game.hero.element);
      this.elements[watcher] = flowElement;
      flowElement.element.on('intersector.events.collision', function (data) {
        flowElement.remove();

        _this.trigger('collision');
      });
      flowElement.on('remove', function () {
        _this.game.intersector.stopWatcher(watcher);

        delete _this.elements[watcher];
      });
      flowElement.pause = false;
      this.timer = setTimeout(function () {
        return _this._generateElement();
      }, Object(get_random_integer__WEBPACK_IMPORTED_MODULE_0__["default"])(this.minTimeout, this.maxTimeout));
    }
  }, {
    key: "start",
    value: function start() {
      this._generateElement();
    }
  }, {
    key: "stop",
    value: function stop() {
      clearTimeout(this.timer);

      for (var watcher in this.elements) {
        this.elements[watcher].remove();
      }
    }
  }]);

  return Flow;
}();

/* harmony default export */ __webpack_exports__["default"] = (Flow);

/***/ }),

/***/ "./antarctica/faller/penguin.css":
/*!***************************************!*\
  !*** ./antarctica/faller/penguin.css ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./penguin.css */ "./node_modules/css-loader/index.js?!./antarctica/faller/penguin.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./antarctica/faller/penguin.js":
/*!**************************************!*\
  !*** ./antarctica/faller/penguin.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _penguin_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./penguin.css */ "./antarctica/faller/penguin.css");
/* harmony import */ var _penguin_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_penguin_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _faller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./faller */ "./antarctica/faller/faller.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var Penguin =
/*#__PURE__*/
function (_Faller) {
  _inherits(Penguin, _Faller);

  function Penguin(game) {
    _classCallCheck(this, Penguin);

    return _possibleConstructorReturn(this, _getPrototypeOf(Penguin).call(this, game, {
      className: 'penguin',
      speed: 15,
      bottomOffset: -40
    }));
  }

  return Penguin;
}(_faller__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Penguin);

/***/ }),

/***/ "./antarctica/faller/snowflake.css":
/*!*****************************************!*\
  !*** ./antarctica/faller/snowflake.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./snowflake.css */ "./node_modules/css-loader/index.js?!./antarctica/faller/snowflake.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./antarctica/faller/snowflake.js":
/*!****************************************!*\
  !*** ./antarctica/faller/snowflake.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _snowflake_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./snowflake.css */ "./antarctica/faller/snowflake.css");
/* harmony import */ var _snowflake_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_snowflake_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _faller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./faller */ "./antarctica/faller/faller.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var Snowflake =
/*#__PURE__*/
function (_Faller) {
  _inherits(Snowflake, _Faller);

  function Snowflake(game) {
    _classCallCheck(this, Snowflake);

    return _possibleConstructorReturn(this, _getPrototypeOf(Snowflake).call(this, game, {
      className: 'snowflake',
      speed: 10,
      bottomOffset: -40
    }));
  }

  return Snowflake;
}(_faller__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Snowflake);

/***/ }),

/***/ "./antarctica/hero/index.js":
/*!**********************************!*\
  !*** ./antarctica/hero/index.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var Hero =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Hero, _player$Mover);

  function Hero(game) {
    var _this;

    _classCallCheck(this, Hero);

    var element = document.createElement('div');
    element.id = "player";
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Hero).call(this, element, {
      speed: {
        up: 0,
        down: 0,
        left: 5,
        right: 5
      },
      field: game.field.element,
      diff: {
        left: 10,
        right: 10
      }
    }));
    new _game_player__WEBPACK_IMPORTED_MODULE_0__["KeyboardMover"](_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Hero, [{
    key: "canMove",
    value: function canMove(direction) {
      if (direction === "up" || direction === "down") return false;
      return _get(_getPrototypeOf(Hero.prototype), "canMove", this).call(this, direction);
    }
  }]);

  return Hero;
}(_game_player__WEBPACK_IMPORTED_MODULE_0__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Hero);

/***/ }),

/***/ "./antarctica/index.css":
/*!******************************!*\
  !*** ./antarctica/index.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./antarctica/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./antarctica/index.js":
/*!*****************************!*\
  !*** ./antarctica/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ "./game/index.js");
/* harmony import */ var _hero__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hero */ "./antarctica/hero/index.js");
/* harmony import */ var _faller_snowflake__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./faller/snowflake */ "./antarctica/faller/snowflake.js");
/* harmony import */ var _faller_penguin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./faller/penguin */ "./antarctica/faller/penguin.js");
/* harmony import */ var _faller_flow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./faller/flow */ "./antarctica/faller/flow.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index.css */ "./antarctica/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }









var AntarcticaGame =
/*#__PURE__*/
function () {
  function AntarcticaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AntarcticaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_6__["default"](this);
    this.startLives = config.lives || 3;
    this._points = 0;
    this.pointsToWin = 10;
    this._lives = this.startLives;
    this.intersector = new _game__WEBPACK_IMPORTED_MODULE_0__["Intersector"]();
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_0__["GameTable"]({
      "points": {
        name: "Снежинки",
        value: 0
      },
      "lives": {
        name: "Жизни",
        value: this._lives
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_0__["GameField"](element, this.table.element);
    var ground = document.createElement('div');
    ground.classList.add('ground');
    this.field.appendChild(ground);
    /** Герой */

    this.hero = new _hero__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.field.appendChild(this.hero.element);
    this.hero.left = this.field.offsetWidth / 2 - this.hero.element.offsetWidth / 2;
    this.snowfall = new _faller_flow__WEBPACK_IMPORTED_MODULE_4__["default"](this, {
      element: _faller_snowflake__WEBPACK_IMPORTED_MODULE_2__["default"],
      minTimeout: 800,
      maxTimeout: 3100
    });
    this.snowfall.on('collision', function () {
      _this.points = _this.points + 1;
    });
    this.penguins = new _faller_flow__WEBPACK_IMPORTED_MODULE_4__["default"](this, {
      element: _faller_penguin__WEBPACK_IMPORTED_MODULE_3__["default"],
      minTimeout: 720,
      maxTimeout: 2700
    });
    this.penguins.on('collision', function () {
      _this.loseLife();
    });
    this.start();
  }

  _createClass(AntarcticaGame, [{
    key: "loseLife",
    value: function loseLife() {
      this._lives = this._lives - 1;
      this._lives = Math.max(0, this._lives);
      this.table.update({
        "lives": this._lives
      });
      if (this._lives == 0) this.lose();
    }
  }, {
    key: "win",
    value: function win() {
      this.trigger("win", this._lives * 100 + 100);
    }
  }, {
    key: "lose",
    value: function lose() {
      var _this2 = this;

      this.hero.pause = true;
      this.hero.left = this.field.offsetWidth / 2 - this.hero.offsetWidth / 2;
      this.snowfall.stop();
      this.penguins.stop();
      this.field.onLose(function () {
        return _this2.start();
      });
      this.points = 0;
    }
  }, {
    key: "start",
    value: function start() {
      this.hero.pause = false;
      this.snowfall.start();
      this.penguins.start();
      this._lives = this.startLives;
      this.table.update({
        "lives": this._lives
      });
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    },
    set: function set(value) {
      this._points = parseInt(value) || 0;
      this.table.update({
        "points": this._points
      });

      if (this._points >= this.pointsToWin) {
        this.win();
      }
    }
  }]);

  return AntarcticaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AntarcticaGame);

/***/ }),

/***/ "./asia/index.css":
/*!************************!*\
  !*** ./asia/index.css ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./asia/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./asia/index.js":
/*!***********************!*\
  !*** ./asia/index.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ "./game/index.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "./asia/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./player */ "./asia/player/index.js");
/* harmony import */ var _track__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./track */ "./asia/track/index.js");
/* harmony import */ var _traffic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./traffic */ "./asia/traffic/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }








var AsiaGame =
/*#__PURE__*/
function () {
  function AsiaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AsiaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.intersector = new _game__WEBPACK_IMPORTED_MODULE_0__["Intersector"]();
    this._distance = config.distance || 4000;
    this._lives = 3;
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_0__["GameTable"]({
      "points": {
        name: "До цели",
        value: this._distance
      },
      "lives": {
        name: "Жизни",
        value: this._lives
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_0__["GameField"](element, this.table.element);
    /** Герой */

    this.hero = new _player__WEBPACK_IMPORTED_MODULE_3__["default"](this);
    this.field.appendChild(this.hero.element);
    this.hero.on('boundary', function (boundary) {
      return _this._onHeroBoundary(boundary);
    });
    _track__WEBPACK_IMPORTED_MODULE_4__["default"].finish = this._distance;
    this.track = new _track__WEBPACK_IMPORTED_MODULE_4__["default"](this);
    this.field.appendChild(this.track.element);
    this.track.init();
    this.track.on('check-mark', function (data) {
      _this.points = data.distance;
    });
    var finish = this.track.finish;
    this.intersector.watch(finish, this.hero.element);
    finish.on('intersector.events.collision', function (data) {
      _this.win();
    });

    this._setHeroStartPosition();

    this.traffic = new _traffic__WEBPACK_IMPORTED_MODULE_5__["default"](this, {});
    this.traffic.on('accident', function () {
      return _this.loseLife();
    });
    this.start();
  }

  _createClass(AsiaGame, [{
    key: "win",
    value: function win() {
      this.trigger("win", this.lives * 100);
    }
  }, {
    key: "lose",
    value: function lose() {
      var _this2 = this;

      this.hero.pause = true;
      this.track.reset();
      this.traffic.stop();

      this._setHeroStartPosition();

      this.points = this._distance;
      this.lives = 3;
      this.field.onLose(function () {
        return _this2.start();
      });
    }
  }, {
    key: "loseLife",
    value: function loseLife() {
      this.lives = this.lives - 1;
    }
  }, {
    key: "start",
    value: function start() {
      this.hero.pause = false;
      this.track.start();
      this.traffic.start();
    }
  }, {
    key: "_setHeroStartPosition",
    value: function _setHeroStartPosition() {
      this.hero.left = this.field.offsetWidth / 2 - this.hero.element.offsetWidth / 2;
      this.hero.top = this.field.offsetHeight + this.track.startOffset - this.hero.element.offsetHeight / 2;
    }
  }, {
    key: "_onHeroBoundary",
    value: function _onHeroBoundary(boundary) {
      if (boundary !== "up" && boundary !== "down") return;
      this.track.move(boundary, this.hero);
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    },
    set: function set(value) {
      this._points = parseInt(value) || 0;
      this.table.update({
        "points": this._points
      });
    }
  }, {
    key: "lives",
    get: function get() {
      return this._lives;
    },
    set: function set(value) {
      this._lives = parseInt(value) || 0;
      this._lives = Math.max(this._lives, 0);
      this.table.update({
        "lives": this._lives
      });
      if (this._lives === 0) this.lose();
    }
  }]);

  return AsiaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AsiaGame);

/***/ }),

/***/ "./asia/player/index.js":
/*!******************************!*\
  !*** ./asia/player/index.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var Player =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Player, _player$Mover);

  function Player(game) {
    var _this;

    _classCallCheck(this, Player);

    var element = document.createElement('div');
    element.id = "hero";
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Player).call(this, element, {
      speed: {
        up: 7,
        down: 7,
        left: 6,
        right: 6
      },
      field: game.field,
      diff: {
        left: 0,
        right: 0,
        top: 120,
        bottom: 150
      }
    }));
    _this.jumpTimer;
    _this.jumpHeight = 140;
    _this.game = game;
    new _game_player__WEBPACK_IMPORTED_MODULE_0__["KeyboardMover"](_assertThisInitialized(_this), 10);
    return _this;
  }

  return Player;
}(_game_player__WEBPACK_IMPORTED_MODULE_0__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Player);

/***/ }),

/***/ "./asia/track/index.css":
/*!******************************!*\
  !*** ./asia/track/index.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./asia/track/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./asia/track/index.js":
/*!*****************************!*\
  !*** ./asia/track/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.css */ "./asia/track/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var Track =
/*#__PURE__*/
function () {
  function Track(game) {
    _classCallCheck(this, Track);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.game = game;
    this.element = this.render();
    this.pause = true;
  }

  _createClass(Track, [{
    key: "init",
    value: function init() {
      this.initialBottom = this.bottom;
      this.minBottom = -1 * (this.element.offsetHeight - this.game.field.offsetHeight);
    }
  }, {
    key: "start",
    value: function start() {
      this._setPosition();

      this.pause = false;
    }
  }, {
    key: "_setPosition",
    value: function _setPosition() {
      this.bottom = this.initialBottom;
    }
  }, {
    key: "reset",
    value: function reset() {
      this._setPosition();

      this.pause = true;
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var track = document.createElement('div');
      track.id = 'track';
      track.style.height = Track.finish + Track.step * 2 + 'px';
      var finish = document.createElement('div');
      finish.className = 'finish';
      finish.style.top = Track.step + 'px';
      track.appendChild(finish);
      var counter = 1;
      var signValue = Track.step * counter;

      var _loop = function _loop() {
        var signPosition = signValue + Track.step + 'px';
        var signElement = document.createElement('div');
        signElement.className = "sign";
        signElement.textContent = signValue / 1000 + 'km';
        signElement.style.top = signPosition;
        signElement.value = signValue;
        track.appendChild(signElement);

        _this.game.intersector.watch(signElement, _this.game.hero.element);

        signElement.on('intersector.events.collision', function () {
          _this._onCheckMark(signElement.value);
        });
        counter++;
        signValue = Track.step * counter;
      };

      while (signValue <= Track.finish) {
        _loop();
      }

      return track;
    }
  }, {
    key: "_onCheckMark",
    value: function _onCheckMark(markValue) {
      if (this.pause) return;
      this.trigger('check-mark', {
        distance: markValue
      });
    }
  }, {
    key: "move",
    value: function move(direction, hero) {
      if (this.pause) return;
      var newPosition;

      if (direction === "up") {
        newPosition = this.bottom - hero.speed.up / 2;
      } else if (direction === "down") {
        newPosition = this.bottom + hero.speed.up / 2;
      }

      if (newPosition > this.initialBottom) return;
      if (newPosition < this.minBottom) return;
      this.bottom = newPosition;
    }
  }, {
    key: "addCar",
    value: function addCar(car) {
      this.element.appendChild(car.element);
    }
  }, {
    key: "finish",
    get: function get() {
      return this.element.querySelector('.finish');
    }
  }, {
    key: "startOffset",
    get: function get() {
      return -1 * Track.step;
    }
  }, {
    key: "bottom",
    get: function get() {
      return parseInt(this.element.style.bottom) || 0;
    },
    set: function set(value) {
      this.element.style.bottom = Number(value) + 'px';
    }
  }]);

  return Track;
}();

Track.finish = 2000;
Track.step = 250;
/* harmony default export */ __webpack_exports__["default"] = (Track);

/***/ }),

/***/ "./asia/traffic/car.js":
/*!*****************************!*\
  !*** ./asia/traffic/car.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var get_random_integer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-random-integer */ "./node_modules/get-random-integer/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Car =
/*#__PURE__*/
function () {
  function Car() {
    _classCallCheck(this, Car);

    this.element = document.createElement('div');
    this.speed = Car.getRandomSpeed();
    this.element.className = "car car-".concat(Car.getRandomColor());
  }

  _createClass(Car, [{
    key: "remove",
    value: function remove() {
      this.removed = true;
      this.element.remove();
    }
  }, {
    key: "left",
    set: function set(value) {
      this.element.style.left = Number(value) + 'px';
    }
  }, {
    key: "bottom",
    get: function get() {
      return parseFloat(this.element.style.bottom) || 0;
    },
    set: function set(value) {
      this.element.style.bottom = Number(value) + 'px';
    }
  }]);

  return Car;
}();

Car.height = 50;
Car.variants = 4;
Car.minSpeed = 0.5;
Car.maxSpeed = 0.5;

Car.getRandomSpeed = function () {
  return Math.random() * (Car.maxSpeed - Car.minSpeed) + Car.minSpeed;
};

Car.getRandomColor = function () {
  return Object(get_random_integer__WEBPACK_IMPORTED_MODULE_0__["default"])(0, Car.variants);
};

/* harmony default export */ __webpack_exports__["default"] = (Car);

/***/ }),

/***/ "./asia/traffic/index.js":
/*!*******************************!*\
  !*** ./asia/traffic/index.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _car__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./car */ "./asia/traffic/car.js");
/* harmony import */ var get_random_integer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-random-integer */ "./node_modules/get-random-integer/index.js");
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var Traffic =
/*#__PURE__*/
function () {
  function Traffic(game, config) {
    _classCallCheck(this, Traffic);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.config = Object.assign({
      minDelay: 1100,
      maxDelay: 2500,
      maxCars: 7,
      minCarSpeed: 0.6,
      maxCarSpeed: 1.6
    }, config);
    _car__WEBPACK_IMPORTED_MODULE_0__["default"].maxSpeed = this.config.maxCarSpeed;
    _car__WEBPACK_IMPORTED_MODULE_0__["default"].minSpeed = this.config.minCarSpeed;
    this.game = game;
    this.track = this.game.track;
    this.width = this.track.element.offsetWidth;
    this.intersector = this.game.intersector;
    this.cars = [];
    this.flowTimer;
    this.generationTimer;
  }

  _createClass(Traffic, [{
    key: "start",
    value: function start() {
      this.startFlow();
      this.startMoving();
    }
  }, {
    key: "stop",
    value: function stop() {
      var _this = this;

      clearInterval(this.flowTimer);
      clearTimeout(this.generationTimer);
      this.cars.forEach(function (car) {
        _this.game.intersector.stopWatcher(car.watcher);

        car.remove();
      });
      this.cars.length = 0;
    }
  }, {
    key: "startMoving",
    value: function startMoving() {
      var _this2 = this;

      this.flowTimer = setInterval(function () {
        _this2.cars = _this2.cars.filter(function (car) {
          return !car.removed;
        });

        _this2.cars.forEach(function (car) {
          var newPosition = car.bottom - car.speed;

          if (newPosition < _this2.finishBottomPosition) {
            car.remove();

            _this2.game.intersector.stopWatcher(car.watcher);

            return;
          }

          car.bottom = newPosition;
        });
      }, 0);
    }
  }, {
    key: "startFlow",
    value: function startFlow() {
      var _this3 = this;

      var iteration = function iteration() {
        var delay = 100;

        if (_this3.cars.length < _this3.config.maxCars) {
          _this3.createCar();

          delay = _this3.delay;
        }

        _this3.generationTimer = setTimeout(function () {
          return iteration();
        }, delay);
      };

      iteration();
    }
  }, {
    key: "createCar",
    value: function createCar() {
      var _this4 = this;

      var car = new _car__WEBPACK_IMPORTED_MODULE_0__["default"]();
      this.cars.push(car);
      car.bottom = this.startBottomPosition;
      car.left = this.startLeftPosition;
      this.track.addCar(car);
      var watcher = this.game.intersector.watch(car.element, this.game.hero.element);
      car.watcher = watcher;
      car.element.on('intersector.events.collision', function () {
        return _this4._onCollision(car);
      });
    }
  }, {
    key: "_onCollision",
    value: function _onCollision(car) {
      car.remove();
      this.trigger('accident');
    }
  }, {
    key: "startBottomPosition",
    get: function get() {
      return this.game.field.offsetHeight - this.track.bottom + _car__WEBPACK_IMPORTED_MODULE_0__["default"].height;
    }
  }, {
    key: "finishBottomPosition",
    get: function get() {
      return -2 * _car__WEBPACK_IMPORTED_MODULE_0__["default"].height;
    }
  }, {
    key: "startLeftPosition",
    get: function get() {
      return Object(get_random_integer__WEBPACK_IMPORTED_MODULE_1__["default"])(20, this.width - 40);
    }
  }, {
    key: "delay",
    get: function get() {
      return Object(get_random_integer__WEBPACK_IMPORTED_MODULE_1__["default"])(this.config.minDelay, this.config.maxDelay);
    }
  }]);

  return Traffic;
}();

/* harmony default export */ __webpack_exports__["default"] = (Traffic);

/***/ }),

/***/ "./australia/attack-controller.js":
/*!****************************************!*\
  !*** ./australia/attack-controller.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enemy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enemy */ "./australia/enemy/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var attacks = [{
  delay: 3000,
  speed: 0.1,
  interval: 5000,
  count: 3
}, {
  delay: 3000,
  speed: 0.2,
  interval: 5000,
  count: 3
}, {
  delay: 3000,
  speed: 0.4,
  interval: 5000,
  count: 3
}];

var AttackController =
/*#__PURE__*/
function () {
  function AttackController(game) {
    _classCallCheck(this, AttackController);

    this.game = game;
    this.index = -1;
    this.timer;
    this.pause = true;
  }

  _createClass(AttackController, [{
    key: "start",
    value: function start() {
      this.pause = false;
      this.startAttackTimer();
    }
  }, {
    key: "startAttackTimer",
    value: function startAttackTimer() {
      var _this = this;

      this.index++;
      var attack = attacks[this.index];

      if (!attack) {
        this.game.trigger('finishAttacks');
        return;
      }

      this.timer = setTimeout(function () {
        _this.game.attacked = true;

        _this.startAttack();
      }, attack.delay);
    }
  }, {
    key: "stop",
    value: function stop() {
      this.pause = true;
      this.game.attacked = false;
      clearTimeout(this.timer);
    }
  }, {
    key: "reset",
    value: function reset() {
      this.stop();
      this.index = 0;
    }
  }, {
    key: "startAttack",
    value: function startAttack() {
      var _this2 = this;

      this.game.trigger('startAttack');
      var attack = attacks[this.index];
      var count = 0;
      var attackInterval = setInterval(function () {
        if (_this2.pause) {
          clearInterval(attackInterval);
          return;
        }

        if (count >= attack.count) {
          clearInterval(attackInterval);

          _this2.game.trigger('finishAttack');

          _this2.startAttackTimer();

          return;
        }

        var lineIndex = Math.floor(Math.random() * 3);
        var line = _this2.game.lines[lineIndex];
        var enemy = new _enemy__WEBPACK_IMPORTED_MODULE_0__["default"]();
        count++;
        enemy.right = -120;
        enemy.el.style.right = enemy.right + 'px';
        line.element.appendChild(enemy.el);
        line.enemies.push(enemy);
        var enemyInterval = setInterval(function () {
          if (enemy.removed || enemy.right >= 600) {
            clearInterval(enemyInterval);
          } else {
            enemy.right += attack.speed;
            enemy.el.style.right = enemy.right + 'px';
          }
        }, 10);
      }, attack.interval);
    }
  }, {
    key: "count",
    get: function get() {
      return this._count || 0;
    },
    set: function set(value) {
      this._count = value;
    }
  }]);

  return AttackController;
}();

/* harmony default export */ __webpack_exports__["default"] = (AttackController);

/***/ }),

/***/ "./australia/enemy/index.js":
/*!**********************************!*\
  !*** ./australia/enemy/index.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Enemy =
/*#__PURE__*/
function () {
  function Enemy(lifes) {
    _classCallCheck(this, Enemy);

    this.el = this.render();
    this.lifes = 4;
  }

  _createClass(Enemy, [{
    key: "render",
    value: function render() {
      var el = document.createElement('div');
      el.classList.add('enemy');
      return el;
    }
  }, {
    key: "remove",
    value: function remove() {
      this.el.remove();
    }
  }, {
    key: "kill",
    value: function kill() {
      this.removed = true;
      this.remove();
    }
  }, {
    key: "lifes",
    get: function get() {
      return this._lifes;
    },
    set: function set(value) {
      var _this = this;

      var oldLifes = this.lifes;
      this._lifes = value;
      this.el.setAttribute('data-lifes', value);

      if (this._lifes < oldLifes) {
        this.el.classList.add('shot');
        setTimeout(function () {
          return _this.el.classList.remove('shot');
        }, 150);
      }
    }
  }]);

  return Enemy;
}();

/* harmony default export */ __webpack_exports__["default"] = (Enemy);

/***/ }),

/***/ "./australia/index.css":
/*!*****************************!*\
  !*** ./australia/index.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./australia/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./australia/index.js":
/*!****************************!*\
  !*** ./australia/index.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./line */ "./australia/line/index.js");
/* harmony import */ var _plant_board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plant/board */ "./australia/plant/board.js");
/* harmony import */ var _set_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./set-controller */ "./australia/set-controller.js");
/* harmony import */ var _attack_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attack-controller */ "./australia/attack-controller.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index.css */ "./australia/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../game */ "./game/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }









var AustraliaGame =
/*#__PURE__*/
function () {
  function AustraliaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AustraliaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_5__["default"](this);
    this._startMoney = config.money || 90;
    this._money = 0;
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_6__["GameTable"]({
      "money": {
        name: "Деньги",
        value: 0
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_6__["GameField"](element, this.table.element);
    this.lines = [];

    for (var i = 0; i < 3; i++) {
      var line = new _line__WEBPACK_IMPORTED_MODULE_0__["default"](this, {
        index: i
      });
      this.field.appendChild(line.element);
      this.lines.push(line);
    }

    this.plantsBoard = new _plant_board__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.field.appendChild(this.plantsBoard.element);
    this.setController = new _set_controller__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.attackController = new _attack_controller__WEBPACK_IMPORTED_MODULE_3__["default"](this);
    this.on('finishAttacks', function () {
      if (!_this._hasEnemies()) {
        _this.win();

        return;
      }

      _this.monitored = true;
    });
    this.on('killEnemy', function () {
      if (_this.monitored) {
        if (!_this._hasEnemies()) {
          _this.win();
        }
      }
    });
    this.start();
  }

  _createClass(AustraliaGame, [{
    key: "_hasEnemies",
    value: function _hasEnemies() {
      return this.lines.some(function (line) {
        return line.enemies.length > 0;
      });
    }
  }, {
    key: "start",
    value: function start() {
      this.money = this._startMoney;
      this.setController.start();
      this.attackController.start();
    }
  }, {
    key: "win",
    value: function win() {
      this.trigger("win", this.money * 3 / 2 + 100);
    }
  }, {
    key: "lose",
    value: function lose() {
      var _this2 = this;

      this.monitored = false;
      this.setController.reset();
      this.attackController.reset();
      this.table.update({
        "money": this._startMoney
      });
      this.field.onLose(function () {
        return _this2.start();
      });
    }
  }, {
    key: "money",
    get: function get() {
      return this._money || 0;
    },
    set: function set(value) {
      this._money = value;
      this.table.update({
        "money": this._money
      });
    }
  }, {
    key: "attacked",
    get: function get() {
      return this._attacked;
    },
    set: function set(value) {
      var _this3 = this;

      this._attacked = Boolean(value);
      this.lines.forEach(function (line) {
        line.attacked = _this3._attacked;
      });
    }
  }]);

  return AustraliaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AustraliaGame);

/***/ }),

/***/ "./australia/line/index.js":
/*!*********************************!*\
  !*** ./australia/line/index.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _spot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./spot */ "./australia/line/spot.js");
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var Line =
/*#__PURE__*/
function () {
  function Line(game, config) {
    var _this = this;

    _classCallCheck(this, Line);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.game = game;
    this.index = config.index + 1;
    this.spots = [];
    this.element = this.render();
    this.game.on('startAttack', function () {
      return _this._onAttack();
    });
    this.enemies = [];
    this.bullets = [];
    this.checkTimer;
  }

  _createClass(Line, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var element = document.createElement('div');
      element.classList.add('line');
      element.setAttribute('data-index', this.index);
      element.style.bottom = (this.index - 1) * 100 + 'px';

      var _loop = function _loop(i) {
        var spot = new _spot__WEBPACK_IMPORTED_MODULE_0__["default"](i, _this2);

        _this2.spots.push(spot);

        spot.element.addEventListener('click', function () {
          if (_this2.active) {
            _this2._onSelectSpot(spot);
          }
        });
        element.appendChild(spot.element);
      };

      for (var i = 0; i < 5; i++) {
        _loop(i);
      }

      return element;
    }
  }, {
    key: "activate",
    value: function activate() {
      this.active = true;

      this._run();

      this._startCheck();
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.active = false;

      this._stopCheck();

      this.spots.forEach(function (spot) {
        if (spot.plant) spot.plant.stop();
      });
      this.enemies.length = 0;
      this.bullets.length = 0;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.active = false;

      this._stopCheck();

      this.bullets.forEach(function (bullet) {
        bullet.removed = true;
      });
      this.bullets.length = 0;
      this.spots.forEach(function (spot) {
        if (spot.plant) spot.plant.remove();
      });
      this.enemies.forEach(function (enemy) {
        enemy.remove();
      });
      this.enemies.length = 0;
    }
  }, {
    key: "_onSelectSpot",
    value: function _onSelectSpot(spot) {
      if (spot.plant) return;
      this.game.trigger('selectSpot', spot);
    }
  }, {
    key: "_onAttack",
    value: function _onAttack() {
      var _this3 = this;

      this.spots.forEach(function (spot) {
        if (spot.plant) {
          spot.plant.activate(_this3);
        }
      });
    }
  }, {
    key: "_run",
    value: function _run() {
      var _this4 = this;

      this.cycleTimer = setInterval(function () {
        _this4.enemies.forEach(function (enemy) {
          if (enemy.el.offsetLeft <= 0) {
            _this4.game.lose();

            clearInterval(_this4.cycleTimer);
          }

          var enemyRect = enemy.el.getBoundingClientRect();

          _this4.bullets.forEach(function (bullet) {
            var bulletRect = bullet.getBoundingClientRect();

            if (bulletRect.right > enemyRect.left) {
              enemy.lifes = enemy.lifes - bullet.shot;
              bullet.remove();
              bullet.removed = true;

              if (enemy.lifes <= 0) {
                enemy.kill();

                var index = _this4.enemies.indexOf(enemy);

                if (index !== -1) _this4.enemies.splice(index, 1);

                _this4.game.trigger('killEnemy');

                _this4.game.points = _this4.game.points + 1;
              }
            }
          });

          _this4.bullets = _this4.bullets.filter(function (bullet) {
            return !bullet.removed;
          });
        });
      }, 10);
    }
  }, {
    key: "_startCheck",
    value: function _startCheck() {
      var _this5 = this;

      this.checkTimer = setInterval(function () {
        var plants = _this5.spots.filter(function (spot) {
          return spot.plant;
        }).map(function (spot) {
          return spot.plant;
        });

        _this5.enemies.forEach(function (enemy) {
          var enemyRect = enemy.el.getBoundingClientRect();
          plants.forEach(function (plant) {
            var plantRect = plant.view.getBoundingClientRect();
            if (enemyRect.left >= plantRect.right) return;
            plant.kill();
            _this5.game.points = _this5.game.points - 0.5;
          });
        });
      }, 1000);
    }
  }, {
    key: "_stopCheck",
    value: function _stopCheck() {
      clearInterval(this.checkTimer);
    }
  }, {
    key: "active",
    get: function get() {
      return this._active;
    },
    set: function set(value) {
      this._active = Boolean(value);
    }
  }]);

  return Line;
}();

/* harmony default export */ __webpack_exports__["default"] = (Line);

/***/ }),

/***/ "./australia/line/spot.js":
/*!********************************!*\
  !*** ./australia/line/spot.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Spot =
/*#__PURE__*/
function () {
  function Spot(index, line) {
    _classCallCheck(this, Spot);

    this.index = index;
    this.line = line;
    this.element = this.render();
  }

  _createClass(Spot, [{
    key: "render",
    value: function render() {
      var spot = document.createElement('div');
      spot.classList.add('spot');
      spot.setAttribute('data-index', this.index + 1);
      spot.style.left = this.index * 100 + 50 + 'px';
      return spot;
    }
  }, {
    key: "plant",
    get: function get() {
      return this._plant;
    },
    set: function set(plant) {
      var _this = this;

      this._plant = plant;
      var view = this._plant.view;
      this.element.appendChild(view);

      this._plant.on('killed', function () {
        _this._plant = null;
        view.remove();
      });
    }
  }]);

  return Spot;
}();

/* harmony default export */ __webpack_exports__["default"] = (Spot);

/***/ }),

/***/ "./australia/plant/board.js":
/*!**********************************!*\
  !*** ./australia/plant/board.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
/* harmony import */ var _plant_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plant.base */ "./australia/plant/plant.base.js");
/* harmony import */ var _plant_power__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plant.power */ "./australia/plant/plant.power.js");
/* harmony import */ var _plant_money__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./plant.money */ "./australia/plant/plant.money.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }






var Board =
/*#__PURE__*/
function () {
  function Board(game) {
    _classCallCheck(this, Board);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](this);
    this.game = game;
    this.plants = [_plant_money__WEBPACK_IMPORTED_MODULE_3__["default"], _plant_base__WEBPACK_IMPORTED_MODULE_1__["default"], _plant_power__WEBPACK_IMPORTED_MODULE_2__["default"]];
    this.element = this.render();
  }

  _createClass(Board, [{
    key: "render",
    value: function render() {
      var _this = this;

      var element = document.createElement('div');
      element.classList.add('plants-board');
      this.plants.forEach(function (plant, index) {
        var preview = plant.getPreview();
        plant.preview = preview;
        preview.addEventListener('click', function () {
          if (_this.active) {
            console.log('select plant', plant);

            _this._onSelect(plant);
          }
        });
        element.appendChild(preview);
      });
      return element;
    }
  }, {
    key: "activate",
    value: function activate() {
      console.log('activate plants board');
      this.active = true;
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      console.log('deactivate plants board');
      this.active = false;
    }
  }, {
    key: "_onSelect",
    value: function _onSelect(plant) {
      if (this.selected) {
        this.selected.preview.classList.remove("active");
      }

      this.selected = plant;
      plant.preview.classList.add("active");
      this.game.trigger('selectPlant');
    }
  }, {
    key: "active",
    get: function get() {
      return this._active;
    },
    set: function set(value) {
      this._active = Boolean(value);
      this.element.classList.toggle('active', this._active);
    }
  }, {
    key: "selected",
    get: function get() {
      return this._selected;
    },
    set: function set(plantClass) {
      this._selected = plantClass;
    }
  }, {
    key: "selectedPlant",
    get: function get() {
      if (this._selected) {
        return new this._selected();
      }
    }
  }]);

  return Board;
}();

/* harmony default export */ __webpack_exports__["default"] = (Board);

/***/ }),

/***/ "./australia/plant/index.js":
/*!**********************************!*\
  !*** ./australia/plant/index.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var counter = 0;

var Plant =
/*#__PURE__*/
function () {
  function Plant() {
    _classCallCheck(this, Plant);

    this.index = ++counter;
    new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](this);
  }

  _createClass(Plant, [{
    key: "renderView",
    value: function renderView() {
      var view = document.createElement('div');
      view.className = 'plant-view plant';
      view.setAttribute('data-plant', this.constructor.plantName);
      return view;
    }
  }, {
    key: "execute",
    value: function execute(line) {}
  }, {
    key: "activate",
    value: function activate(line) {
      console.log('ACTIVATE', this.executed);
      if (this.executed) return;
      this.executed = true;
      this.execute(line);
    }
  }, {
    key: "stop",
    value: function stop() {
      this.stopped = true;
      clearInterval(this.executeTimer);
    }
  }, {
    key: "kill",
    value: function kill() {
      this.stop();
      this.trigger('killed');
    }
  }, {
    key: "remove",
    value: function remove() {
      this.stop();
      this.view.remove();
    }
  }, {
    key: "view",
    get: function get() {
      if (!this._view) {
        this._view = this.renderView();
      }

      return this._view;
    }
  }, {
    key: "price",
    get: function get() {
      return this.constructor.price;
    }
  }], [{
    key: "getPreview",
    value: function getPreview() {
      var el = document.createElement('div');
      el.classList.add('plant-preview');
      el.classList.add('plant');
      el.setAttribute('data-plant', this.plantName);
      var price = document.createElement('div');
      price.classList.add('plant-preview__price');
      price.textContent = this.price;
      el.appendChild(price);
      return el;
    }
  }]);

  return Plant;
}();

Plant.plantName = "plant";
/* harmony default export */ __webpack_exports__["default"] = (Plant);

/***/ }),

/***/ "./australia/plant/plant.base.js":
/*!***************************************!*\
  !*** ./australia/plant/plant.base.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ "./australia/plant/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var PlantBase =
/*#__PURE__*/
function (_Plant) {
  _inherits(PlantBase, _Plant);

  function PlantBase() {
    var _getPrototypeOf2;

    var _this;

    var shot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

    _classCallCheck(this, PlantBase);

    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      data[_key - 1] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlantBase)).call.apply(_getPrototypeOf2, [this].concat(data)));
    _this.shot = shot;
    return _this;
  }

  _createClass(PlantBase, [{
    key: "execute",
    value: function execute(line) {
      console.log('iteration', this.index);
      this.line = line;

      this._iterate();
    }
  }, {
    key: "_iterate",
    value: function _iterate() {
      var _this2 = this;

      var bullet = this._createBullet();

      this.line.element.appendChild(bullet);

      this._moveBullet(bullet);

      this.line.bullets.push(bullet);
      this.timeout = setTimeout(function () {
        if (_this2.stopped) return;

        _this2._iterate();
      }, PlantBase.executeInterval);
    }
  }, {
    key: "_createBullet",
    value: function _createBullet() {
      var el = document.createElement('div');
      el.className = "plant-bullet " + this.constructor.plantName;
      el.left = this.view.parentElement.offsetLeft + this.view.offsetWidth - 30;
      el.style.left = el.left + 'px';
      el.shot = this.shot;
      return el;
    }
  }, {
    key: "_moveBullet",
    value: function _moveBullet(bullet) {
      var _this3 = this;

      bullet.timer = setInterval(function () {
        bullet.left = bullet.left + 4;
        bullet.style.left = bullet.left + 'px';

        if (bullet.left > 600) {
          clearInterval(bullet.timer);
          bullet.remove();

          var index = _this3.line.bullets.indexOf(bullet);

          if (index !== -1) _this3.line.bullets.splice(index, 1);
        }
      }, 10);
    }
  }]);

  return PlantBase;
}(___WEBPACK_IMPORTED_MODULE_0__["default"]);

PlantBase.plantName = "base";
PlantBase.price = 100;
PlantBase.executeInterval = 2000;
/* harmony default export */ __webpack_exports__["default"] = (PlantBase);

/***/ }),

/***/ "./australia/plant/plant.money.js":
/*!****************************************!*\
  !*** ./australia/plant/plant.money.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ "./australia/plant/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var PlantMoney =
/*#__PURE__*/
function (_Plant) {
  _inherits(PlantMoney, _Plant);

  function PlantMoney() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, PlantMoney);

    for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {
      data[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlantMoney)).call.apply(_getPrototypeOf2, [this].concat(data)));
    _this.moneyTimer;
    return _this;
  }

  _createClass(PlantMoney, [{
    key: "renderView",
    value: function renderView() {
      var _this2 = this;

      var view = _get(_getPrototypeOf(PlantMoney.prototype), "renderView", this).call(this);

      var bg = document.createElement('div');
      bg.className = 'bg';
      view.appendChild(bg);
      this.bg = bg;
      view.addEventListener('click', function () {
        if (_this2.ready) {
          _this2.line.game.money = _this2.line.game.money + PlantMoney.price;
          _this2.ready = false;
          _this2.bg.style.height = 0;

          _this2._startTimer();
        }
      });
      return view;
    }
  }, {
    key: "execute",
    value: function execute(line) {
      this.line = line;

      this._startTimer();
    }
  }, {
    key: "_startTimer",
    value: function _startTimer() {
      var _this3 = this;

      this.startTime = Date.now();
      this.moneyTimer = setTimeout(function () {
        clearInterval(_this3.updateTimer);
        _this3.ready = true;
      }, PlantMoney.executeInterval);
      this.updateTimer = setInterval(function () {
        var now = Date.now();
        var percent = (now - _this3.startTime) * 100 / (PlantMoney.executeInterval - 5);
        _this3.bg.style.height = percent + '%';
      }, 100);
    }
  }, {
    key: "ready",
    get: function get() {
      return this._ready;
    },
    set: function set(value) {
      this._ready = value;

      if (this._ready) {
        this.view.setAttribute('data-ready', '');
      } else {
        this.view.removeAttribute('data-ready');
      }
    }
  }]);

  return PlantMoney;
}(___WEBPACK_IMPORTED_MODULE_0__["default"]);

PlantMoney.plantName = "money";
PlantMoney.price = 50;
PlantMoney.executeInterval = 5000;
/* harmony default export */ __webpack_exports__["default"] = (PlantMoney);

/***/ }),

/***/ "./australia/plant/plant.power.js":
/*!****************************************!*\
  !*** ./australia/plant/plant.power.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _plant_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plant.base */ "./australia/plant/plant.base.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var PlantPower =
/*#__PURE__*/
function (_PlantBase) {
  _inherits(PlantPower, _PlantBase);

  function PlantPower() {
    var _getPrototypeOf2;

    _classCallCheck(this, PlantPower);

    for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {
      data[_key] = arguments[_key];
    }

    return _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlantPower)).call.apply(_getPrototypeOf2, [this, 2].concat(data)));
  }

  return PlantPower;
}(_plant_base__WEBPACK_IMPORTED_MODULE_0__["default"]);

PlantPower.plantName = "power";
PlantPower.price = 300;
/* harmony default export */ __webpack_exports__["default"] = (PlantPower);

/***/ }),

/***/ "./australia/set-controller.js":
/*!*************************************!*\
  !*** ./australia/set-controller.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var SetController =
/*#__PURE__*/
function () {
  function SetController(game) {
    var _this = this;

    _classCallCheck(this, SetController);

    this.game = game;
    this.pause = true;
    this.game.on('selectPlant', function () {
      return _this._onSelectPlant();
    });
    this.game.on('selectSpot', function (spot) {
      return _this._onSelectSpot(spot);
    });
  }

  _createClass(SetController, [{
    key: "start",
    value: function start() {
      this.game.plantsBoard.activate();
      this.game.lines.forEach(function (line) {
        return line.activate();
      });
      this.pause = false;
    }
  }, {
    key: "stop",
    value: function stop() {
      this.game.lines.forEach(function (line) {
        return line.deactivate();
      });
      this.pause = true;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.game.lines.forEach(function (line) {
        return line.reset();
      });
      this.pause = true;
    }
  }, {
    key: "_onSelectPlant",
    value: function _onSelectPlant() {
      var plant = this.game.plantsBoard.selected;
      console.log('plant', plant);
    }
  }, {
    key: "_onSelectSpot",
    value: function _onSelectSpot(spot) {
      var plant = this.game.plantsBoard.selectedPlant;
      if (!plant) return;
      console.log(plant.price);

      if (plant.price <= this.game.money) {
        this.game.money -= plant.price;
        spot.plant = plant;
        if (this.game.attacked) plant.activate(spot.line);
      } else {
        console.warn('Недостаточно денег');
      }
    }
  }, {
    key: "pause",
    get: function get() {
      return this._pause;
    },
    set: function set(value) {
      this._pause = Boolean(value);
    }
  }]);

  return SetController;
}();

/* harmony default export */ __webpack_exports__["default"] = (SetController);

/***/ }),

/***/ "./europe/cards.js":
/*!*************************!*\
  !*** ./europe/cards.js ***!
  \*************************/
/*! exports provided: cards, images */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cards", function() { return cards; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "images", function() { return images; });
var cards = [{
  text: 'Париж',
  value: 'france'
}, {
  text: 'Франция',
  value: 'france'
}, {
  text: 'Брюссель',
  value: 'belgium'
}, {
  text: 'Бельгия',
  value: 'belgium'
}, {
  text: 'Мадрид',
  value: 'spane'
}, {
  text: 'Испания',
  value: 'spane'
}, {
  text: 'Афины',
  value: 'greece'
}, {
  text: 'Греция',
  value: 'greece'
}, {
  text: 'Дублин',
  value: 'ireland'
}, {
  text: 'Ирландия',
  value: 'ireland'
}, {
  text: 'Прага',
  value: 'chezh'
}, {
  text: 'Чехия',
  value: 'chezh'
}, {
  text: 'Осло',
  value: 'norway'
}, {
  text: 'Норвегия',
  value: 'norway'
}, {
  text: 'Варшава',
  value: 'poland'
}, {
  text: 'Польша',
  value: 'poland'
}, {
  text: 'Вильнюс',
  value: 'lithuania'
}, {
  text: 'Литва',
  value: 'lithuania'
}, {
  text: 'Скопье',
  value: 'macedonia'
}, {
  text: 'Македония',
  value: 'macedonia'
}];
var images = {
  'france': {
    img: 'img/compromat/1.jpeg',
    text: 'Гладил полотенчики!'
  },
  'belgium': {
    img: 'img/compromat/2.jpg',
    text: 'Плескался в ванной с пеной и резиновым утенком!'
  },
  'spane': {
    img: 'img/compromat/2.jpg_large',
    text: 'Ходил на быстрые свидания!'
  },
  'greece': {
    img: 'img/compromat/3.jpg',
    text: 'Возил куколку в коляске!'
  },
  'ireland': {
    img: 'img/compromat/4.jpg',
    text: 'Читал близнецам сказки!'
  },
  'chezh': {
    img: 'img/compromat/5.jpg',
    text: 'Делал добрые дела!'
  },
  'norway': {
    img: 'img/compromat/6.jpg',
    text: 'Играл с котятами!'
  },
  'poland': {
    img: 'img/compromat/7.jpg',
    text: 'Дирижировал оркестром!'
  },
  'lithuania': {
    img: 'img/compromat/8.jpg',
    text: 'Питался фастфудом!'
  },
  'macedonia': {
    img: 'img/compromat/9.jpg',
    text: 'Мыл тарелочки!'
  }
};


/***/ }),

/***/ "./europe/index.css":
/*!**************************!*\
  !*** ./europe/index.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./europe/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./europe/index.js":
/*!*************************!*\
  !*** ./europe/index.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cards */ "./europe/cards.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "./europe/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var clicks = 0;

var EuropeGame =
/*#__PURE__*/
function () {
  function EuropeGame(element) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, EuropeGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.field = element;
    this.cards = [];
    var width = config.width || 5;
    var height = config.height || 4;
    this.map = this.createRandomMap(_cards__WEBPACK_IMPORTED_MODULE_0__["cards"], width, height);
    this.renderMap();
    this.selected = null;
    this.inProcess = false;
    this.image = this.createImage();
    this.field.appendChild(this.image.wrapper);
  }

  _createClass(EuropeGame, [{
    key: "createImage",
    value: function createImage() {
      var wrapper = document.createElement('div');
      wrapper.className = "image";
      wrapper.style.display = "none";
      var imgWrapper = document.createElement('div');
      imgWrapper.className = "image__wrapper";
      wrapper.appendChild(imgWrapper);
      var img = document.createElement('img');
      imgWrapper.appendChild(img);
      var text = document.createElement('div');
      text.className = "image__text";
      wrapper.appendChild(text);
      var button = document.createElement('button');
      button.type = "button";
      button.textContent = "Продолжить";
      wrapper.appendChild(button);
      return {
        wrapper: wrapper,
        img: img,
        text: text,
        button: button
      };
    }
  }, {
    key: "createRandomMap",
    value: function createRandomMap(cards, width, height) {
      var combinations = [];
      var map = [];

      for (var y = 0; y < height; y++) {
        map.push([]);

        for (var x = 0; x < width; x++) {
          combinations.push([y, x]);
          map[y][x] = null;
        }
      }

      var counter = 0;

      while (combinations.length) {
        var card = cards[counter];
        if (!card) break;
        var random = Math.floor(Math.random() * combinations.length);
        var position = combinations[random];
        map[position[0]][position[1]] = card;
        combinations.splice(random, 1);
        counter++;
      }

      return map;
    }
  }, {
    key: "renderMap",
    value: function renderMap() {
      var _this = this;

      for (var y = 0; y < this.map.length; y++) {
        var row = document.createElement('div');
        row.className = 'row';

        var _loop = function _loop(x) {
          var cell = document.createElement('div');
          cell.className = 'cell';
          var card = _this.map[y][x];
          var $card = document.createElement('div');
          $card.className = "card";
          var text = document.createElement('span');
          text.textContent = card.text;
          $card.appendChild(text);
          $card.value = card.value;
          $card.clicks = 0;
          $card.setAttribute('data-value', card.value);
          $card.setAttribute('data-state', card.state);

          _this.cards.push($card);

          $card.addEventListener('click', function () {
            return _this.onCardClick($card);
          });
          cell.appendChild($card);
          row.appendChild(cell);
        };

        for (var x = 0; x < this.map[0].length; x++) {
          _loop(x);
        }

        this.field.appendChild(row);
      }
    }
  }, {
    key: "showImage",
    value: function showImage(img) {
      var _this2 = this;

      this.image.img.src = img.img;
      this.image.text.innerHTML = img.text;
      this.image.wrapper.style.display = "";

      this.image.button.onclick = function () {
        _this2.image.wrapper.style.display = "none";
        if (!_this2.cards.length) _this2.win();
      };
    }
  }, {
    key: "onCardClick",
    value: function onCardClick(card) {
      var _this3 = this;

      if (card == this.selected || this.inProcess) return;
      if (card.removed) return;
      clicks++;
      card.classList.add('show');
      card.clicks++;
      this.inProcess = true;
      setTimeout(function () {
        if (_this3.selected) {
          if (_this3.selected.value == card.value) {
            _this3.selected.classList.add('right');

            card.classList.add('right');

            var index = _this3.cards.indexOf(_this3.selected);

            _this3.cards.splice(index, 1);

            index = _this3.cards.indexOf(card);

            _this3.cards.splice(index, 1);

            var points = Math.max(1, 15 - card.clicks - _this3.selected.clicks);
            _this3.points = _this3.points + points;
            setTimeout(function () {
              _this3.selected.removed = true;
              card.removed = true;

              _this3.selected.setAttribute('data-removed', '');

              card.setAttribute('data-removed', '');
              _this3.selected = null;
              _this3.inProcess = false;

              _this3.showImage(_cards__WEBPACK_IMPORTED_MODULE_0__["images"][card.value]);
            }, 400);
          } else {
            _this3.selected.classList.add('wrong');

            card.classList.add('wrong');
            setTimeout(function () {
              _this3.selected.classList.remove('selected');

              _this3.selected.classList.remove('show');

              _this3.selected.classList.remove('wrong');

              card.classList.remove('show');
              card.classList.remove('wrong');
              _this3.selected = null;
              _this3.inProcess = false;
            }, 400);
          }
        } else {
          _this3.selected = card;

          _this3.selected.classList.add('selected');

          _this3.selected.classList.add('show');

          _this3.inProcess = false;
        }
      }, 600);
    }
  }, {
    key: "win",
    value: function win() {
      this.trigger("win", 1000 / clicks * 2 + 500);
    }
  }]);

  return EuropeGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (EuropeGame);

/***/ }),

/***/ "./game/game-player/keyboard-mover.js":
/*!********************************************!*\
  !*** ./game/game-player/keyboard-mover.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var listen_keyboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! listen-keyboard */ "./node_modules/listen-keyboard/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var KeyboardMover = function KeyboardMover(mover, period) {
  var _this = this;

  _classCallCheck(this, KeyboardMover);

  this.mover = mover;
  this.listener = new listen_keyboard__WEBPACK_IMPORTED_MODULE_0__["default"](period);
  this.listener.on('LEFT', function () {
    return _this.mover.toLeft();
  });
  this.listener.on('RIGHT', function () {
    return _this.mover.toRight();
  });
  this.listener.on('UP', function () {
    return _this.mover.toUp();
  });
  this.listener.on('DOWN', function () {
    return _this.mover.toDown();
  });
};

/* harmony default export */ __webpack_exports__["default"] = (KeyboardMover);

/***/ }),

/***/ "./game/game-player/mover.js":
/*!***********************************!*\
  !*** ./game/game-player/mover.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Mover =
/*#__PURE__*/
function () {
  function Mover(element, config) {
    _classCallCheck(this, Mover);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](this);
    this.element = element;
    this._speed = {
      left: 0,
      right: 0,
      up: 0,
      down: 0
    };
    Object.assign(this._speed, config.speed);
    this.field = config.field;
    this.diff = {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    };
    Object.assign(this.diff, config.diff);
    this.pause = true;
  }

  _createClass(Mover, [{
    key: "canMove",
    value: function canMove(direction) {
      if (this.field) {
        var moverRect = this.element.getBoundingClientRect();
        var fieldRect = this.field.getBoundingClientRect();

        switch (direction) {
          case "left":
            if (moverRect.left - this.speed.left < fieldRect.left + this.diff.left) return false;
            break;

          case "right":
            if (moverRect.right + this.speed.right > fieldRect.right - this.diff.right) return false;
            break;

          case "up":
            if (moverRect.top - this.speed.up < fieldRect.top + this.diff.top) return false;
            break;

          case "down":
            if (moverRect.bottom + this.speed.down > fieldRect.bottom - this.diff.bottom) return false;
        }
      }

      return true;
    }
  }, {
    key: "toLeft",
    value: function toLeft() {
      if (this.pause) return;

      if (this.canMove("left")) {
        this.left = this.left - this.speed.left;
      } else {
        this.trigger("boundary", "left");
      }
    }
  }, {
    key: "toRight",
    value: function toRight() {
      if (this.pause) return;

      if (this.canMove("right")) {
        this.left = this.left + this.speed.right;
      } else {
        this.trigger("boundary", "right");
      }
    }
  }, {
    key: "toUp",
    value: function toUp() {
      if (this.pause) return;

      if (this.canMove("up")) {
        this.top = this.top - this.speed.up;
      } else {
        this.trigger("boundary", "up");
      }
    }
  }, {
    key: "toDown",
    value: function toDown() {
      if (this.pause) return;

      if (this.canMove("down")) {
        this.top = this.top + this.speed.down;
      } else {
        this.trigger("boundary", "down");
      }
    }
  }, {
    key: "left",
    get: function get() {
      return parseInt(this.element.style.left) || 0;
    },
    set: function set(value) {
      this.element.style.left = Number(value) + 'px';
    }
  }, {
    key: "top",
    get: function get() {
      return parseInt(this.element.style.top) || 0;
    },
    set: function set(value) {
      this.element.style.top = Number(value) + 'px';
    }
  }, {
    key: "speed",
    get: function get() {
      return this._speed;
    },
    set: function set(speed) {
      if (speed.left) this._speed.left = speed.left;
      if (speed.right) this._speed.right = speed.right;
      if (speed.up) this._speed.up = speed.up;
      if (speed.down) this._speed.down = speed.down;
    }
  }]);

  return Mover;
}();

/* harmony default export */ __webpack_exports__["default"] = (Mover);

/***/ }),

/***/ "./game/index.js":
/*!***********************!*\
  !*** ./game/index.js ***!
  \***********************/
/*! exports provided: GameTable, GameField, Intersector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_game_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/game.table */ "./game/modules/game.table.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GameTable", function() { return _modules_game_table__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _modules_game_field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/game.field */ "./game/modules/game.field.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GameField", function() { return _modules_game_field__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _modules_intersector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/intersector */ "./game/modules/intersector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Intersector", function() { return _modules_intersector__WEBPACK_IMPORTED_MODULE_2__["default"]; });






/***/ }),

/***/ "./game/modules/game.field.css":
/*!*************************************!*\
  !*** ./game/modules/game.field.css ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./game.field.css */ "./node_modules/css-loader/index.js?!./game/modules/game.field.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./game/modules/game.field.js":
/*!************************************!*\
  !*** ./game/modules/game.field.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_field_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game.field.css */ "./game/modules/game.field.css");
/* harmony import */ var _game_field_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_game_field_css__WEBPACK_IMPORTED_MODULE_0__);


var createMask = function createMask() {
  var el = document.createElement("div");
  el.classList.add("game-field__mask");
  el.style.display = "none";
  return el;
};

var createField = function createField() {
  var el = document.createElement("div");
  el.style.position = "relative";
  el.classList.add("game-field");
  return el;
};

var GameField = function GameField(el, table) {
  el.classList.add('game-wrapper');

  if (table) {
    el.appendChild(table);
  }

  var clickCallback;
  var field = createField();
  el.appendChild(field);
  var mask = createMask();
  mask.addEventListener("click", function () {
    return field.start();
  });
  field.appendChild(mask);

  field.onLose = function (callback) {
    clickCallback = callback;
    mask.style.display = "";
  };

  field.start = function () {
    mask.style.display = "none";
    if (typeof clickCallback === "function") clickCallback();
  };

  return field;
};

/* harmony default export */ __webpack_exports__["default"] = (GameField);

/***/ }),

/***/ "./game/modules/game.table.js":
/*!************************************!*\
  !*** ./game/modules/game.table.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var GameTable = function GameTable(params) {
  var table = document.createElement("table");
  table.classList.add("game-table");
  var nodes = {};

  for (var paramName in params) {
    var param = params[paramName];
    var row = document.createElement("tr");
    var name = document.createElement("td");
    name.textContent = param.name;
    row.appendChild(name);
    var value = document.createElement("td");
    value.textContent = param.value || 0;
    row.appendChild(value);
    nodes[paramName] = value;
    table.appendChild(row);
  }

  return {
    element: table,
    update: function update(data) {
      for (var _param in data) {
        var node = nodes[_param];
        if (node) node.textContent = data[_param];
      }
    }
  };
};

/* harmony default export */ __webpack_exports__["default"] = (GameTable);

/***/ }),

/***/ "./game/modules/intersector.js":
/*!*************************************!*\
  !*** ./game/modules/intersector.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


/**
 * Intersector
 * @class
 * @description определяет пересечение объектов
 */

var Intersector =
/*#__PURE__*/
function () {
  function Intersector() {
    _classCallCheck(this, Intersector);
  }

  _createClass(Intersector, [{
    key: "check",

    /**
     * Определяет пересечение объектов
     * @param {HTMLElement} obj1 первый объект
     * @param {HTMLElement} obj2 второй объект
     * @param {Number} [offset] минимальное перекрытие одного объекта другим
     * @returns {Boolean}
     */
    value: function check(obj1, obj2) {
      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (obj1.removed || obj2.removed) {
        clearInterval(this.timer);
        return;
      }

      var coords1 = obj1.getBoundingClientRect();
      var coords2 = obj2.getBoundingClientRect(); // второй объект выше первого

      if (coords1.top > coords2.bottom - offset) return false; // второй объект ниже первого

      if (coords1.bottom < coords2.top + offset) return false; // второй объект левее первого

      if (coords1.left > coords2.right - offset) return false; // второй объект правее первого

      if (coords1.right < coords2.left + offset) return false;
      return true;
    }
    /**
     * Периодически проверяет пересечение объектов
     * @param {GameObject} obj1 
     * @param {GameObject} obj2 
     * @param {Number} [period] периодичность проверки в мс
     */

  }, {
    key: "watch",
    value: function watch(obj1, obj2, offset) {
      var _this = this;

      var period = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 100;
      new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](obj1);
      new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](obj2);
      var timer = setInterval(function () {
        var places = _this.check(obj1, obj2, offset);

        if (places) {
          obj1.trigger(Intersector.events.collision, {
            object: obj2
          });
          obj2.trigger(Intersector.events.collision, {
            object: obj1
          });
        }
      }, period);
      return timer;
    }
  }, {
    key: "stopWatcher",
    value: function stopWatcher(watcher) {
      clearInterval(watcher);
    }
  }]);

  return Intersector;
}();
/**
 * @static
 */


Intersector.events = {
  collision: "intersector.events.collision"
};
/* harmony default export */ __webpack_exports__["default"] = (Intersector);

/***/ }),

/***/ "./game/player.js":
/*!************************!*\
  !*** ./game/player.js ***!
  \************************/
/*! exports provided: Mover, KeyboardMover */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player_mover__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game-player/mover */ "./game/game-player/mover.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Mover", function() { return _game_player_mover__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _game_player_keyboard_mover__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game-player/keyboard-mover */ "./game/game-player/keyboard-mover.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeyboardMover", function() { return _game_player_keyboard_mover__WEBPACK_IMPORTED_MODULE_1__["default"]; });





/***/ }),

/***/ "./node_modules/css-loader/index.js?!./africa/index.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./africa/index.css ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-africa .game-table {\n  width: 600px;\n}\n\n.game-africa .game-field {\n  position: relative;\n  height: 400px;\n  width: 600px;\n}\n\n.game-africa #hero {\n  position: absolute;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  \n  background-image: url('img/player.png');\n  background-position: left 50% bottom -5px;\n  z-index: 20;\n\n  width: 50px;\n  height: 50px;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./africa/map/index.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./africa/map/index.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-africa .ground {\n  position: absolute;\n  bottom: 0;\n  left: 0; right: 0;\n  height: 25px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background: url('img/sand.jpg');\n}\n\n.game-africa .coin {\n  position: absolute;\n  background-image: url('img/coin.png');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n.game-africa #map {\n  position: absolute;\n  background-image: url('img/bg.png');\n  background-position: left 0 bottom 10px;\n  background-size: auto var(--field-width);\n  background-repeat: repeat-x;\n}\n\n.game-africa .platform {\n  background: url('img/sand.jpg');\n}\n\n\n.game-africa .finish {\n  background-image: url('img/flower.png');\n  background-position: center;\n  background-size: 70px;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./africa/tribe/index.css":
/*!********************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./africa/tribe/index.css ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "#tribe {\n  position: absolute;\n  background-size: contain;\n  background-image: url('img/tribe.png');\n  background-size: 100%;\n  background-position: bottom;\n  background-repeat: no-repeat;\n  width: 100px;\n  height: 50px;\n  filter: hue-rotate(290deg) brightness(5);\n  transform: scaleX(-1);\n}\n\n#tribe.revert {\n  transform: none;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./america/index.css":
/*!***************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./america/index.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-america .block {\n  float: left;\n  height: 20px;\n  width: 20px;\n}\n\n.game-america .game-field {\n  background: white;\n  position: relative;\n  overflow: visible;\n}\n\n.game-america .game-field > div {\n  position: relative;\n  background: white;\n}\n\n.game-america .game-field:before {\n  content: '';\n  position: absolute;\n  background: black;\n  left: -20px;\n  right: -20px;\n  top: -20px;\n  bottom: 0px;\n  z-index: 0;\n}\n\n.game-america .block {\n  z-index: 20;\n}\n\n.game-america .wall {\n  background-color: #000;\n}\n\n.game-america .me {\n  position: relative;\n}\n\n.game-america .me:after {\n  background-color: #23afee;\n  border-radius: 100%;\n  content: '';\n  height: 20px;\n  position: absolute;\n  top: 0;\n  width: 20px;\n}\n\n.game-america .finish {\n  background-color: #f31d1d;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./antarctica/faller/penguin.css":
/*!***************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./antarctica/faller/penguin.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.penguin {\n  width: 35px;\n  height: 40px;\n\n  position: absolute;\n}\n\n.penguin:before {\n  content: '';\n  background-image: url('img/penguin.png');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  position: absolute;\n  left: -20px; \n  top: 0;\n\n  width: 75px;\n  height: 50px;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./antarctica/faller/snowflake.css":
/*!*****************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./antarctica/faller/snowflake.css ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".snowflake {\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-image: url('img/snowflake.png');\n\n  width: 30px;\n  height: 30px;\n\n  border-radius: 50%;\n\n  position: absolute;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./antarctica/index.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./antarctica/index.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-antarctica .game-field {\n  width: 500px;\n  height: 400px;\n  background-image: url('img/mounts.png');\n  overflow: hidden;\n}\n\n.game-antarctica .ground {\n  position: absolute;\n  left: 0; right: 0;\n  bottom: 0;\n  height: 40px;\n\n  background: url('img/ice.jpg') center / auto 40px repeat-x;\n}\n\n.game-antarctica #player {\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-image: url('img/player.png');\n\n  width: 64px;\n  height: 64px;\n\n  position: absolute;\n  bottom: 20px;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./asia/index.css":
/*!************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./asia/index.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.game-asia .car {\n  width: 30px;\n  height: 50px;\n\n  position: absolute;\n}\n\n.game-asia .car:before {\n  content: '';\n  background-image: url('img/green-car.png');\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  position: absolute;\n  left: -5px; \n  top: -6px;\n\n  width: 40px;\n  height: 72px;\n}\n\n.game-asia .car-1:before {\n  background-image: url('img/red-car.png');\n}\n\n.game-asia .car-2:before {\n  background-image: url('img/blue-car.png');\n}\n\n.game-asia .car-3:before {\n  background-image: url('img/yellow-car.png');\n}\n\n.game-asia #hero {\n  background-image: url('img/player.png');\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n\n  width: 64px;\n  height: 64px;\n\n  position: absolute;\n  z-index: 2;\n}\n\n.game-asia #track {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1;\n\n  height: 2500px;\n\n  background-color: #aaa;\n}\n\n.game-asia #track:before {\n  content: '';\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: 0;\n  top: 0;\n  width: 33%;\n  border-width: 6px;\n  border-style: none dashed;\n  border-color: white;\n}\n\n.game-asia #track .sign {\n  position: absolute;\n  right: 0;\n  left: 0;\n  width: 100%;\n  height: 5px;\n  align-items: center;\n  color: white;\n  font-size: 12px;\n  text-align: right;\n  padding-right: 25px;\n}\n\n.game-asia #track .sign:after {\n  content: '';\n  position: absolute;\n  width: 20px;\n  height: 5px;\n  right: 0;\n  top: 3px;\n  background: white;\n  margin-left: 5px;\n}\n\n.game-asia #track .finish {\n  position: absolute;\n  left: 0;\n  right: 0;\n  text-align: center;\n  color: white;\n}\n\n.game-asia #track .finish:after {\n  content: '';\n  display: block;\n  width: 100%;\n  height: 6px;\n  background: white;\n  margin-top: 4px;\n}\n\n\n\n\n\n.r-table {\n  width: var(--field-height);\n}\n\n.game-asia .r-table__points {\n  font-size: 0;\n}\n\n.game-asia .r-table__points:before, .game-asia .r-table__points .r-table__value {\n  font-size: 20px;\n}\n\n.game-asia .r-table__points:before {\n  content: 'Target: ';\n}\n\n.game-asia .r-table__points .r-table__value:after {\n  content: 'm';\n}\n\n#start, #win, #replay, #lose {\n  color: white;\n}\n\n#lose {\n  font-size: 1.5em;\n}\n\n.game-asia .game-field {\n  width: 400px;\n  height: 500px;\n  position: relative;\n  overflow: hidden;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./asia/track/index.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./asia/track/index.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "#track {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1;\n\n  height: 2500px;\n\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n#track:before {\n  content: '';\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: 0;\n  top: 0;\n  width: 33%;\n  border-width: 6px;\n  border-style: none dashed;\n  border-color: white;\n}\n\n#track .sign {\n  position: absolute;\n  right: 0;\n  left: 0;\n  width: 100%;\n  height: 5px;\n  align-items: center;\n  color: white;\n  font-size: 12px;\n  text-align: right;\n  padding-right: 25px;\n}\n\n#track .sign:after {\n  content: '';\n  position: absolute;\n  width: 20px;\n  height: 5px;\n  right: 0;\n  top: 3px;\n  background: white;\n  margin-left: 5px;\n}\n\n#track .finish {\n  position: absolute;\n  left: 0;\n  right: 0;\n  text-align: center;\n  color: white;\n}\n\n#track .finish:after {\n  content: '';\n  display: block;\n  width: 100%;\n  height: 6px;\n  background: white;\n  margin-top: 4px;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./australia/index.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./australia/index.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-australia .game-field {\n  width: 600px;\n  height: 400px;\n}\n\n\n.game-australia .enemy {\n  position: absolute;\n  bottom: 10px;\n  width: 120px;\n  height: 120px;\n  background-image: url('img/kengo.png');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center bottom;\n}\n\n.game-australia .enemy.shot {\n  filter: hue-rotate(120deg);\n}\n\n.game-australia .enemy[data-lifes=\"3\"] {\n  \n}\n\n.game-australia .enemy[data-lifes=\"2\"] {\n  \n}\n\n.game-australia .enemy[data-lifes=\"1\"] {\n  \n}\n\n.game-australia .line {\n  position: absolute;\n  left: 0; right: 0;\n  height: 90px;\n  background: #c5ba9f;\n}\n.game-australia .line[data-index=\"1\"] { z-index: 3; }\n.game-australia .line[data-index=\"2\"] { z-index: 2; }\n.game-australia .line[data-index=\"3\"] { z-index: 1; }\n.game-australia .spot {\n  position: absolute;\n  width: 100px;\n  height: 90px;\n  background-image: url(img/ground.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n}\n\n.game-australia .spot:hover {\n  opacity: 0.6;\n}\n\n.plants-board {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 80px;\n  background-image: url(img/wood.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  display: flex;\n}\n\n.plant.plant-preview {\n  width: 160px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  background-position: left 10px center;\n  cursor: pointer;\n}\n\n.plant-preview.active:after, .plant-preview:hover:after {\n  content: '';\n  position: absolute;\n  background: goldenrod;\n  opacity: 0.4;\n  top: 0; left: 0; bottom: 0; right: 0;\n}\n\n.plant-preview__price {\n  color: white;\n  padding-left: 95px;\n}\n\n.plant {\n  position: relative;\n\n  width: 100px;\n  height: 90px;\n\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 60px auto;\n}\n.plant[data-plant=\"base\"] {\n  background-image: url(img/base.gif);\n}\n.plant[data-plant=\"power\"] {\n  background-image: url(img/base.gif);\n  filter: hue-rotate(75deg);\n}\n.plant[data-plant=\"money\"] {\n\n  background-image: url(img/money.png);\n}\n.plant[data-plant=\"money\"] .bg {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: goldenrod;\n  opacity: 0.4;\n  cursor: pointer;\n  overflow: hidden;\n  \n}\n.plant[data-plant=\"money\"][data-ready] .bg {\n  opacity: 0.7;\n  box-shadow: 0 0 4px 1px goldenrod;\n}\n\n.plant-bullet {\n  position: absolute;\n  top: 15px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: #66fe6c;\n  box-shadow: 2px 2px 2px green;\n}\n.plant-bullet.power {\n  position: absolute;\n  top: 15px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: #00e8ff;\n  box-shadow: 2px 2px 2px blue;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./europe/index.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./europe/index.css ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-europe {\n  padding-top: 50px;\n}\n\n.game-europe .row {\n  display: flex;\n  justify-content: center;\n}\n\n.game-europe .cell {\n  width: 140px;\n  height: 125px;\n  padding: 5px;\n}\n\n.game-europe .card {\n  position: relative;\n  font-size: 12px;\n  width: 100%;\n  height: 100%;\n  font-size: 0;\n  background: url('img/back.png') center / cover no-repeat;\n  filter: grayscale(0.5);\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: white;\n}\n\n.game-europe .card:hover {\n  filter: grayscale(0);\n}\n\n.game-europe .card.show {\n  font-size: 12px;\n\n  background-position: center;\n  background-size: cover;\n}\n\n.game-europe .card.show:before {\n  background: black;\n  z-index: 0;\n}\n\n.game-europe .card span {\n  position: relative;\n  z-index: 2;\n}\n\n.game-europe .card:after, .card:before {\n  content: '';\n  position: absolute;\n  top: 0; bottom: 0;\n  left: 0; right: 0;\n  opacity: 0.5;\n}\n\n.game-europe .card.wrong:after {\n  background: red;\n}\n\n.game-europe .card.right:after {\n  background: green;\n}\n\n.game-europe .card.show[data-value=\"france\"] {\n  background-image: url('img/france.svg');\n}\n\n.game-europe .card.show[data-value=\"belgium\"] {\n  background-image: url('img/belgium.jpg');\n}\n\n.game-europe .card.show[data-value=\"spane\"] {\n  background-image: url('img/spane.jpg');\n}\n\n.game-europe .card.show[data-value=\"greece\"] {\n  background-image: url('img/greece.jpg');\n}\n\n.game-europe .card.show[data-value=\"ireland\"] {\n  background-image: url('img/ireland.jpg');\n}\n\n.game-europe .card.show[data-value=\"chezh\"] {\n  background-image: url('img/chezh.jpg');\n}\n\n.game-europe .card.show[data-value=\"norway\"] {\n  background-image: url('img/norway.jpg');\n}\n\n.game-europe .card.show[data-value=\"poland\"] {\n  background-image: url('img/poland.jpg');\n}\n\n.game-europe .card.show[data-value=\"lithuania\"] {\n  background-image: url('img/lithuania.jpg');\n}\n\n.game-europe .card.show[data-value=\"macedonia\"] {\n  background-image: url('img/macedonia.jpg');\n}\n\n.game-europe .card[data-removed]:before,\n.game-europe .card[data-removed]:after {\n  display: none;\n}\n\n.game-europe .card[data-removed] span {\n  font-size: 0;\n}\n\n.game-europe .image {\n  position: fixed;\n  top: 0; bottom: 0;\n  left: 0; right: 0;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.game-europe .image__wrapper {\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  position: relative;\n}\n\n.game-europe .image img {\n  max-width: calc(100% - 80px);\n  max-height: 100%;\n  position: absolute;\n  object-fit: contain;\n  object-position: center;\n}\n\n.game-europe .image__text {\n  margin-top: 20px;\n}\n\n.game-europe .image button {\n  margin: 40px 0;\n}\n\n.game-europe .image button {\n  position: relative;\n  outline: none;\n  border: none;\n  background: none;\n  height: 60px;\n  padding: 10px 30px;\n\n  background: var(--button-background);\n  border: 4px solid var(--button-border);\n\n  cursor: pointer;\n  font-family: 'Press Start 2P', cursive;\n  font-size: 16px;\n}\n\n.game-europe .image button:hover {\n  border-color: var(--content-background);\n}\n\n.game-europe .image button:before,\n.game-europe .image button:after,\n.game-europe .image button span:before,\n.game-europe .image button span:after {\n  content: '';\n  width: 4px;\n  height: 4px;\n  background-color:  var(--content-background);\n  position: absolute;\n  display: block;\n}\n\n.game-europe .image button:before,\n.game-europe .image button:after {\n  top: -4px;\n}\n\n.game-europe .image button span:before,\n.game-europe .image button span:after {\n  bottom: -4px;\n}\n\n.game-europe .image button:before,\n.game-europe .image button span:before {\n  left: -4px;\n}\n\n.game-europe .image button:after,\n.game-europe .image button span:after {\n  right: -4px;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./game/modules/game.field.css":
/*!*************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./game/modules/game.field.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-field {\n  overflow-x: hidden;\n}\n\n.game-field__mask {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.5) url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 24 24'%3E%3Cpath d='M9 12l-4.463 4.969-4.537-4.969h3c0-4.97 4.03-9 9-9 2.395 0 4.565.942 6.179 2.468l-2.004 2.231c-1.081-1.05-2.553-1.699-4.175-1.699-3.309 0-6 2.691-6 6h3zm10.463-4.969l-4.463 4.969h3c0 3.309-2.691 6-6 6-1.623 0-3.094-.65-4.175-1.699l-2.004 2.231c1.613 1.526 3.784 2.468 6.179 2.468 4.97 0 9-4.03 9-9h3l-4.537-4.969z' fill='white' /%3E%3C/svg%3E\") center no-repeat;\n  cursor: pointer;\n  z-index: 1000;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./src/index.css":
/*!***********************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./src/index.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ":root {\n  --body-background: black;\n  --content-background: white;\n  --content-border: transparent;\n  --content-color: black;\n  --button-background: lime;\n  --button-border: black;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Roboto Mono', sans-serif;\n  font-size: 20px;\n  background: var(--body-background) url(img/pixels.jpg);\n}\n\n.screen {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.screen__container {\n  width: 800px;\n  min-height: 500px;\n  background: var(--content-background);\n  color: var(--content-color);\n  padding: 40px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.screen__content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n}\n\n.screen__pic {\n  width: 300px;\n  height: 300px;\n  margin-right: 40px;\n  overflow: hidden;\n}\n\n[data-class=\"pizdrik\"] .screen__pic img {\n  position: relative; left: -2px;\n}\n\n.screen__description {\n  width: 460px;\n}\n\n.screen__description p {\n  margin: 10px 0;\n}\n\n.screen__title {\n  margin-bottom: 40px;\n  font-family: 'Press Start 2P', cursive;\n  font-size: 30px;\n  line-height: 1.6;\n}\n\n.screen__text {\n  line-height: 1.5;\n}\n\n.screen__footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 40px;\n}\n\nbutton {\n  position: relative;\n  outline: none;\n  border: none;\n  background: none;\n  height: 60px;\n  padding: 10px 30px;\n\n  background: var(--button-background);\n  border: 4px solid var(--button-border);\n\n  cursor: pointer;\n  font-family: 'Press Start 2P', cursive;\n  font-size: 16px;\n}\n\nbutton:hover {\n  border-color: var(--content-background);\n}\n\nbutton:before,\nbutton:after,\nbutton span:before,\nbutton span:after {\n  content: '';\n  width: 4px;\n  height: 4px;\n  background-color:  var(--content-background);\n  position: absolute;\n  display: block;\n}\n\nbutton:before,\nbutton:after {\n  top: -4px;\n}\n\nbutton span:before,\nbutton span:after {\n  bottom: -4px;\n}\n\nbutton:before,\nbutton span:before {\n  left: -4px;\n}\n\nbutton:after,\nbutton span:after {\n  right: -4px;\n}\n\n.quest-finish {\n  display: none;\n  position: fixed;\n  top: 0; bottom: 0;\n  left: 0; right: 0;\n  background: white;\n}\n\n.goods {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.good {\n  padding: 20px;\n  border: 5px solid;\n  width: 350px;\n  text-align: center;\n  margin: 10px;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n}\n\n.good__img {\n  margin: -20px -24px 10px;\n\n  height: 220px;\n  position: relative;\n}\n\n.good__img img {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: top;\n  top: 0;\n  left: 0;\n}\n\n.good__title {\n  margin-bottom: 10px;\n  flex-grow: 1;\n}\n\n.good__price {\n\n}\n\n.quest-points {\n  padding: 40px 20px;\n  text-align: center;\n}\n\n[data-points] {\n  font-weight: bold;\n}\n\n.screen__pic[data-map] {\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n.screen__pic[data-map=\"asia\"] {\n  background-image: url('img/map/india.png');\n}\n\n.screen__pic[data-map=\"europe\"] {\n  background-image: url('img/map/europe.png');\n}\n\n.screen__pic[data-map=\"africa\"] {\n  background-image: url('img/map/africa.png');\n}\n\n.screen__pic[data-map=\"australia\"] {\n  background-image: url('img/map/australia.jpg');\n}\n\n.game-wrapper {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n\n.game-table {\n  background: #aaa;\n\n  width: 400px;\n  padding: 40px;\n  margin-bottom: 40px;\n\n  font-family: 'Press Start 2P', cursive;\n  font-size: 20px;\n}\n\n.game-table td {\n  padding: 5px;\n}\n\n.input {\n  font-size: inherit;\n  font-family: inherit;\n  padding: 15px;\n  \n  position: relative;\n  \n  border: 4px solid var(--button-border);\n\n  cursor: pointer;\n  font-family: 'Press Start 2P', cursive;\n  font-size: 16px;\n  margin-top: 40px;\n}\n\nbutton[disabled], button[disabled]:hover {\n  opacity: 0.5;\n  border-color: transparent;\n}\n\n.input.success {\n  background: var(--button-background);\n}\n\nbutton.variant {\n  display: block;\n  width: 100%;\n  \n  margin: 20px 0;\n  background: lightgray;\n}\n\nbutton.variant.error {\n  border-color: red;\n}\n\nbutton.variant.success {\n  background: var(--button-background);\n}\n\n .message {\n  display: none;\n  text-align: center;\n  font-family: 'Roboto Mono', sans-serif;\n  font-size: 16px;\n  margin: 5px 0;\n}\n\nbutton.variant.error + .message {\n  display: block;\n}\n\n.screen[data-class=\"ship\"] .screen__text {\n  background: bisque;\n  padding: 40px;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media " + item[2] + "{" + content + "}";
      } else {
        return content;
      }
    }).join("");
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === "string") modules = [[null, modules, ""]];
    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];
      if (typeof id === "number") alreadyImportedModules[id] = true;
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      //  when a module is imported multiple times with different media queries.
      //  I hope this will never occur (Hey this way we have smaller bundles)

      if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),

/***/ "./node_modules/events-dispatch/index.js":
/*!***********************************************!*\
  !*** ./node_modules/events-dispatch/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Dispatcher; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Dispatcher =
/*#__PURE__*/
function () {
  function Dispatcher(object) {
    var _this = this;

    _classCallCheck(this, Dispatcher);

    this.callbacks = {};

    if (object) {
      object.on = function () {
        return _this.on.apply(_this, arguments);
      };

      object.once = function () {
        return _this.once.apply(_this, arguments);
      };

      object.off = function () {
        return _this.off.apply(_this, arguments);
      };

      object.trigger = function () {
        return _this.trigger.apply(_this, arguments);
      };
    }
  }

  _createClass(Dispatcher, [{
    key: "on",
    value: function on(eventName, callback) {
      if (!this.callbacks[eventName]) this.callbacks[eventName] = [];

      var cb = function cb(data) {
        return callback(data);
      };

      this.callbacks[eventName].push(cb);
    }
  }, {
    key: "once",
    value: function once(eventName, callback) {
      var _this2 = this;

      if (!this.callbacks[eventName]) this.callbacks[eventName] = [];

      var cb = function cb(data) {
        callback(data);

        _this2.off(eventName, cb);
      };

      this.callbacks[eventName].push(cb);
    }
  }, {
    key: "off",
    value: function off(eventName, callback) {
      if (this.callbacks[eventName]) {
        var index = this.callbacks[eventName].indexOf(callback);

        if (index !== -1) {
          this.callbacks[eventName].splice(index, 1);
        }
      }
    }
  }, {
    key: "trigger",
    value: function trigger(eventName, data) {
      var _this3 = this;

      var cbs = this.callbacks[eventName];

      if (cbs) {
        cbs.forEach(function (cb) {
          var off = function off() {
            return _this3.off(eventName, cb);
          };

          cb(data, off);
        });
      }
    }
  }]);

  return Dispatcher;
}();



/***/ }),

/***/ "./node_modules/get-random-integer/index.js":
/*!**************************************************!*\
  !*** ./node_modules/get-random-integer/index.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


var defaultMaxValue = 1;
var defaultMinValue = 0;
var typeError = "Random generator error: both min or max values must be numbers";
/* harmony default export */ __webpack_exports__["default"] = (function (min, max) {
  if (!max) {
    if (!min) {
      max = defaultMaxValue;
    } else {
      max = min;
    }

    min = defaultMinValue;
  }

  if (typeof min !== "number" || typeof max !== "number") {
    throw new Error(typeError);
  }

  return Math.floor(Math.random() * (max - min) + min);
});

/***/ }),

/***/ "./node_modules/listen-keyboard/index.js":
/*!***********************************************!*\
  !*** ./node_modules/listen-keyboard/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var KeyboardListener =
/*#__PURE__*/
function () {
  function KeyboardListener(period) {
    _classCallCheck(this, KeyboardListener);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](this);
    this.actions = [];
    this.setListeners();
    this.timer = null;
    this.timerInterval = period || 100; // ms
  }

  _createClass(KeyboardListener, [{
    key: "setListeners",
    value: function setListeners() {
      var _this = this;

      document.addEventListener('keydown', function (e) {
        var code = e.keyCode;
        var action = KeyboardListener.codes[code];

        if (action) {
          var index = _this.actions.indexOf(action);

          if (index === -1) {
            _this.actions.push(action);

            _this.trigger(action);
          }

          if (!_this.started) _this.start();
        }
      });
      document.addEventListener('keyup', function (e) {
        var code = e.keyCode;
        var action = KeyboardListener.codes[code];

        if (action) {
          var index = _this.actions.indexOf(action);

          if (index !== -1) _this.actions.splice(index, 1);
          if (_this.actions.length == 0) _this.stop();
        }
      });
    }
  }, {
    key: "start",
    value: function start() {
      var _this2 = this;

      this.started = true;

      var launch = function launch() {
        _this2.actions.forEach(function (action) {
          _this2.trigger(action);
        });
      };

      this.timer = setInterval(launch, this.timerInterval);
      launch();
    }
  }, {
    key: "stop",
    value: function stop() {
      this.started = false;
      clearInterval(this.timer);
    }
  }]);

  return KeyboardListener;
}();

KeyboardListener.codes = {
  39: "RIGHT",
  68: "RIGHT",
  102: "RIGHT",
  37: "LEFT",
  65: "LEFT",
  100: "LEFT",
  40: "DOWN",
  83: "DOWN",
  98: "DOWN",
  38: "UP",
  87: "UP",
  104: "UP",
  13: "ENTER",
  32: "SPACE",
  8: "BACKSPACE",
  46: "DELETE"
};
/* harmony default export */ __webpack_exports__["default"] = (KeyboardListener);

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target) {
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertInto + " " + options.insertAt.before);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */
module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  } // blank or null?


  if (!css || typeof css !== "string") {
    return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/"); // convert each url(...)

  /*
  This regular expression is just a way to recursively match brackets within
  a string.
  	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
     (  = Start a capturing group
       (?:  = Start a non-capturing group
           [^)(]  = Match anything that isn't a parentheses
           |  = OR
           \(  = Match a start parentheses
               (?:  = Start another non-capturing groups
                   [^)(]+  = Match anything that isn't a parentheses
                   |  = OR
                   \(  = Match a start parentheses
                       [^)(]*  = Match anything that isn't a parentheses
                   \)  = Match a end parentheses
               )  = End Group
               *\) = Match anything and then a close parens
           )  = Close non-capturing group
           *  = Match anything
        )  = Close capturing group
   \)  = Match a close parens
  	 /gi  = Get all matches, not the first.  Be case insensitive.
   */

  var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function (fullMatch, origUrl) {
    // strip quotes (if they exist)
    var unquotedOrigUrl = origUrl.trim().replace(/^"(.*)"$/, function (o, $1) {
      return $1;
    }).replace(/^'(.*)'$/, function (o, $1) {
      return $1;
    }); // already a full url? no change

    if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
      return fullMatch;
    } // convert the url to a full url


    var newUrl;

    if (unquotedOrigUrl.indexOf("//") === 0) {
      //TODO: should we add protocol?
      newUrl = unquotedOrigUrl;
    } else if (unquotedOrigUrl.indexOf("/") === 0) {
      // path should be relative to the base url
      newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
    } else {
      // path should be relative to current directory
      newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
    } // send back the fixed url(...)


    return "url(" + JSON.stringify(newUrl) + ")";
  }); // send back the fixed css

  return fixedCss;
};

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./src/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.css */ "./src/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _screens__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./screens */ "./src/screens.js");
/* harmony import */ var _utils_update_screen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/update.screen */ "./src/utils/update.screen.js");
/* harmony import */ var _utils_init_game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/init.game */ "./src/utils/init.game.js");




var currentScreen = 0;

var showScreen = function showScreen(index) {
  currentScreen = index;
  var screen = _screens__WEBPACK_IMPORTED_MODULE_1__["default"][currentScreen];
  Object(_utils_update_screen__WEBPACK_IMPORTED_MODULE_2__["default"])(screen, function () {
    if (screen.game) {
      Object(_utils_update_screen__WEBPACK_IMPORTED_MODULE_2__["default"])(null);
      Object(_utils_init_game__WEBPACK_IMPORTED_MODULE_3__["default"])(screen.game, function () {
        showScreen(index + 1);
      });
    } else {
      showScreen(index + 1);
    }
  });
};

showScreen(44);

/***/ }),

/***/ "./src/screens.js":
/*!************************!*\
  !*** ./src/screens.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var screens = [{
  // 0 pupok
  "class": "pupok",
  img: "img/hero.png",
  title: "Пупок Джонс",
  text: "<p>\u0417\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u0438\u0441\u043A\u0430\u0442\u0435\u043B\u044C \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439 \u0438 \u0441\u043E\u043A\u0440\u043E\u0432\u0438\u0449.</p>"
}, {
  // 1 ahinea
  "class": "ahinea",
  img: "img/wife.png",
  title: "Ахинея Джонс",
  text: "<p>\u0412\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u0430\u044F \u0438 \u0432\u0435\u0440\u043D\u0430\u044F \u0441\u043F\u0443\u0442\u043D\u0438\u0446\u0430 \u041F\u0443\u043F\u043A\u0430 \u0414\u0436\u043E\u043D\u0441\u0430.</p>"
}, {
  // 2 zlobnikus
  "class": "zlobnikus",
  img: "img/villain.png",
  title: "Доктор Злобникус",
  text: "<p>\u0417\u043B\u043E\u0434\u0435\u0439, \u0432\u0435\u0447\u043D\u044B\u0439 \u043F\u0440\u043E\u0442\u0438\u0432\u043D\u0438\u043A \u041F\u0443\u043F\u043A\u0430 \u0414\u0436\u043E\u043D\u0441\u0430.</p>"
}, {
  // 3 intro
  "class": "intro",
  title: "Трагедия!",
  text: "<p>\u0417\u043B\u043E\u0431\u043D\u044B\u0439 \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043A\u043E\u0432\u0430\u0440\u043D\u043E \u043F\u043E\u0445\u0438\u0442\u0438\u043B \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u0443\u044E \u041F\u0443\u043F\u043A\u0430 \u0414\u0436\u043E\u043D\u0441\u0430 \u0438 \u0443\u0432\u0435\u0437 \u0435\u0435 \u0432 \u043D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u043E\u043C \u043D\u0430\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0438!</p><p>\u0422\u0435\u043F\u0435\u0440\u044C \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u043E\u043C\u0443 \u0438\u0441\u043A\u0430\u0442\u0435\u043B\u044E \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439 \u0438 \u0441\u043E\u043A\u0440\u043E\u0432\u0438\u0449 \u043F\u0440\u0438\u0434\u0435\u0442\u0441\u044F \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C\u0441\u044F \u0432 \u043F\u043E\u043B\u043D\u043E\u0435 \u043E\u043F\u0430\u0441\u043D\u043E\u0441\u0442\u0435\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0435, \u0447\u0442\u043E\u0431\u044B \u043D\u0430\u0439\u0442\u0438 \u0410\u0445\u0438\u043D\u0435\u044E \u0438 \u0441\u043F\u0430\u0441\u0442\u0438 \u0435\u0435.</p>"
}, {
  // 4 to-india
  "class": "to-india",
  map: "asia",
  title: "Азия, Индия",
  text: "<p>\u041E\u0442\u0432\u0430\u0436\u043D\u044B\u0439 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0432 \u041A\u0430\u043B\u044C\u043A\u0443\u0442\u0442\u0443, \u0447\u0442\u043E\u0431\u044B \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0442\u044C\u0441\u044F \u0441\u043E \u0441\u0432\u043E\u0438\u043C \u0434\u043E\u0431\u0440\u044B\u043C \u0434\u0440\u0443\u0433\u043E\u043C, \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440\u043E\u043C \u041F\u0438\u0437\u0434\u0440\u0438\u043A\u043E\u043C.</p>"
}, {
  // 5 asia-race
  "class": "asia-race",
  text: "<p>\u0427\u0442\u043E\u0431\u044B \u0434\u043E\u0431\u0440\u0430\u0442\u044C\u0441\u044F \u0434\u043E \u043E\u0444\u0438\u0441\u0430 \u0441\u0432\u043E\u0435\u0433\u043E \u0434\u0440\u0443\u0433\u0430, \u0433\u0435\u0440\u043E\u044E \u043D\u0443\u0436\u043D\u043E \u043F\u0440\u0435\u043E\u0434\u043E\u043B\u0435\u0442\u044C \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u043A\u0432\u0430\u0440\u0442\u0430\u043B\u043E\u0432.</p><p>\u0413\u043B\u0443\u0431\u043E\u043A\u043E \u0437\u0430\u0434\u0443\u043C\u0430\u0432\u0448\u0438\u0441\u044C \u043E \u0441\u0432\u043E\u0435\u0439 \u043F\u043E\u0442\u0435\u0440\u044F\u043D\u043D\u043E\u0439 \u043B\u044E\u0431\u0438\u043C\u043E\u0439, \u043E\u043D \u0441\u043B\u0443\u0447\u0430\u0439\u043D\u043E \u0432\u044B\u0445\u043E\u0434\u0438\u0442 \u043D\u0430 \u0448\u043E\u0441\u0441\u0435 \u0438 \u0435\u0434\u0432\u0430 \u043D\u0435 \u043F\u043E\u043F\u0430\u0434\u0430\u0435\u0442 \u043F\u043E\u0434 \u043A\u043E\u043B\u0435\u0441\u0430 \u0441\u0442\u0440\u0435\u043C\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u043C\u0447\u0430\u0449\u0435\u0433\u043E\u0441\u044F \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0438\u043B\u044F!</p><p>\u0412 \u0418\u043D\u0434\u0438\u0438 \u0443\u0436\u0430\u0441\u043D\u043E\u0435 \u0434\u043E\u0440\u043E\u0436\u043D\u043E\u0435 \u0434\u0432\u0438\u0436\u0435\u043D\u0438\u0435, \u043A\u0430\u043A \u0431\u044B \u041F\u0443\u043F\u043E\u043A \u043D\u0435 \u043F\u043E\u0441\u0442\u0440\u0430\u0434\u0430\u043B! \u0422\u044B \u0434\u043E\u043B\u0436\u0435\u043D \u043F\u0440\u043E\u0432\u0435\u0441\u0442\u0438 \u0435\u0433\u043E \u0434\u043E \u0446\u0435\u043B\u0438, \u0438\u0437\u0431\u0435\u0433\u0430\u044F \u0441\u0442\u043E\u043B\u043A\u043D\u043E\u0432\u0435\u043D\u0438\u0439 \u0441 \u043C\u0430\u0448\u0438\u043D\u0430\u043C\u0438.</p>",
  game: "asia"
}, {
  // 6 pizdrik
  "class": "pizdrik",
  img: "img/pr-pizdrik.png",
  title: "Профессор Пиздрик",
  text: "<p>\u0417\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440 \u0431\u044B\u043B \u043E\u0447\u0435\u043D\u044C \u043E\u0431\u0440\u0430\u0434\u043E\u0432\u0430\u043D, \u0443\u0432\u0438\u0434\u0435\u0432 \u0441\u0442\u0430\u0440\u043E\u0433\u043E \u0434\u0440\u0443\u0433\u0430.</p>\n    <p>\u041D\u043E \u0443\u0441\u043B\u044B\u0448\u0430\u0432 \u043E \u043F\u043E\u0445\u0438\u0449\u0435\u043D\u0438\u0438 \u0410\u0445\u0438\u043D\u0435\u0438, \u043F\u0440\u0438\u0448\u0435\u043B \u0432 \u0441\u0438\u043B\u044C\u043D\u043E\u0435 \u0432\u043E\u043B\u043D\u0435\u043D\u0438\u0435.</p>"
}, {
  // 7 compromat
  "class": "compromat",
  text: "<p>- \u0414\u043E\u0440\u043E\u0433\u043E\u0439 \u041F\u0443\u043F\u043E\u043A, - \u0441\u043A\u0430\u0437\u0430\u043B \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440. - \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043E\u0447\u0435\u043D\u044C \u043E\u043F\u0430\u0441\u0435\u043D. \u0427\u0442\u043E\u0431\u044B \u043F\u043E\u0431\u0435\u0434\u0438\u0442\u044C \u0435\u0433\u043E, \u0442\u044B \u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0431\u0440\u0430\u0442\u044C \u043D\u0430 \u043D\u0435\u0433\u043E \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442.</p><p>- \u0413\u0434\u0435 \u0436\u0435 \u043C\u043D\u0435 \u0435\u0433\u043E \u043D\u0430\u0439\u0442\u0438? - \u0441\u043F\u0440\u043E\u0441\u0438\u043B \u041F\u0443\u043F\u043E\u043A.</p><p>- \u042F \u0441\u043B\u044B\u0448\u0430\u043B, \u0447\u0442\u043E \u0432 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0435 \u0432\u0440\u0435\u043C\u044F \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043C\u043D\u043E\u0433\u043E \u043F\u0430\u043A\u043E\u0441\u0442\u0438\u043B \u0432 \u0415\u0432\u0440\u043E\u043F\u0435. \u041D\u0430\u0432\u0435\u0440\u043D\u044F\u043A\u0430, \u0442\u0430\u043C \u0442\u044B \u043D\u0430\u0439\u0434\u0435\u0448\u044C \u0447\u0442\u043E-\u043D\u0438\u0431\u0443\u0434\u044C \u0438\u043D\u0442\u0435\u0440\u0435\u0441\u043D\u043E\u0435.</p>"
}, {
  // 8 europe
  "class": "europe",
  map: "europe",
  title: "Европа",
  text: "\u041F\u043E \u0441\u043E\u0432\u0435\u0442\u0443 \u0441\u0432\u043E\u0435\u0433\u043E \u0434\u0440\u0443\u0433\u0430 \u041F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440\u0430 \u041F\u0438\u0437\u0434\u0440\u0438\u043A\u0430 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0441\u044F \u0432 \u0415\u0432\u0440\u043E\u043F\u0443, \u0447\u0442\u043E\u0431\u044B \u0441\u043E\u0431\u0440\u0430\u0442\u044C \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442 \u043D\u0430 \u043A\u043E\u0432\u0430\u0440\u043D\u043E\u0433\u043E \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430."
}, {
  // 9 europe-game
  "class": "europe-game",
  text: "<p> \u041F\u043E\u043C\u043E\u0433\u0438 \u041F\u0443\u043F\u043A\u0443 \u0414\u0436\u043E\u043D\u0441\u0443 \u0441\u043E\u0431\u0440\u0430\u0442\u044C \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442 \u043D\u0430 \u0437\u043B\u043E\u0434\u0435\u044F!</p><p>\u041F\u043E\u0434\u0431\u0435\u0440\u0438 \u0441\u0442\u043E\u043B\u0438\u0446\u0443 \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0439 \u0435\u0432\u0440\u043E\u043F\u0435\u0439\u0441\u043A\u043E\u0439 \u0441\u0442\u0440\u0430\u043D\u044B \u0438 \u0443\u0437\u043D\u0430\u0439, \u0447\u0435\u043C \u043E\u0442\u043B\u0438\u0447\u0438\u043B\u0441\u044F \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u0432 \u044D\u0442\u043E\u043C \u0433\u043E\u0440\u043E\u0434\u0435.</p>",
  game: "europe"
}, {
  // 10 europe-win
  "class": "europe-win",
  title: "Замечательно!",
  text: "<p> \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0441\u043E\u0431\u0440\u0430\u043B \u043C\u043D\u043E\u0433\u043E \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442\u0430 \u043D\u0430 \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430! \u0422\u0435\u043F\u0435\u0440\u044C \u043E\u043D \u0441\u043C\u043E\u0436\u0435\u0442 \u0448\u0430\u043D\u0442\u0430\u0436\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0435\u0433\u043E, \u0447\u0442\u043E\u0431\u044B \u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u0443\u044E \u0410\u0445\u0438\u043D\u0435\u044E.</p>"
}, {
  // 11 reason
  "class": "reason",
  text: "<p>\u041D\u043E \u0433\u0434\u0435 \u0436\u0435 \u0438\u0441\u043A\u0430\u0442\u044C \u044D\u0442\u043E\u0433\u043E \u043D\u0435\u0433\u043E\u0434\u044F\u044F, \u0447\u0442\u043E\u0431\u044B \u043D\u0430\u0447\u0430\u0442\u044C \u0435\u0433\u043E \u0448\u0430\u043D\u0442\u0430\u0436\u0438\u0440\u043E\u0432\u0430\u0442\u044C?</p><p>\u041F\u0443\u043F\u043E\u043A \u0437\u0430\u0434\u0443\u043C\u0430\u043B\u0441\u044F - \u0437\u0430\u0447\u0435\u043C \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0443 \u0410\u0445\u0438\u043D\u0435\u044F? </p>"
}, {
  // 12 mumba-umba
  "class": "mumba-umba",
  img: "img/panther.png",
  title: "Племя Мумба-Юмба",
  text: "<p>\u0410\u0445\u0438\u043D\u0435\u044F \u0414\u0436\u043E\u043D\u0441 \u0431\u043B\u0438\u0437\u043A\u043E \u0434\u0440\u0443\u0436\u0438\u0442 \u0441 \u041A\u043E\u0440\u0438\u0447\u043D\u0435\u0432\u044B\u043C \u0421\u0443\u0441\u043B\u0438\u043A\u043E\u043C - \u0432\u043E\u0436\u0434\u0435\u043C \u043F\u043B\u0435\u043C\u0435\u043D\u0438 \u041C\u0443\u043C\u0431\u0430-\u042E\u043C\u0431\u0430.</p><p>\u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043D\u0430\u0432\u0435\u0440\u043D\u044F\u043A\u0430 \u0437\u043D\u0430\u0435\u0442, \u0447\u0442\u043E \u0432 \u044D\u0442\u043E\u043C \u043F\u043B\u0435\u043C\u0435\u043D\u0438 \u0445\u0440\u0430\u043D\u0438\u0442\u0441\u044F \u0431\u0435\u0441\u0446\u0435\u043D\u043D\u0430\u044F \u0440\u0435\u043B\u0438\u043A\u0432\u0438\u044F - \u0431\u0438\u043A\u0438\u043D\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438.  </p>"
}, {
  // 13 answer
  "class": "answer",
  text: "<p>\u041C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C, \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u0410\u0445\u0438\u043D\u0435\u0438 \u043E\u043D \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044B\u0432\u0430\u0435\u0442 \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0438\u0442\u044C\u0441\u044F \u0441 \u041A\u043E\u0440\u0438\u0447\u043D\u0435\u0432\u044B\u043C \u0421\u0443\u0441\u043B\u0438\u043A\u043E\u043C \u0438 \u0437\u0430\u0431\u0440\u0430\u0442\u044C \u0431\u0438\u043A\u0438\u043D\u0438 \u0441\u0435\u0431\u0435!</p>"
}, {
  // 14 africa
  "class": "africa",
  map: "africa",
  title: "Африка",
  text: "<p>\u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044B\u0432\u0430\u044F \u043F\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0438\u0442\u044C \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0441\u044F \u0432 \u0422\u0430\u043D\u0437\u0430\u043D\u0438\u044E, \u0432 \u043F\u043B\u0435\u043C\u044F \u041C\u0443\u043C\u0431\u0430-\u042E\u043C\u0431\u0430.\n    </p>"
}, {
  // 15 dodoma
  "class": "dodoma",
  task: "word",
  title: "Столица Танзании?",
  text: "<p>\u0427\u0442\u043E\u0431\u044B \u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u044C \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0435, \u043D\u0430\u0437\u043E\u0432\u0438 \u0441\u0442\u043E\u043B\u0438\u0446\u0443 \u0433\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0430 \u0422\u0430\u043D\u0437\u0430\u043D\u0438\u044F</p>",
  answer: ["додома"]
}, {
  // 16 flower
  "class": "flower",
  img: "img/flower.png",
  title: "Цветок для Ахинеи",
  text: "<p>\u041F\u0440\u043E\u0431\u0438\u0440\u0430\u044F\u0441\u044C \u043F\u043E \u043D\u0435\u0433\u043E\u0441\u0442\u0435\u043F\u0440\u0438\u0438\u043C\u043D\u044B\u043C \u0430\u0444\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u043C \u0437\u0435\u043C\u043B\u044F\u043C, \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0440\u0435\u0448\u0438\u043B \u0432\u043E\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C\u0441\u044F \u043C\u043E\u043C\u0435\u043D\u0442\u043E\u043C \u0438 \u043D\u0430\u0439\u0442\u0438 \u0434\u043B\u044F \u0441\u0432\u043E\u0435\u0439 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u043E\u0439 \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0446\u0432\u0435\u0442\u043E\u043A - \u0445\u0438\u0449\u043D\u0443\u044E \u0430\u0444\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0443\u044E \u043C\u0443\u0445\u043E\u043F\u043E\u0436\u0438\u0440\u0430\u043B\u043A\u0443.</p><p>\u0410\u0445\u0438\u043D\u0435\u044F \u0431\u0443\u0434\u0435\u0442 \u0441\u0447\u0430\u0441\u0442\u043B\u0438\u0432\u0430, \u043F\u043E\u043B\u0443\u0447\u0438\u0432 \u0442\u0430\u043A\u043E\u0439 \u043F\u043E\u0434\u0430\u0440\u043E\u043A, \u043F\u043E\u0434\u0443\u043C\u0430\u043B \u0414\u0436\u043E\u043D\u0441.</p>"
}, {
  // 17 tribe
  "class": "tribe",
  title: "Враждебное племя",
  text: "<p>\u0412 \u043F\u043E\u0438\u0441\u043A\u0430\u0445 \u043C\u0443\u0445\u043E\u043F\u043E\u0436\u0438\u0440\u0430\u043B\u043A\u0438 \u041F\u0443\u043F\u043E\u043A \u0437\u0430\u0431\u0440\u0435\u043B \u043D\u0430 \u0442\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044E \u0432\u0440\u0430\u0436\u0434\u0435\u0431\u043D\u043E\u0433\u043E \u043F\u043B\u0435\u043C\u0435\u043D\u0438, \u043A\u043E\u0442\u043E\u0440\u043E\u0435 \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0432 \u043F\u043E\u043B\u043D\u043E\u043C \u0441\u043E\u0441\u0442\u0430\u0432\u0435 \u043F\u043E\u0433\u043D\u0430\u043B\u043E\u0441\u044C \u0437\u0430 \u043D\u0438\u043C. </p><p>\u0421\u043F\u0430\u0441\u0438 \u041F\u0443\u043F\u043A\u0430 \u043E\u0442 \u043F\u043E\u0433\u043E\u043D\u0438, \u0441\u043E\u0431\u0438\u0440\u0430\u044F \u043F\u043E \u043F\u0443\u0442\u0438 \u0430\u043B\u043C\u0430\u0437\u044B. \u0418 \u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E \u043D\u0430\u0439\u0434\u0438 \u0446\u0432\u0435\u0442\u043E\u043A \u0434\u043B\u044F \u0410\u0445\u0438\u043D\u0435\u0438.</p>",
  game: "africa"
}, {
  // 18 find-flower
  "class": "find-flower",
  img: "img/flower.png",
  title: "Великолепно!",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043D\u0430\u0448\u0435\u043B \u0440\u0435\u0434\u043A\u0438\u0439 \u0446\u0432\u0435\u0442\u043E\u043A \u0432 \u043F\u043E\u0434\u0430\u0440\u043E\u043A \u0434\u043B\u044F \u0441\u0432\u043E\u0435\u0439 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u043E\u0439!</p>"
}, {
  // 19 late
  "class": "late",
  title: "Опоздал!",
  text: "<p>\u0417\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0434\u043E\u0431\u0440\u0430\u043B\u0441\u044F \u0434\u043E \u043F\u043B\u0435\u043C\u0435\u043D\u0438 \u041C\u0443\u043C\u0431\u0430-\u042E\u043C\u0431\u0430, \u043D\u043E \u043A\u043E\u0432\u0430\u0440\u043D\u044B\u0439 \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043E\u043F\u0435\u0440\u0435\u0434\u0438\u043B \u0435\u0433\u043E!</p><p>\u0412\u043E\u0436\u0434\u044C \u041A\u043E\u0440\u0438\u0447\u043D\u0435\u0432\u044B\u0439 \u0421\u0443\u0441\u043B\u0438\u043A \u0441\u043A\u0430\u0437\u0430\u043B, \u0447\u0442\u043E \u0437\u043B\u043E\u0434\u0435\u0439 \u0443\u0448\u0435\u043B \u0431\u0443\u043A\u0432\u0430\u043B\u044C\u043D\u043E \u043F\u044F\u0442\u044C \u043C\u0438\u043D\u0443\u0442 \u043D\u0430\u0437\u0430\u0434 \u0438 \u0441\u0435\u043B \u043D\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0439 \u0432\u0435\u0440\u0442\u043E\u043B\u0435\u0442, \u043B\u0435\u0442\u044F\u0449\u0438\u0439 \u0432 \u0410\u0432\u0441\u0442\u0440\u0430\u043B\u0438\u044E.</p><p>\u0421 \u043D\u0438\u043C \u0431\u044B\u043B\u0430 \u0410\u0445\u0438\u043D\u0435\u044F \u0438 \u0431\u0438\u043A\u0438\u043D\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438.</p>"
}, {
  // 20 australia
  "class": "australia",
  map: "australia",
  title: "Австралия, Сидней",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0432 \u043E\u0442\u0447\u0430\u044F\u043D\u0438\u0438 \u0431\u0440\u043E\u0441\u0438\u043B\u0441\u044F \u0441\u043B\u0435\u0434\u043E\u043C \u0437\u0430 \u0414\u043E\u043A\u0442\u043E\u0440\u043E\u043C. </p><p>\u041F\u0440\u0438\u043B\u0435\u0442\u0435\u0432 \u0432 \u0421\u0438\u0434\u043D\u0435\u0439, \u043E\u043D \u043F\u043E\u043D\u044F\u043B, \u0447\u0442\u043E \u043D\u0435 \u0437\u043D\u0430\u0435\u0442, \u043A\u0443\u0434\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C\u0441\u044F \u0434\u0430\u043B\u044C\u0448\u0435.</p>"
}, {
  // 21 choise
  "class": "choise",
  task: "choise",
  title: "Куда идти Пупку Джонсу?",
  variants: [{
    index: "1",
    text: "Смотреть на кенгуру",
    exit: true
  }, {
    index: "2",
    text: "Смотреть достопримечательности",
    exit: false,
    message: "Ничего интересного"
  }, {
    index: "3",
    text: "На пляж",
    exit: false,
    message: "Жарко и мокро"
  }, {
    index: "4",
    text: "В полицию",
    exit: false,
    message: "Полиция ничего не знает"
  }]
}, {
  // 22 farm
  "class": "farm",
  title: "Пригород Сиднея",
  text: "<p>\u041D\u0435 \u043F\u0440\u0438\u0434\u0443\u043C\u0430\u0432, \u043A\u0443\u0434\u0430 \u043F\u043E\u0434\u0430\u0442\u044C\u0441\u044F, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0440\u0435\u0448\u0438\u043B \u0441\u043E\u0432\u0435\u0440\u0448\u0438\u0442\u044C \u044D\u043A\u0441\u043A\u0443\u0440\u0441\u0438\u044E \u0432 \u043F\u0440\u0438\u0433\u043E\u0440\u043E\u0434 \u0421\u0438\u0434\u043D\u0435\u044F \u0438 \u043F\u043E\u0441\u043C\u043E\u0442\u0440\u0435\u0442\u044C \u043D\u0430 \u043D\u0430\u0441\u0442\u043E\u044F\u0449\u0438\u0445 \u043A\u0435\u043D\u0433\u0443\u0440\u0443, \u0440\u0430\u0437 \u0443\u0436 \u043F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u043B\u0430\u0441\u044C \u0442\u0430\u043A\u0430\u044F \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E\u0441\u0442\u044C.</p>"
}, {
  // 23 kangaroo
  "class": "kangaroo",
  title: "Нашествие кенгуру",
  text: "<p>\u0425\u043E\u0437\u044F\u0438\u043D \u0444\u0435\u0440\u043C\u044B, \u043D\u0430 \u043A\u043E\u0442\u043E\u0440\u0443\u044E \u043F\u0440\u0438\u0435\u0445\u0430\u043B \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A, \u0431\u044B\u043B \u043E\u0447\u0435\u043D\u044C \u0432\u0437\u0432\u043E\u043B\u043D\u043E\u0432\u0430\u043D. \u0423\u0436\u0435 \u043C\u043D\u043E\u0433\u0438\u0435 \u0433\u043E\u0434\u044B \u0435\u0433\u043E \u0436\u0438\u0437\u043D\u044C \u043E\u0442\u0440\u0430\u0432\u043B\u044F\u043B\u0438 \u0437\u043B\u043E\u0432\u0440\u0435\u0434\u043D\u044B\u0435 \u043A\u0435\u043D\u0433\u0443\u0440\u0443, \u0441\u043E\u0432\u0435\u0440\u0448\u0430\u0432\u0448\u0438\u0435 \u043D\u0430\u0431\u0435\u0433\u0438 \u043D\u0430 \u0433\u0440\u044F\u0434\u043A\u0438.</p><p>\u0414\u043E\u0431\u0440\u043E\u0441\u0435\u0440\u0434\u0435\u0447\u043D\u044B\u0439 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0440\u0435\u0448\u0438\u043B \u043F\u043E\u043C\u043E\u0447\u044C \u0444\u0435\u0440\u043C\u0435\u0440\u0443.</p>"
}, {
  // 24 battle
  "class": "battle",
  text: "<p>\u0427\u0442\u043E\u0431\u044B \u0441\u043F\u0440\u0430\u0432\u0438\u0442\u044C\u0441\u044F \u0441 \u0440\u0430\u0437\u043E\u0440\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u043C \u043D\u0430\u0431\u0435\u0433\u043E\u043C \u043A\u0435\u043D\u0433\u0443\u0440\u0443, \u043F\u043E\u043A\u0443\u043F\u0430\u0439\u0442\u0435 \u0445\u0438\u0449\u043D\u044B\u0435 \u0440\u0430\u0441\u0442\u0435\u043D\u0438\u044F \u0438 \u0432\u044B\u0441\u0430\u0436\u0438\u0432\u0430\u0439\u0442\u0435 \u0438\u0445 \u043D\u0430 \u043F\u0443\u0442\u0438 \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043B\u0435\u0439.</p>",
  game: "australia"
}, {
  // 25 newspaper
  "class": "newspaper",
  title: "Победа!",
  text: "<p>\u041F\u0440\u043E\u0436\u043E\u0440\u043B\u0438\u0432\u044B\u0435 \u043A\u0435\u043D\u0433\u0443\u0440\u0443 \u0432\u044B\u043D\u0443\u0436\u0434\u0435\u043D\u044B \u0443\u0431\u0440\u0430\u0442\u044C\u0441\u044F \u043F\u043E\u0434\u043E\u0431\u0440\u0443-\u043F\u043E\u0437\u0434\u043E\u0440\u043E\u0432\u0443. \u041E\u043D\u0438 \u0431\u043E\u043B\u044C\u0448\u0435 \u043D\u0435 \u0432\u0435\u0440\u043D\u0443\u0442\u0441\u044F \u043D\u0430 \u0444\u0435\u0440\u043C\u0443.</p><p>\u0412 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0431\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u043D\u043E\u0441\u0442\u0438 \u0444\u0435\u0440\u043C\u0435\u0440 \u0443\u0433\u043E\u0449\u0430\u0435\u0442 \u041F\u0443\u043F\u043A\u0430 \u0432\u043A\u0443\u0441\u043D\u044B\u043C \u043E\u0431\u0435\u0434\u043E\u043C. \u0417\u0430 \u0435\u0434\u043E\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0447\u0438\u0442\u0430\u0435\u0442 \u043C\u0435\u0441\u0442\u043D\u0443\u044E \u0433\u0430\u0437\u0435\u0442\u0443 \u0438 \u043D\u0430\u0442\u044B\u043A\u0430\u0435\u0442\u0441\u044F \u043D\u0430 \u043E\u0447\u0435\u043D\u044C \u0438\u043D\u0442\u0435\u0440\u0435\u0441\u043D\u0443\u044E \u0437\u0430\u043C\u0435\u0442\u043A\u0443.</p>"
}, {
  // 26 ship
  "class": "ship",
  blockStyle: "newspaper",
  text: "<p>\u0412\u0447\u0435\u0440\u0430 \u0432\u0435\u0447\u0435\u0440\u043E\u043C \u0438\u0437 \u043F\u043E\u0440\u0442\u0430 \u0432\u044B\u0448\u043B\u043E \u0441\u0443\u0434\u043D\u043E \"\u0421\u0442\u0440\u0435\u043C\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0445\u0432\u043E\u0441\u0442\u0438\u043A\", \u043A\u043E\u0442\u043E\u0440\u043E\u0435 \u0434\u0435\u0440\u0436\u0438\u0442 \u043A\u0443\u0440\u0441 \u043D\u0430 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0443. </p><p>\u041D\u0430 \u0431\u043E\u0440\u0442\u0443 \u0441\u0443\u0434\u043D\u0430 \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u0441\u044F \u043F\u043B\u0430\u0432\u0443\u0447\u0438\u0439 \u0437\u043E\u043E\u043F\u0430\u0440\u043A \u0441 \u0440\u0435\u0434\u043A\u0438\u043C\u0438 \u0432\u0438\u0434\u0430\u043C\u0438 \u0436\u0438\u0432\u043E\u0442\u043D\u044B\u0445, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0433\u0440\u0443\u043F\u043F\u0430 \u0443\u0447\u0435\u043D\u044B\u0445, \u0432 \u0447\u0438\u0441\u043B\u0435 \u043A\u043E\u0442\u043E\u0440\u044B\u0445 \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u0438\u0441\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u0432\u0441\u0435\u0433\u043E \u0438 \u0432\u0441\u044F \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441.</p>"
}, {
  // 27 to-antarctica
  "class": "to-antarctica",
  text: "<p>\u0422\u0430\u043A \u0432\u043E\u0442 \u0437\u0430\u0447\u0435\u043C \u0437\u043B\u043E\u0434\u0435\u0439 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0441\u044F \u0432 \u0410\u0432\u0441\u0442\u0440\u0430\u043B\u0438\u044E! \u041E\u0442\u0441\u044E\u0434\u0430 \u043E\u043D \u043E\u0442\u043F\u043B\u044B\u0432\u0430\u0435\u0442 \u0432 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0443!</p><p>\u041D\u043E \u0437\u0430\u0447\u0435\u043C \u0435\u043C\u0443 \u0432 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0443? \u0418 \u043F\u043E\u0447\u0435\u043C\u0443 \u043E\u043D \u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0430\u0435\u0442 \u0443\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044C \u0410\u0445\u0438\u043D\u0435\u044E?</p>"
}, {
  // 28 antarctica
  "class": "antarctica",
  title: "Антарктида",
  text: "<p>\u0417\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0441\u044F \u0432 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0443, \u043F\u0440\u0435\u0441\u043B\u0435\u0434\u0443\u044F \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430, \u0443\u043A\u0440\u0430\u0432\u0448\u0435\u0433\u043E \u0431\u0438\u043A\u0438\u043D\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438 \u0443 \u0432\u043E\u0436\u0434\u044F \u043F\u043B\u0435\u043C\u0435\u043D\u0438 \u041C\u0443\u043C\u0431\u0430-\u042E\u043C\u0431\u0430 \u0438 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u0443\u044E \u0441\u0430\u043C\u043E\u0433\u043E \u041F\u0443\u043F\u043A\u0430.</p><p>\u0427\u0442\u043E\u0431\u044B \u0434\u043E\u0431\u0440\u0430\u0442\u044C\u0441\u044F \u0434\u043E \u0441\u0442\u043E\u044F\u043D\u043A\u0438 \u0437\u043B\u043E\u0434\u0435\u044F, \u041F\u0443\u043F\u043E\u043A \u043F\u0440\u0435\u043E\u0434\u043E\u043B\u0435\u0432\u0430\u0435\u0442 \u0441\u043D\u0435\u0436\u043D\u044B\u0435 \u0433\u043E\u0440\u044B \u0438 \u043B\u0435\u0434\u044F\u043D\u044B\u0435 \u043F\u0443\u0441\u0442\u044B\u043D\u0438, \u043F\u0435\u0440\u0435\u043B\u0435\u0437\u0430\u0435\u0442 \u0447\u0435\u0440\u0435\u0437 \u0430\u0439\u0441\u0431\u0435\u0440\u0433\u0438 \u0438 \u0441\u043A\u0430\u0442\u044B\u0432\u0430\u0435\u0442\u0441\u044F \u043D\u0430 \u043F\u043E\u043F\u0435 \u0441 \u043B\u0435\u0434\u043D\u0438\u043A\u043E\u0432, \u0441\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044F \u0441 \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u0430\u043C\u0438 \u0438 \u043D\u043E\u0447\u0443\u0435\u0442 \u0432 \u043D\u043E\u0440\u0430\u0445 \u043B\u0435\u043C\u0438\u043D\u0433\u043E\u0432.</p>"
}, {
  // 29 pizza
  "class": "pizza",
  title: "Логово Доктора Злобникуса",
  text: "<p>\u041D\u0430\u043A\u043E\u043D\u0435\u0446, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0434\u043E\u0431\u0440\u0430\u043B\u0441\u044F \u0434\u043E \u043B\u0430\u0433\u0435\u0440\u044F \u0441\u0432\u043E\u0435\u0433\u043E \u043F\u0440\u043E\u0442\u0438\u0432\u043D\u0438\u043A\u0430, \u0432\u0441\u0442\u0430\u043B \u043F\u0435\u0440\u0435\u0434 \u0432\u0445\u043E\u0434\u043D\u043E\u0439 \u0434\u0432\u0435\u0440\u044C\u044E \u0438 \u043F\u043E\u0437\u0432\u043E\u043D\u0438\u043B.</p><p>- \u041A\u0442\u043E \u0442\u0430\u043C? - \u0441\u043F\u0440\u043E\u0441\u0438\u043B \u0433\u043E\u043B\u043E\u0441 \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430.</p><p>- \u0414\u043E\u0441\u0442\u0430\u0432\u043A\u0430 \u043F\u0438\u0446\u0446\u044B, - \u043E\u0442\u0432\u0435\u0442\u0438\u043B \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441.</p><p>- \u041D\u0443 \u043D\u0430\u043A\u043E\u043D\u0435\u0446-\u0442\u043E! - \u043E\u0431\u0440\u0430\u0434\u043E\u0432\u0430\u043B\u0441\u044F \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441. - \u041E\u0442\u043A\u0440\u044B\u0432\u0430\u044E, \u0437\u0430\u0445\u043E\u0434\u0438\u0442\u0435!</p>"
}, {
  // 30 evil-plan
  "class": "evil-plan",
  text: "<p>\u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043E\u0447\u0435\u043D\u044C \u0443\u0434\u0438\u0432\u0438\u043B\u0441\u044F, \u0443\u0432\u0438\u0434\u0435\u0432 \u041F\u0443\u043F\u043A\u0430, \u043D\u043E \u0441\u043E\u0432\u0441\u0435\u043C \u043D\u0435 \u0440\u0430\u0441\u0442\u0435\u0440\u044F\u043B\u0441\u044F.</p><p>- \u042F \u0437\u043D\u0430\u044E, \u0437\u0430\u0447\u0435\u043C \u0442\u044B \u043F\u0440\u0438\u0448\u0435\u043B, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441, - \u0441\u043A\u0430\u0437\u0430\u043B \u043E\u043D \u0441 \u043F\u0440\u0435\u0437\u0440\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0439 \u0443\u0445\u043C\u044B\u043B\u043A\u043E\u0439. - \u041D\u043E \u0442\u044B \u043E\u043F\u043E\u0437\u0434\u0430\u043B!</p><p>- \u041E \u043D\u0435\u0442! - \u0432\u043E\u0441\u043A\u043B\u0438\u043A\u043D\u0443\u043B \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441. - \u0427\u0442\u043E \u0442\u044B \u0441\u0434\u0435\u043B\u0430\u043B \u0441 \u0410\u0445\u0438\u043D\u0435\u0435\u0439?! \u041E\u043D\u0430 \u0432\u0435\u0434\u044C \u0443\u0436\u0435 \u043F\u043E\u043C\u043E\u0433\u043B\u0430 \u0442\u0435\u0431\u0435 \u0434\u043E\u0431\u044B\u0442\u044C \u043D\u0435\u0432\u0435\u0440\u043E\u044F\u0442\u043D\u043E \u0446\u0435\u043D\u043D\u043E\u0435 \u0431\u0438\u043A\u0438\u043D\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438! \u041E\u0442\u043F\u0443\u0441\u0442\u0438 \u0436\u0435 \u0435\u0435!</p>"
}, {
  // 31 evil-plan-2
  "class": "evil-plan-2",
  img: "img/bikini.jpg",
  text: "<p>- \u041D\u0435\u0442, \u043D\u0435 \u043E\u0442\u043F\u0443\u0449\u0443, - \u043E\u0442\u0432\u0435\u0442\u0438\u043B \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441. - \u041E\u043D\u0430 \u043D\u0443\u0436\u043D\u0430 \u043C\u043D\u0435, \u0447\u0442\u043E\u0431\u044B \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043A\u0440\u0430\u0441\u0438\u0432\u043E\u0435 \u0444\u043E\u0442\u043E \u0432 \u0431\u0438\u043A\u0438\u043D\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438 \u043D\u0430 \u0444\u043E\u043D\u0435 \u0430\u0439\u0441\u0431\u0435\u0440\u0433\u0430! \u041E\u043D\u0430 \u0432\u0435\u0434\u044C \u0437\u0430\u043C\u0435\u0447\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0444\u043E\u0442\u043E\u0433\u0440\u0430\u0444! \u0423\u0436\u0435 \u0437\u0430\u0432\u0442\u0440\u0430 \u044D\u0442\u043E \u0444\u043E\u0442\u043E \u0432\u044B\u0439\u0434\u0435\u0442 \u043D\u0430 \u043F\u0435\u0440\u0432\u044B\u0445 \u043F\u043E\u043B\u043E\u0441\u0430\u0445 \u0432\u0441\u0435\u0445 \u043C\u0438\u0440\u043E\u0432\u044B\u0445 \u0433\u0430\u0437\u0435\u0442, \u0438 \u043C\u0438\u0440 \u0431\u0443\u0434\u0435\u0442 \u043F\u043E\u043A\u043E\u0440\u0435\u043D \u0438 \u043F\u0430\u0434\u0435\u0442 \u043D\u0438\u0446 \u043F\u0435\u0440\u0435\u0434 \u0432\u0435\u043B\u0438\u043A\u0438\u043C \u0438 \u043F\u0440\u0435\u043A\u0440\u0430\u0441\u043D\u044B\u043C \u0414\u043E\u043A\u0442\u043E\u0440\u043E\u043C \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u043E\u043C!</p><p>\u0418 \u043E\u043D \u043D\u0430\u0442\u0440\u0430\u0432\u0438\u043B \u043D\u0430 \u041F\u0443\u043F\u043A\u0430 \u0441\u0432\u043E\u044E \u0430\u0440\u043C\u0438\u044E \u043A\u0440\u043E\u0432\u043E\u0436\u0430\u0434\u043D\u044B\u0445 \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u043E\u0432.</p>"
}, {
  // 32 pinguin-battle
  "class": "pinguin-battle",
  text: "<p>\u0423\u0432\u043E\u0440\u0430\u0447\u0438\u0432\u0430\u0439\u0442\u0435\u0441\u044C \u043E\u0442 \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u043E\u0432 \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430 \u0438 \u0441\u043E\u0431\u0438\u0440\u0430\u0439\u0442\u0435 \u043F\u0430\u0434\u0430\u044E\u0449\u0438\u0435 \u0441\u043D\u0435\u0436\u0438\u043D\u043A\u0438.</p>",
  game: "antarctica"
}, {
  // 33 fly
  "class": "fly",
  title: "Победа!",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043F\u043E\u0431\u0435\u0434\u0438\u043B \u0432\u0441\u0435\u0445 \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u043E\u0432, \u043D\u043E \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u0443\u0436\u0435 \u043F\u043E\u0434\u043D\u0438\u043C\u0430\u043B\u0441\u044F \u043D\u0430 \u0433\u043E\u0440\u0443 \u0432\u043C\u0435\u0441\u0442\u0435 \u0441 \u0410\u0445\u0438\u043D\u0435\u0435\u0439, \u0447\u0442\u043E\u0431\u044B \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043A\u0440\u0430\u0441\u0438\u0432\u0443\u044E \u0444\u043E\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u044E.</p><p>\u0415\u043C\u0443 \u043D\u0438\u043A\u0430\u043A \u0431\u044B\u043B\u043E \u043D\u0435 \u0443\u0441\u043F\u0435\u0442\u044C!</p><p>\u041D\u043E \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0438 \u0438\u0441\u043A\u0430\u0442\u0435\u043B\u044C \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0431\u044B\u043B \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442 \u0442\u0435\u043C, \u0447\u0442\u043E \u043D\u0438\u043A\u043E\u0433\u0434\u0430 \u043D\u0435 \u0441\u0434\u0430\u0432\u0430\u043B\u0441\u044F! \u041E\u043D \u0441\u0445\u0432\u0430\u0442\u0438\u043B \u043F\u043E\u0432\u0435\u0440\u0436\u0435\u043D\u043D\u043E\u0433\u043E \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u0430, \u0441\u0435\u043B \u043D\u0430 \u043D\u0435\u0433\u043E \u0438 \u0437\u0430\u0441\u0442\u0430\u0432\u0438\u043B \u043B\u0435\u0442\u0435\u0442\u044C \u0432\u0441\u043B\u0435\u0434 \u0437\u0430 \u0437\u043B\u043E\u0434\u0435\u0435\u043C.</p>"
}, {
  // 34 photo
  "class": "photo",
  text: "<p>\u041F\u0440\u0438\u0437\u0435\u043C\u043B\u0438\u0432\u0448\u0438\u0441\u044C \u043F\u0440\u044F\u043C\u043E \u043F\u0435\u0440\u0435\u0434 \u0443\u0434\u0438\u0432\u043B\u0435\u043D\u043D\u044B\u043C \u0414\u043E\u043A\u0442\u043E\u0440\u043E\u043C \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u043E\u043C, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0432\u044B\u0437\u044B\u0432\u0430\u044E\u0449\u0435 \u0441\u043A\u0430\u0437\u0430\u043B \u0435\u043C\u0443:</p><p>- \u042F \u043D\u0435 \u043F\u043E\u0437\u0432\u043E\u043B\u044E \u0442\u0435\u0431\u0435 \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043A\u0440\u0430\u0441\u0438\u0432\u0443\u044E \u0444\u043E\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u044E \u0432 \u0431\u0438\u043A\u0438\u043D\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438 \u043D\u0430 \u0444\u043E\u043D\u0435 \u0430\u0439\u0441\u0431\u0435\u0440\u0433\u0430 \u0438 \u0432\u043E\u043F\u043B\u043E\u0442\u0438\u0442\u044C \u0432 \u0436\u0438\u0437\u043D\u044C \u044D\u0442\u043E\u0442 \u0443\u0436\u0430\u0441\u043D\u044B\u0439 \u043F\u043B\u0430\u043D \u043F\u043E \u0437\u0430\u0432\u043E\u0435\u0432\u0430\u043D\u0438\u044E \u043C\u0438\u0440\u0430!</p><p>- \u0425\u0430-\u0445\u0430, - \u043E\u0442\u0432\u0435\u0442\u0438\u043B \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441. - \u0418 \u043A\u0430\u043A \u0436\u0435 \u0442\u044B \u0441\u043C\u043E\u0436\u0435\u0448\u044C \u043C\u043D\u0435 \u043F\u043E\u043C\u0435\u0448\u0430\u0442\u044C?</p>"
}, {
  // 35 photo-2
  "class": "photo-2",
  text: "<p>\u0418 \u0442\u0443\u0442 \u043D\u0430\u0441\u0442\u0430\u043B \u0437\u0432\u0435\u0437\u0434\u043D\u044B\u0439 \u0447\u0430\u0441 \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440\u0430 \u041F\u0438\u0437\u0434\u0440\u0438\u043A\u0430, \u043F\u0440\u0435\u0434\u043B\u043E\u0436\u0438\u0432\u0448\u0435\u0433\u043E \u0441\u0432\u043E\u0435\u043C\u0443 \u0434\u0440\u0443\u0433\u0443 \u0437\u0430\u043C\u0435\u0447\u0430\u0442\u0435\u043B\u044C\u043D\u0443\u044E \u0438\u0434\u0435\u044E.</p><p>- \u0423 \u043C\u0435\u043D\u044F \u0435\u0441\u0442\u044C \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442 \u043D\u0430 \u0442\u0435\u0431\u044F, \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441, - \u0440\u0430\u0441\u0441\u043C\u0435\u044F\u043B\u0441\u044F \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441. - \u0415\u0441\u043B\u0438 \u043C\u0438\u0440 \u0443\u0437\u043D\u0430\u0435\u0442 \u043E \u043D\u0435\u043C, \u0442\u0435\u0431\u0435 \u043D\u0435 \u043F\u043E\u043C\u043E\u0436\u0435\u0442 \u0434\u0430\u0436\u0435 \u0441\u0430\u043C\u0430\u044F \u043A\u0440\u0430\u0441\u0438\u0432\u0430\u044F \u0444\u043E\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u044F \u043D\u0430 \u0444\u043E\u043D\u0435 \u0430\u0439\u0441\u0431\u0435\u0440\u0433\u0430, \u0441\u0434\u0435\u043B\u0430\u043D\u043D\u0430\u044F \u043C\u043E\u0435\u0439 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u043E\u0439!</p>"
}, {
  // 36 win
  "class": "win",
  text: "<p>\u0421\u043A\u0430\u0437\u0430\u0442\u044C, \u0447\u0442\u043E \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u0440\u0430\u0441\u0441\u0442\u0440\u043E\u0438\u043B\u0441\u044F, - \u043D\u0438\u0447\u0435\u0433\u043E \u043D\u0435 \u0441\u043A\u0430\u0437\u0430\u0442\u044C. \u041E\u043D \u0431\u044B\u043B \u0440\u0430\u0437\u0431\u0438\u0442, \u0440\u0430\u0437\u0434\u0430\u0432\u043B\u0435\u043D, \u0440\u0430\u0441\u0441\u0443\u0441\u043E\u043B\u0435\u043D!</p><p>- \u041F\u0440\u043E\u043A\u043B\u044F\u0442\u044B\u0439 \u041F\u0443\u043F\u043E\u043A, - \u0431\u0443\u0440\u043A\u043D\u0443\u043B \u043E\u043D, \u0431\u0440\u043E\u0441\u0438\u043B \u043D\u0430 \u0441\u043D\u0435\u0433 \u0444\u043E\u0442\u043E\u0430\u043F\u043F\u0430\u0440\u0430\u0442, \u0440\u0430\u0437\u0432\u0435\u0440\u043D\u0443\u043B\u0441\u044F \u0438 \u043F\u043E\u0431\u0440\u0435\u043B \u043F\u0440\u043E\u0447\u044C.</p>"
}, {
  // 37 to-america
  "class": "to-america",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0431\u0440\u043E\u0441\u0438\u043B\u0441\u044F \u043A \u0441\u0432\u043E\u0435\u0439 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u043E\u0439 \u0410\u0445\u0438\u043D\u0435\u0435, \u0437\u0430\u043A\u043B\u044E\u0447\u0438\u043B \u0435\u0435 \u0432 \u0436\u0430\u0440\u043A\u0438\u0435 \u043E\u0431\u044A\u044F\u0442\u0438\u044F \u0438 \u0441\u0442\u0440\u0430\u0441\u0442\u043D\u043E \u043F\u043E\u0446\u0435\u043B\u043E\u0432\u0430\u043B.</p><p>- \u0422\u044B \u0441\u043F\u0430\u0441 \u043C\u0435\u043D\u044F, \u043F\u0443\u043F\u0441\u0438\u043A! - \u0432\u043E\u0441\u043A\u043B\u0438\u043A\u043D\u0443\u043B\u0430 \u043E\u043D\u0430, \u0442\u0435\u0440\u044F\u044F \u0441\u043E\u0437\u043D\u0430\u043D\u0438\u0435 \u043D\u0430 \u0440\u0443\u043A\u0430\u0445 \u0443 \u0433\u0435\u0440\u043E\u044F.</p><p>\u041F\u0443\u043F\u043E\u043A \u0437\u0430\u043A\u0438\u043D\u0443\u043B \u0431\u0435\u0441\u0447\u0443\u0432\u0441\u0442\u0432\u0435\u043D\u043D\u0443\u044E \u0410\u0445\u0438\u043D\u0435\u044E \u043D\u0430 \u043F\u043B\u0435\u0447\u043E, \u043E\u0441\u0435\u0434\u043B\u0430\u043B \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u0430 \u0438 \u043F\u043E\u043B\u0435\u0442\u0435\u043B \u043A \u0431\u0435\u0440\u0435\u0433\u0430\u043C \u042E\u0436\u043D\u043E\u0439 \u0410\u043C\u0435\u0440\u0438\u043A\u0438.</p>"
}, {
  // 38 america
  "class": "america",
  title: "Южная Америка, Патагония",
  text: "<p>\u0415\u0434\u0432\u0430 \u0434\u043E\u043B\u0435\u0442\u0435\u0432 \u0434\u043E \u044E\u0436\u043D\u043E\u0433\u043E \u043F\u043E\u0431\u0435\u0440\u0435\u0436\u044C\u044F \u042E\u0436\u043D\u043E\u0439 \u0410\u043C\u0435\u0440\u0438\u043A\u0438, \u043F\u0438\u043D\u0433\u0432\u0438\u043D \u0432\u0437\u0431\u0440\u044B\u043A\u043D\u0443\u043B, \u0441\u0431\u0440\u043E\u0441\u0438\u043B \u0441\u0435\u0434\u043E\u043A\u043E\u0432 \u0438 \u0433\u043E\u0440\u0434\u043E \u043F\u043E\u043B\u0435\u0442\u0435\u043B \u0434\u043E\u043C\u043E\u0439, \u0432 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0443.</p><p>\u041F\u0443\u043F\u043E\u043A \u043F\u043E\u0433\u0440\u043E\u0437\u0438\u043B \u043A\u0443\u043B\u0430\u043A\u043E\u043C \u0432\u0441\u043B\u0435\u0434 \u0443\u0434\u0430\u043B\u044F\u044E\u0449\u0435\u0439\u0441\u044F \u043F\u0442\u0438\u0446\u0435 \u0438 \u0433\u0440\u0443\u0441\u0442\u043D\u043E \u0432\u0437\u0434\u043E\u0445\u043D\u0443\u043B. \u041E\u043D \u0441\u043E\u0431\u0438\u0440\u0430\u043B\u0441\u044F \u0434\u043E\u0431\u0440\u0430\u0442\u044C\u0441\u044F \u0434\u043E \u0441\u0432\u043E\u0435\u0433\u043E \u0438\u043D\u0441\u0442\u0438\u0442\u0443\u0442\u0430 \u0432 \u041A\u043E\u043D\u043D\u0435\u043A\u0442\u0438\u043A\u0443\u0442\u0435, \u0430 \u0432\u043E\u0432\u0441\u0435 \u043D\u0435 \u0437\u0430\u0441\u0442\u0440\u044F\u0442\u044C \u0432 \u043F\u0443\u0441\u0442\u044B\u043D\u044F\u0445 \u041F\u0430\u0442\u0430\u0433\u043E\u043D\u0438\u0438.</p>"
}, {
  // 39 america-2
  "class": "america-2",
  title: "Южная Америка, Патагония",
  text: "<p>\u041D\u043E \u0434\u0435\u043B\u0430\u0442\u044C \u043D\u0435\u0447\u0435\u0433\u043E, \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0438 \u0438\u0441\u043A\u0430\u0442\u0435\u043B\u044C \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043F\u043E\u043F\u0440\u0430\u0432\u0438\u043B \u043D\u0430 \u043F\u043B\u0435\u0447\u0435 \u0431\u0435\u0441\u0447\u0443\u0432\u0441\u0442\u0432\u0435\u043D\u043D\u0443\u044E \u0410\u0445\u0438\u043D\u0435\u044E \u0438 \u043F\u043E\u0448\u0430\u0433\u0430\u043B \u043D\u0430 \u0441\u0435\u0432\u0435\u0440.</p>"
}, {
  // 40 indian
  "class": "indian",
  title: "Центральная Америка, Гондурас",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0441\u043F\u043E\u043A\u043E\u0439\u043D\u043E \u0434\u043E\u0448\u0430\u0433\u0430\u043B \u0434\u043E \u0413\u043E\u043D\u0434\u0443\u0440\u0430\u0441\u0430, \u043D\u043E \u0442\u0443\u0442 \u0435\u0433\u043E \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043B\u0430 \u0442\u043E\u043B\u043F\u0430 \u043D\u0435\u0434\u0440\u0443\u0436\u0435\u043B\u044E\u0431\u043D\u043E \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043D\u043D\u044B\u0445 \u0430\u0431\u043E\u0440\u0438\u0433\u0435\u043D\u043E\u0432.</p><p>\u041F\u0440\u0438\u0448\u043B\u043E\u0441\u044C \u0441\u043F\u0430\u0441\u0430\u0442\u044C\u0441\u044F \u0431\u0435\u0433\u0441\u0442\u0432\u043E\u043C!</p>"
}, {
  // 41 gonduras
  "class": "gonduras",
  task: "word",
  title: "Столица Гондураса?",
  text: "<p>\u0427\u0442\u043E\u0431\u044B \u0441\u043A\u0440\u044B\u0442\u044C\u0441\u044F \u043E\u0442 \u043F\u0440\u0435\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439, \u043D\u0430\u0437\u043E\u0432\u0438 \u0441\u0442\u043E\u043B\u0438\u0446\u0443 \u0413\u043E\u043D\u0434\u0443\u0440\u0430\u0441\u0430</p>",
  answer: ["тегусигальпа"]
}, {
  // 42 pyramid
  "class": "pyramid",
  text: "<p>\u0423\u0431\u0435\u0433\u0430\u044F \u043E\u0442 \u0432\u0440\u0430\u0436\u0434\u0435\u0431\u043D\u043E\u0433\u043E \u043F\u043B\u0435\u043C\u0435\u043D\u0438, \u041F\u0443\u043F\u043E\u043A \u0441\u043F\u0440\u044F\u0442\u0430\u043B\u0441\u044F \u0432 \u043E\u0433\u0440\u043E\u043C\u043D\u043E\u0439 \u043F\u0438\u0440\u0430\u043C\u0438\u0434\u0435 \u0438\u043D\u0434\u0435\u0439\u0446\u0435\u0432 \u041C\u0430\u0439\u044F, \u043A\u043E\u0442\u043E\u0440\u043E\u0439 \u0431\u044B\u043B\u043E \u0431\u043E\u043B\u044C\u0448\u0435 \u0442\u0440\u0435\u0445 \u0442\u044B\u0441\u044F\u0447 \u043B\u0435\u0442. </p><p>\u041F\u0443\u0442\u044C \u043D\u0430\u0437\u0430\u0434 \u0431\u044B\u043B \u043E\u0442\u0440\u0435\u0437\u0430\u043D \u0430\u0431\u043E\u0440\u0438\u0433\u0435\u043D\u0430\u043C\u0438, \u043F\u043E\u044D\u0442\u043E\u043C\u0443 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043F\u043E\u043F\u0440\u0430\u0432\u0438\u043B \u043D\u0430 \u043F\u043B\u0435\u0447\u0435 \u0431\u0435\u0441\u0447\u0443\u0432\u0441\u0442\u0432\u0435\u043D\u043D\u0443\u044E \u0410\u0445\u0438\u043D\u0435\u044E \u0438 \u043F\u043E\u0448\u0430\u0433\u0430\u043B \u0432\u043F\u0435\u0440\u0435\u0434.</p>"
}, {
  // 43 maze
  "class": "maze",
  text: "<p>\u041E\u0447\u0435\u043D\u044C \u0441\u043A\u043E\u0440\u043E \u043E\u043D \u043F\u043E\u043D\u044F\u043B, \u0447\u0442\u043E \u0432\u043D\u0443\u0442\u0440\u0438 \u043F\u0438\u0440\u0430\u043C\u0438\u0434\u044B \u043B\u0435\u0436\u0438\u0442 \u043E\u0433\u0440\u043E\u043C\u043D\u044B\u0439 \u043B\u0430\u0431\u0438\u0440\u0438\u043D\u0442.</p><p>\u041F\u0440\u043E\u0432\u0435\u0434\u0438 \u041F\u0443\u043F\u043A\u0430 \u0414\u0436\u043E\u043D\u0441\u0430 \u043F\u043E \u043B\u0430\u0431\u0438\u0440\u0438\u043D\u0442\u0443 \u043A\u0430\u043A \u043C\u043E\u0436\u043D\u043E \u0431\u044B\u0441\u0442\u0440\u0435\u0435.</p>",
  game: "america"
}, {
  // 44 out
  "class": "out",
  title: "Выход найден!",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0432\u044B\u0448\u0435\u043B \u0438\u0437 \u043B\u0430\u0431\u0438\u0440\u0438\u043D\u0442\u0430 \u0430\u0446\u0442\u0435\u043A\u043E\u0432 \u043F\u0440\u044F\u043C\u043E \u043F\u0435\u0440\u0435\u0434 \u043A\u0430\u043C\u043F\u0443\u0441\u043E\u043C \u0441\u0432\u043E\u0435\u0433\u043E \u0438\u043D\u0441\u0442\u0438\u0442\u0443\u0442\u0430.</p><p>\u0410\u0445\u0438\u043D\u0435\u044F \u043D\u0430 \u0435\u0433\u043E \u043F\u043B\u0435\u0447\u0435 \u043D\u0430\u043A\u043E\u043D\u0435\u0446-\u0442\u043E \u0437\u0430\u0448\u0435\u0432\u0435\u043B\u0438\u043B\u0430\u0441\u044C \u0438 \u043F\u0440\u0438\u0448\u043B\u0430 \u0432 \u0441\u0435\u0431\u044F.</p><p>- \u041E, \u043C\u043E\u0439 \u0433\u0435\u0440\u043E\u0439! - \u043F\u0430\u0442\u0435\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043F\u0440\u043E\u0448\u0435\u043F\u0442\u0430\u043B\u0430 \u043E\u043D\u0430 \u0438 \u0441\u043D\u043E\u0432\u0430 \u0443\u043F\u0430\u043B\u0430 \u0432 \u043E\u0431\u043C\u043E\u0440\u043E\u043A \u043E\u0442 \u0440\u0430\u0434\u043E\u0441\u0442\u0438.</p>"
}, {
  "class": 'end',
  finish: true
}];
/* harmony default export */ __webpack_exports__["default"] = (screens);

/***/ }),

/***/ "./src/utils/init.game.js":
/*!********************************!*\
  !*** ./src/utils/init.game.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _europe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../europe */ "./europe/index.js");
/* harmony import */ var _africa__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../africa */ "./africa/index.js");
/* harmony import */ var _asia__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../asia */ "./asia/index.js");
/* harmony import */ var _australia__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../australia */ "./australia/index.js");
/* harmony import */ var _antarctica__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../antarctica */ "./antarctica/index.js");
/* harmony import */ var _america__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../america */ "./america/index.js");







var createPlayground = function createPlayground(gameName) {
  var el = document.createElement('div');
  el.classList.add("game-".concat(gameName));
  el.style.position = "relative";
  return el;
};

window.points = 0;

var initGame = function initGame(gameName, callback) {
  var playground = createPlayground(gameName);
  document.body.appendChild(playground);
  var game;

  switch (gameName) {
    case "asia":
      game = new _asia__WEBPACK_IMPORTED_MODULE_2__["default"](playground);
      break;

    case "europe":
      game = new _europe__WEBPACK_IMPORTED_MODULE_0__["default"](playground);
      break;

    case "africa":
      game = new _africa__WEBPACK_IMPORTED_MODULE_1__["default"](playground);
      break;

    case "australia":
      game = new _australia__WEBPACK_IMPORTED_MODULE_3__["default"](playground);
      break;

    case "antarctica":
      game = new _antarctica__WEBPACK_IMPORTED_MODULE_4__["default"](playground);
      break;

    case "america":
      game = new _america__WEBPACK_IMPORTED_MODULE_5__["default"](playground);
      break;
  }

  if (game) {
    game.once("win", function (gamePoints) {
      points += gamePoints;
      console.log('new points', points);
      game = null;
      playground.remove();
      callback();
    });
  }
};

/* harmony default export */ __webpack_exports__["default"] = (initGame);

/***/ }),

/***/ "./src/utils/update.screen.js":
/*!************************************!*\
  !*** ./src/utils/update.screen.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var hide = function hide(el) {
  el.style.display = "none";
};

var show = function show(el) {
  el.style.display = "";
};

var updateScreen = function () {
  var screen = document.querySelector(".game-screen");
  var pic = screen.querySelector(".screen__pic");
  var img = pic.querySelector(".screen__img");
  var title = screen.querySelector(".screen__title");
  var text = screen.querySelector(".screen__text");
  var next = screen.querySelector(".screen__next");
  var nextText = next.querySelector("b");

  var initTask = function initTask(data, onWin) {
    if (data.task === "word") {
      var input = document.createElement('input');
      input.type = "text";
      input.className = "input";

      input.oninput = function (e) {
        var value = input.value.toLowerCase();

        if (data.answer.indexOf(value) !== -1) {
          input.classList.add("success");
          input.disabled = true;
          onWin();
        }
      };

      text.appendChild(input);
    } else if (data.task === "choise") {
      var els = [];
      data.variants.forEach(function (variant) {
        var el = document.createElement('button');
        el.type = "button";
        el.className = "variant";
        el.textContent = variant.text;
        var message = document.createElement('div');
        message.innerHTML = variant.message;
        message.className = "message";
        els.push(el);

        el.onclick = function (e) {
          if (variant.exit) {
            els.forEach(function (b) {
              return b.disabled = true;
            });
            el.classList.add("success");
            onWin();
          } else {
            el.classList.add("error");
            el.disabled = true;
          }
        };

        text.appendChild(el);
        text.appendChild(message);
      });
      show(text);
    }
  };

  var reset = function reset() {
    show(pic);
    show(img);
    show(title);
    show(text);
    pic.removeAttribute("data-map");
    screen.removeAttribute("data-class");
  };

  return function (data, nextCallback) {
    if (data.finish) {
      document.querySelector('.game').style.display = "none";
      document.querySelector('.quest-finish').style.display = "block";
      window.points = Math.max(window.points, 2200);
      document.querySelector('[data-points]').textContent = window.points;
      var prices = document.querySelectorAll('[data-price]');
      prices.forEach(function (el) {
        var price = parseInt(el.dataset.price);
        if (price > window.points) el.disabled = true;
      });
      document.addEventListener("click", function (e) {
        if (e.target.hasAttribute('data-price')) {
          var price = parseInt(e.target.dataset.price);

          if (price <= window.points) {
            window.points -= price;
            document.querySelector('[data-points]').textContent = window.points;
            prices.forEach(function (el) {
              var price = parseInt(el.dataset.price);
              if (price > window.points) el.disabled = true;
            });
          }
        }
      });
      return;
    }

    if (!data) {
      hide(screen);
      return;
    }

    reset();
    screen.setAttribute("data-class", data["class"]);

    if (data.img) {
      img.src = data.img;
    } else {
      hide(img);
    }

    if (data.map) {
      pic.setAttribute("data-map", data.map);
    } else if (!data.img) {
      hide(pic);
    }

    if (data.title) {
      title.innerHTML = data.title;
    } else {
      hide(title);
    }

    if (data.text) {
      text.innerHTML = data.text;
    } else {
      hide(text);
    }

    if (data.next) {
      nextText.textContent = data.next;
    } else {
      nextText.textContent = "Дальше";
    }

    if (data.task) {
      next.disabled = true;
      initTask(data, function () {
        next.disabled = false;
      });
    }

    next.onclick = function () {
      return nextCallback();
    };

    show(screen);
  };
}();

/* harmony default export */ __webpack_exports__["default"] = (updateScreen);

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,