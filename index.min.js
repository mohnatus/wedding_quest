!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=29)}([function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),o=r.sources.map((function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"}));return[n].concat(o).concat([i]).join("\n")}var a;return[n].join("\n")}(e,t);return e[2]?"@media "+e[2]+"{"+n+"}":n})).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(r[o]=!0)}for(i=0;i<t.length;i++){var a=t[i];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){var r,i,o={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===i&&(i=r.apply(this,arguments)),i}),s=function(t){return document.querySelector(t)},l=function(t){var e={};return function(t){if("function"==typeof t)return t();if(void 0===e[t]){var n=s.call(this,t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}}(),c=null,u=0,p=[],f=n(4);function h(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=o[r.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](r.parts[a]);for(;a<r.parts.length;a++)i.parts.push(y(r.parts[a],e))}else{var s=[];for(a=0;a<r.parts.length;a++)s.push(y(r.parts[a],e));o[r.id]={id:r.id,refs:1,parts:s}}}}function d(t,e){for(var n=[],r={},i=0;i<t.length;i++){var o=t[i],a=e.base?o[0]+e.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}function m(t,e){var n=l(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=p[p.length-1];if("top"===t.insertAt)r?r.nextSibling?n.insertBefore(e,r.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),p.push(e);else if("bottom"===t.insertAt)n.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=l(t.insertInto+" "+t.insertAt.before);n.insertBefore(e,i)}}function g(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=p.indexOf(t);e>=0&&p.splice(e,1)}function v(t){var e=document.createElement("style");return void 0===t.attrs.type&&(t.attrs.type="text/css"),b(e,t.attrs),m(t,e),e}function b(t,e){Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])}))}function y(t,e){var n,r,i,o;if(e.transform&&t.css){if(!(o=e.transform(t.css)))return function(){};t.css=o}if(e.singleton){var a=u++;n=c||(c=v(e)),r=x.bind(null,n,a,!1),i=x.bind(null,n,a,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",b(e,t.attrs),m(t,e),e}(e),r=j.bind(null,n,e),i=function(){g(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(e),r=_.bind(null,n),i=function(){g(n)});return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else i()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=a()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=d(t,e);return h(n,e),function(t){for(var r=[],i=0;i<n.length;i++){var a=n[i];(s=o[a.id]).refs--,r.push(s)}t&&h(d(t,e),e);for(i=0;i<r.length;i++){var s;if(0===(s=r[i]).refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete o[s.id]}}}};var w,k=(w=[],function(t,e){return w[t]=e,w.filter(Boolean).join("\n")});function x(t,e,n,r){var i=n?"":r.css;if(t.styleSheet)t.styleSheet.cssText=k(e,i);else{var o=document.createTextNode(i),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(o,a[e]):t.appendChild(o)}}function _(t,e){var n=e.css,r=e.media;if(r&&t.setAttribute("media",r),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function j(t,e,n){var r=n.css,i=n.sourceMap,o=void 0===e.convertToAbsoluteUrls&&i;(e.convertToAbsoluteUrls||o)&&(r=f(r)),i&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var a=new Blob([r],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}},function(t,e,n){var r=n(3);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,":root {\r\n  --body-background: black;\r\n  --content-background: white;\r\n  --content-border: transparent;\r\n  --content-color: black;\r\n  --button-background: lime;\r\n  --button-border: black;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: 'Roboto Mono', sans-serif;\r\n  font-size: 20px;\r\n  background: var(--body-background) url(img/pixels.jpg);\r\n}\r\n\r\n.screen {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.screen__container {\r\n  width: 800px;\r\n  min-height: 500px;\r\n  background: var(--content-background);\r\n  color: var(--content-color);\r\n  padding: 40px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.screen__content {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n}\r\n\r\n.screen__pic {\r\n  width: 300px;\r\n  height: 300px;\r\n  margin-right: 40px;\r\n  overflow: hidden;\r\n}\r\n\r\n[data-class=\"pizdrik\"] .screen__pic img {\r\n  position: relative; left: -2px;\r\n}\r\n\r\n.screen__description {\r\n  width: 460px;\r\n}\r\n\r\n.screen__description p {\r\n  margin: 10px 0;\r\n}\r\n\r\n.screen__title {\r\n  margin-bottom: 40px;\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 30px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.screen__text {\r\n  line-height: 1.5;\r\n}\r\n\r\n.screen__footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 40px;\r\n}\r\n\r\nbutton {\r\n  position: relative;\r\n  outline: none;\r\n  border: none;\r\n  background: none;\r\n  height: 60px;\r\n  padding: 10px 30px;\r\n\r\n  background: var(--button-background);\r\n  border: 4px solid var(--button-border);\r\n\r\n  cursor: pointer;\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton:hover {\r\n  border-color: var(--content-background);\r\n}\r\n\r\nbutton:before,\r\nbutton:after,\r\nbutton span:before,\r\nbutton span:after {\r\n  content: '';\r\n  width: 4px;\r\n  height: 4px;\r\n  background-color:  var(--content-background);\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\nbutton:before,\r\nbutton:after {\r\n  top: -4px;\r\n}\r\n\r\nbutton span:before,\r\nbutton span:after {\r\n  bottom: -4px;\r\n}\r\n\r\nbutton:before,\r\nbutton span:before {\r\n  left: -4px;\r\n}\r\n\r\nbutton:after,\r\nbutton span:after {\r\n  right: -4px;\r\n}\r\n\r\n.quest-finish {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0; bottom: 0;\r\n  left: 0; right: 0;\r\n  background: white;\r\n}\r\n\r\n.goods {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.good {\r\n  padding: 20px;\r\n  border: 5px solid;\r\n  width: 350px;\r\n  text-align: center;\r\n  margin: 10px;\r\n  height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.good__img {\r\n  margin: -20px -24px 10px;\r\n\r\n  height: 220px;\r\n  position: relative;\r\n}\r\n\r\n.good__img img {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  object-position: top;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.good__title {\r\n  margin-bottom: 10px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.good__price {\r\n\r\n}\r\n\r\n.quest-points {\r\n  padding: 40px 20px;\r\n  text-align: center;\r\n}\r\n\r\n[data-points] {\r\n  font-weight: bold;\r\n}\r\n\r\n.screen__pic[data-map] {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n\r\n.screen__pic[data-map=\"asia\"] {\r\n  background-image: url('img/map/india.png');\r\n}\r\n\r\n.screen__pic[data-map=\"europe\"] {\r\n  background-image: url('img/map/europe.png');\r\n}\r\n\r\n.screen__pic[data-map=\"africa\"] {\r\n  background-image: url('img/map/africa.png');\r\n}\r\n\r\n.screen__pic[data-map=\"australia\"] {\r\n  background-image: url('img/map/australia.jpg');\r\n}\r\n\r\n.game-wrapper {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.game-table {\r\n  background: #aaa;\r\n\r\n  width: 400px;\r\n  padding: 40px;\r\n  margin-bottom: 40px;\r\n\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 20px;\r\n}\r\n\r\n.game-table td {\r\n  padding: 5px;\r\n}\r\n\r\n.input {\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  padding: 15px;\r\n  \r\n  position: relative;\r\n  \r\n  border: 4px solid var(--button-border);\r\n\r\n  cursor: pointer;\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 16px;\r\n  margin-top: 40px;\r\n}\r\n\r\nbutton[disabled], button[disabled]:hover {\r\n  opacity: 0.5;\r\n  border-color: transparent;\r\n}\r\n\r\n.input.success {\r\n  background: var(--button-background);\r\n}\r\n\r\nbutton.variant {\r\n  display: block;\r\n  width: 100%;\r\n  \r\n  margin: 20px 0;\r\n  background: lightgray;\r\n}\r\n\r\nbutton.variant.error {\r\n  border-color: red;\r\n}\r\n\r\nbutton.variant.success {\r\n  background: var(--button-background);\r\n}\r\n\r\n .message {\r\n  display: none;\r\n  text-align: center;\r\n  font-family: 'Roboto Mono', sans-serif;\r\n  font-size: 16px;\r\n  margin: 5px 0;\r\n}\r\n\r\nbutton.variant.error + .message {\r\n  display: block;\r\n}\r\n\r\n.screen[data-class=\"ship\"] .screen__text {\r\n  background: bisque;\r\n  padding: 40px;\r\n}",""])},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,r=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(t,e){var i,o=e.trim().replace(/^"(.*)"$/,(function(t,e){return e})).replace(/^'(.*)'$/,(function(t,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?t:(i=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:r+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")}))}},function(t,e,n){var r=n(6);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,".game-europe {\r\n  padding-top: 50px;\r\n}\r\n\r\n.game-europe .row {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.game-europe .cell {\r\n  width: 140px;\r\n  height: 125px;\r\n  padding: 5px;\r\n}\r\n\r\n.game-europe .card {\r\n  position: relative;\r\n  font-size: 12px;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 0;\r\n  background: url('img/back.png') center / cover no-repeat;\r\n  filter: grayscale(0.5);\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  color: white;\r\n}\r\n\r\n.game-europe .card:hover {\r\n  filter: grayscale(0);\r\n}\r\n\r\n.game-europe .card.show {\r\n  font-size: 12px;\r\n\r\n  background-position: center;\r\n  background-size: cover;\r\n}\r\n\r\n.game-europe .card.show:before {\r\n  background: black;\r\n  z-index: 0;\r\n}\r\n\r\n.game-europe .card span {\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.game-europe .card:after, .card:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0; bottom: 0;\r\n  left: 0; right: 0;\r\n  opacity: 0.5;\r\n}\r\n\r\n.game-europe .card.wrong:after {\r\n  background: red;\r\n}\r\n\r\n.game-europe .card.right:after {\r\n  background: green;\r\n}\r\n\r\n.game-europe .card.show[data-value=\"france\"] {\r\n  background-image: url('img/france.svg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"belgium\"] {\r\n  background-image: url('img/belgium.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"spane\"] {\r\n  background-image: url('img/spane.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"greece\"] {\r\n  background-image: url('img/greece.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"ireland\"] {\r\n  background-image: url('img/ireland.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"chezh\"] {\r\n  background-image: url('img/chezh.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"norway\"] {\r\n  background-image: url('img/norway.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"poland\"] {\r\n  background-image: url('img/poland.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"lithuania\"] {\r\n  background-image: url('img/lithuania.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"macedonia\"] {\r\n  background-image: url('img/macedonia.jpg');\r\n}\r\n\r\n.game-europe .card[data-removed]:before,\r\n.game-europe .card[data-removed]:after {\r\n  display: none;\r\n}\r\n\r\n.game-europe .card[data-removed] span {\r\n  font-size: 0;\r\n}\r\n\r\n.game-europe .image {\r\n  position: fixed;\r\n  top: 0; bottom: 0;\r\n  left: 0; right: 0;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.game-europe .image__wrapper {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n\r\n.game-europe .image img {\r\n  max-width: calc(100% - 80px);\r\n  max-height: 100%;\r\n  position: absolute;\r\n  object-fit: contain;\r\n  object-position: center;\r\n}\r\n\r\n.game-europe .image__text {\r\n  margin-top: 20px;\r\n}\r\n\r\n.game-europe .image button {\r\n  margin: 40px 0;\r\n}\r\n\r\n.game-europe .image button {\r\n  position: relative;\r\n  outline: none;\r\n  border: none;\r\n  background: none;\r\n  height: 60px;\r\n  padding: 10px 30px;\r\n\r\n  background: var(--button-background);\r\n  border: 4px solid var(--button-border);\r\n\r\n  cursor: pointer;\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 16px;\r\n}\r\n\r\n.game-europe .image button:hover {\r\n  border-color: var(--content-background);\r\n}\r\n\r\n.game-europe .image button:before,\r\n.game-europe .image button:after,\r\n.game-europe .image button span:before,\r\n.game-europe .image button span:after {\r\n  content: '';\r\n  width: 4px;\r\n  height: 4px;\r\n  background-color:  var(--content-background);\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.game-europe .image button:before,\r\n.game-europe .image button:after {\r\n  top: -4px;\r\n}\r\n\r\n.game-europe .image button span:before,\r\n.game-europe .image button span:after {\r\n  bottom: -4px;\r\n}\r\n\r\n.game-europe .image button:before,\r\n.game-europe .image button span:before {\r\n  left: -4px;\r\n}\r\n\r\n.game-europe .image button:after,\r\n.game-europe .image button span:after {\r\n  right: -4px;\r\n}",""])},function(t,e,n){var r=n(8);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,".game-field {\r\n  overflow-x: hidden;\r\n}\r\n\r\n.game-field__mask {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5) url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 24 24'%3E%3Cpath d='M9 12l-4.463 4.969-4.537-4.969h3c0-4.97 4.03-9 9-9 2.395 0 4.565.942 6.179 2.468l-2.004 2.231c-1.081-1.05-2.553-1.699-4.175-1.699-3.309 0-6 2.691-6 6h3zm10.463-4.969l-4.463 4.969h3c0 3.309-2.691 6-6 6-1.623 0-3.094-.65-4.175-1.699l-2.004 2.231c1.613 1.526 3.784 2.468 6.179 2.468 4.97 0 9-4.03 9-9h3l-4.537-4.969z' fill='white' /%3E%3C/svg%3E\") center no-repeat;\r\n  cursor: pointer;\r\n  z-index: 1000;\r\n}",""])},function(t,e,n){var r=n(10);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,".game-africa .ground {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0; right: 0;\r\n  height: 25px;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background: url('img/sand.jpg');\r\n}\r\n\r\n.game-africa .coin {\r\n  position: absolute;\r\n  background-image: url('img/coin.png');\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.game-africa #map {\r\n  position: absolute;\r\n  background-image: url('img/bg.png');\r\n  background-position: left 0 bottom 10px;\r\n  background-size: auto var(--field-width);\r\n  background-repeat: repeat-x;\r\n}\r\n\r\n.game-africa .platform {\r\n  background: url('img/sand.jpg');\r\n}\r\n\r\n\r\n.game-africa .finish {\r\n  background-image: url('img/flower.png');\r\n  background-position: center;\r\n  background-size: 70px;\r\n}",""])},function(t,e,n){var r=n(12);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,"#tribe {\r\n  position: absolute;\r\n  background-size: contain;\r\n  background-image: url('img/tribe.png');\r\n  background-size: 100%;\r\n  background-position: bottom;\r\n  background-repeat: no-repeat;\r\n  width: 100px;\r\n  height: 50px;\r\n  filter: hue-rotate(290deg) brightness(5);\r\n  transform: scaleX(-1);\r\n}\r\n\r\n#tribe.revert {\r\n  transform: none;\r\n}\r\n",""])},function(t,e,n){var r=n(14);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,".game-africa .game-table {\r\n  width: 600px;\r\n}\r\n\r\n.game-africa .game-field {\r\n  position: relative;\r\n  height: 400px;\r\n  width: 600px;\r\n}\r\n\r\n.game-africa #hero {\r\n  position: absolute;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  \r\n  background-image: url('img/player.png');\r\n  background-position: left 50% bottom -5px;\r\n  z-index: 20;\r\n\r\n  width: 50px;\r\n  height: 50px;\r\n}",""])},function(t,e,n){var r=n(16);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,"\r\n.game-asia .car {\r\n  width: 30px;\r\n  height: 50px;\r\n\r\n  position: absolute;\r\n}\r\n\r\n.game-asia .car:before {\r\n  content: '';\r\n  background-image: url('img/green-car.png');\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n\r\n  position: absolute;\r\n  left: -5px; \r\n  top: -6px;\r\n\r\n  width: 40px;\r\n  height: 72px;\r\n}\r\n\r\n.game-asia .car-1:before {\r\n  background-image: url('img/red-car.png');\r\n}\r\n\r\n.game-asia .car-2:before {\r\n  background-image: url('img/blue-car.png');\r\n}\r\n\r\n.game-asia .car-3:before {\r\n  background-image: url('img/yellow-car.png');\r\n}\r\n\r\n.game-asia #hero {\r\n  background-image: url('img/player.png');\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n\r\n  width: 64px;\r\n  height: 64px;\r\n\r\n  position: absolute;\r\n  z-index: 2;\r\n}\r\n\r\n.game-asia #track {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n\r\n  height: 2500px;\r\n\r\n  background-color: #aaa;\r\n}\r\n\r\n.game-asia #track:before {\r\n  content: '';\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  bottom: 0;\r\n  top: 0;\r\n  width: 33%;\r\n  border-width: 6px;\r\n  border-style: none dashed;\r\n  border-color: white;\r\n}\r\n\r\n.game-asia #track .sign {\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 5px;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 12px;\r\n  text-align: right;\r\n  padding-right: 25px;\r\n}\r\n\r\n.game-asia #track .sign:after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 5px;\r\n  right: 0;\r\n  top: 3px;\r\n  background: white;\r\n  margin-left: 5px;\r\n}\r\n\r\n.game-asia #track .finish {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  color: white;\r\n}\r\n\r\n.game-asia #track .finish:after {\r\n  content: '';\r\n  display: block;\r\n  width: 100%;\r\n  height: 6px;\r\n  background: white;\r\n  margin-top: 4px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.r-table {\r\n  width: var(--field-height);\r\n}\r\n\r\n.game-asia .r-table__points {\r\n  font-size: 0;\r\n}\r\n\r\n.game-asia .r-table__points:before, .game-asia .r-table__points .r-table__value {\r\n  font-size: 20px;\r\n}\r\n\r\n.game-asia .r-table__points:before {\r\n  content: 'Target: ';\r\n}\r\n\r\n.game-asia .r-table__points .r-table__value:after {\r\n  content: 'm';\r\n}\r\n\r\n#start, #win, #replay, #lose {\r\n  color: white;\r\n}\r\n\r\n#lose {\r\n  font-size: 1.5em;\r\n}\r\n\r\n.game-asia .game-field {\r\n  width: 400px;\r\n  height: 500px;\r\n  position: relative;\r\n  overflow: hidden;\r\n}",""])},function(t,e,n){var r=n(18);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,"#track {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n\r\n  height: 2500px;\r\n\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n#track:before {\r\n  content: '';\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  bottom: 0;\r\n  top: 0;\r\n  width: 33%;\r\n  border-width: 6px;\r\n  border-style: none dashed;\r\n  border-color: white;\r\n}\r\n\r\n#track .sign {\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 5px;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 12px;\r\n  text-align: right;\r\n  padding-right: 25px;\r\n}\r\n\r\n#track .sign:after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 5px;\r\n  right: 0;\r\n  top: 3px;\r\n  background: white;\r\n  margin-left: 5px;\r\n}\r\n\r\n#track .finish {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  color: white;\r\n}\r\n\r\n#track .finish:after {\r\n  content: '';\r\n  display: block;\r\n  width: 100%;\r\n  height: 6px;\r\n  background: white;\r\n  margin-top: 4px;\r\n}\r\n",""])},function(t,e,n){var r=n(20);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,'.game-australia .game-field {\r\n  width: 600px;\r\n  height: 400px;\r\n}\r\n\r\n\r\n.game-australia .enemy {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-image: url(\'img/kengo.png\');\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center bottom;\r\n}\r\n\r\n.game-australia .enemy.shot {\r\n  filter: hue-rotate(120deg);\r\n}\r\n\r\n.game-australia .enemy[data-lifes="3"] {\r\n  \r\n}\r\n\r\n.game-australia .enemy[data-lifes="2"] {\r\n  \r\n}\r\n\r\n.game-australia .enemy[data-lifes="1"] {\r\n  \r\n}\r\n\r\n.game-australia .line {\r\n  position: absolute;\r\n  left: 0; right: 0;\r\n  height: 90px;\r\n  background: #c5ba9f;\r\n}\r\n.game-australia .line[data-index="1"] { z-index: 3; }\r\n.game-australia .line[data-index="2"] { z-index: 2; }\r\n.game-australia .line[data-index="3"] { z-index: 1; }\r\n.game-australia .spot {\r\n  position: absolute;\r\n  width: 100px;\r\n  height: 90px;\r\n  background-image: url(img/ground.png);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n}\r\n\r\n.game-australia .spot:hover {\r\n  opacity: 0.6;\r\n}\r\n\r\n.plants-board {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 80px;\r\n  background-image: url(img/wood.png);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: flex;\r\n}\r\n\r\n.plant.plant-preview {\r\n  width: 160px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-position: left 10px center;\r\n  cursor: pointer;\r\n}\r\n\r\n.plant-preview.active:after, .plant-preview:hover:after {\r\n  content: \'\';\r\n  position: absolute;\r\n  background: goldenrod;\r\n  opacity: 0.4;\r\n  top: 0; left: 0; bottom: 0; right: 0;\r\n}\r\n\r\n.plant-preview__price {\r\n  color: white;\r\n  padding-left: 95px;\r\n}\r\n\r\n.plant {\r\n  position: relative;\r\n\r\n  width: 100px;\r\n  height: 90px;\r\n\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: 60px auto;\r\n}\r\n.plant[data-plant="base"] {\r\n  background-image: url(img/base.gif);\r\n}\r\n.plant[data-plant="power"] {\r\n  background-image: url(img/base.gif);\r\n  filter: hue-rotate(75deg);\r\n}\r\n.plant[data-plant="money"] {\r\n\r\n  background-image: url(img/money.png);\r\n}\r\n.plant[data-plant="money"] .bg {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: goldenrod;\r\n  opacity: 0.4;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  \r\n}\r\n.plant[data-plant="money"][data-ready] .bg {\r\n  opacity: 0.7;\r\n  box-shadow: 0 0 4px 1px goldenrod;\r\n}\r\n\r\n.plant-bullet {\r\n  position: absolute;\r\n  top: 15px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #66fe6c;\r\n  box-shadow: 2px 2px 2px green;\r\n}\r\n.plant-bullet.power {\r\n  position: absolute;\r\n  top: 15px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #00e8ff;\r\n  box-shadow: 2px 2px 2px blue;\r\n}\r\n',""])},function(t,e,n){var r=n(22);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,".snowflake {\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-image: url('img/snowflake.png');\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  border-radius: 50%;\r\n\r\n  position: absolute;\r\n}",""])},function(t,e,n){var r=n(24);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,"\r\n.penguin {\r\n  width: 35px;\r\n  height: 40px;\r\n\r\n  position: absolute;\r\n}\r\n\r\n.penguin:before {\r\n  content: '';\r\n  background-image: url('img/penguin.png');\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n\r\n  position: absolute;\r\n  left: -20px; \r\n  top: 0;\r\n\r\n  width: 75px;\r\n  height: 50px;\r\n}",""])},function(t,e,n){var r=n(26);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,".game-antarctica .game-field {\r\n  width: 500px;\r\n  height: 400px;\r\n  background-image: url('img/mounts.png');\r\n  overflow: hidden;\r\n}\r\n\r\n.game-antarctica .ground {\r\n  position: absolute;\r\n  left: 0; right: 0;\r\n  bottom: 0;\r\n  height: 40px;\r\n\r\n  background: url('img/ice.jpg') center / auto 40px repeat-x;\r\n}\r\n\r\n.game-antarctica #player {\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-image: url('img/player.png');\r\n\r\n  width: 64px;\r\n  height: 64px;\r\n\r\n  position: absolute;\r\n  bottom: 20px;\r\n}\r\n",""])},function(t,e,n){var r=n(28);"string"==typeof r&&(r=[[t.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,".game-america .block {\r\n  float: left;\r\n  height: 20px;\r\n  width: 20px;\r\n}\r\n\r\n.game-america .game-field {\r\n  background: white;\r\n  position: relative;\r\n  overflow: visible;\r\n}\r\n\r\n.game-america .game-field > div {\r\n  position: relative;\r\n  background: white;\r\n}\r\n\r\n.game-america .game-field:before {\r\n  content: '';\r\n  position: absolute;\r\n  background: black;\r\n  left: -20px;\r\n  right: -20px;\r\n  top: -20px;\r\n  bottom: 0px;\r\n  z-index: 0;\r\n}\r\n\r\n.game-america .block {\r\n  z-index: 20;\r\n}\r\n\r\n.game-america .wall {\r\n  background-color: #000;\r\n}\r\n\r\n.game-america .me {\r\n  position: relative;\r\n}\r\n\r\n.game-america .me:after {\r\n  background-color: #23afee;\r\n  border-radius: 100%;\r\n  content: '';\r\n  height: 20px;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 20px;\r\n}\r\n\r\n.game-america .finish {\r\n  background-color: #f31d1d;\r\n}",""])},function(t,e,n){"use strict";n.r(e);n(2);var r,i,o,a,s,l,c,u=[{class:"pupok",img:"img/hero.png",title:"Пупок Джонс",text:"<p>Знаменитый искатель приключений и сокровищ.</p>"},{class:"ahinea",img:"img/wife.png",title:"Ахинея Джонс",text:"<p>Возлюбленная и верная спутница Пупка Джонса.</p>"},{class:"zlobnikus",img:"img/villain.png",title:"Доктор Злобникус",text:"<p>Злодей, вечный противник Пупка Джонса.</p>"},{class:"intro",title:"Трагедия!",text:"<p>Злобный Доктор Злобникус коварно похитил возлюбленную Пупка Джонса и увез ее в неизвестном направлении!</p><p>Теперь знаменитому искателю приключений и сокровищ придется отправиться в полное опасностей путешествие, чтобы найти Ахинею и спасти ее.</p>"},{class:"to-india",map:"asia",title:"Азия, Индия",text:"<p>Отважный Пупок Джонс отправляется в Калькутту, чтобы встретиться со своим добрым другом, профессором Пиздриком.</p>"},{class:"asia-race",text:"<p>Чтобы добраться до офиса своего друга, герою нужно преодолеть несколько кварталов.</p><p>Глубоко задумавшись о своей потерянной любимой, он случайно выходит на шоссе и едва не попадает под колеса стремительно мчащегося автомобиля!</p><p>В Индии ужасное дорожное движение, как бы Пупок не пострадал! Ты должен провести его до цели, избегая столкновений с машинами.</p>",game:"asia"},{class:"pizdrik",img:"img/pr-pizdrik.png",title:"Профессор Пиздрик",text:"<p>Знаменитый профессор был очень обрадован, увидев старого друга.</p>\n    <p>Но услышав о похищении Ахинеи, пришел в сильное волнение.</p>"},{class:"compromat",text:"<p>- Дорогой Пупок, - сказал профессор. - Доктор Злобникус очень опасен. Чтобы победить его, ты должен собрать на него компромат.</p><p>- Где же мне его найти? - спросил Пупок.</p><p>- Я слышал, что в последнее время Доктор Злобникус много пакостил в Европе. Наверняка, там ты найдешь что-нибудь интересное.</p>"},{class:"europe",map:"europe",title:"Европа",text:"По совету своего друга Профессора Пиздрика Пупок Джонс отправился в Европу, чтобы собрать компромат на коварного Доктора Злобникуса."},{class:"europe-game",text:"<p> Помоги Пупку Джонсу собрать компромат на злодея!</p><p>Подбери столицу для каждой европейской страны и узнай, чем отличился Доктор Злобникус в этом городе.</p>",game:"europe"},{class:"europe-win",title:"Замечательно!",text:"<p> Пупок Джонс собрал много компромата на Доктора Злобникуса! Теперь он сможет шантажировать его, чтобы вернуть возлюбленную Ахинею.</p>"},{class:"reason",text:"<p>Но где же искать этого негодяя, чтобы начать его шантажировать?</p><p>Пупок задумался - зачем Злобникусу Ахинея? </p>"},{class:"mumba-umba",img:"img/panther.png",title:"Племя Мумба-Юмба",text:"<p>Ахинея Джонс близко дружит с Коричневым Сусликом - вождем племени Мумба-Юмба.</p><p>Злобникус наверняка знает, что в этом племени хранится бесценная реликвия - бикини японского бога Амэ-но Минакануси но Ками.  </p>"},{class:"answer",text:"<p>Может быть, с помощью Ахинеи он рассчитывает договориться с Коричневым Сусликом и забрать бикини себе!</p>"},{class:"africa",map:"africa",title:"Африка",text:"<p>Рассчитывая перехватить Доктора Злобникуса, Пупок Джонс отправился в Танзанию, в племя Мумба-Юмба.\n    </p>"},{class:"dodoma",task:"word",title:"Столица Танзании?",text:"<p>Чтобы продолжить путешествие, назови столицу государства Танзания</p>",answer:["додома"]},{class:"flower",img:"img/flower.png",title:"Цветок для Ахинеи",text:"<p>Пробираясь по негостеприимным африканским землям, знаменитый путешественник решил воспользоваться моментом и найти для своей возлюбленной уникальный цветок - хищную африканскую мухопожиралку.</p><p>Ахинея будет счастлива, получив такой подарок, подумал Джонс.</p>"},{class:"tribe",title:"Враждебное племя",text:"<p>В поисках мухопожиралки Пупок забрел на территорию враждебного племени, которое сразу же в полном составе погналось за ним. </p><p>Спаси Пупка от погони, собирая по пути алмазы. И обязательно найди цветок для Ахинеи.</p>",game:"africa"},{class:"find-flower",img:"img/flower.png",title:"Великолепно!",text:"<p>Пупок Джонс нашел редкий цветок в подарок для своей возлюбленной!</p>"},{class:"late",title:"Опоздал!",text:"<p>Знаменитый путешественник добрался до племени Мумба-Юмба, но коварный Доктор Злобникус опередил его!</p><p>Вождь Коричневый Суслик сказал, что злодей ушел буквально пять минут назад и сел на последний вертолет, летящий в Австралию.</p><p>С ним была Ахинея и бикини японского бога Амэ-но Минакануси но Ками.</p>"},{class:"australia",map:"australia",title:"Австралия, Сидней",text:"<p>Пупок Джонс в отчаянии бросился следом за Доктором. </p><p>Прилетев в Сидней, он понял, что не знает, куда отправиться дальше.</p>"},{class:"choise",task:"choise",title:"Куда идти Пупку Джонсу?",variants:[{index:"1",text:"Смотреть на кенгуру",exit:!0},{index:"2",text:"Смотреть достопримечательности",exit:!1,message:"Ничего интересного"},{index:"3",text:"На пляж",exit:!1,message:"Жарко и мокро"},{index:"4",text:"В полицию",exit:!1,message:"Полиция ничего не знает"}]},{class:"farm",title:"Пригород Сиднея",text:"<p>Не придумав, куда податься, Пупок Джонс решил совершить экскурсию в пригород Сиднея и посмотреть на настоящих кенгуру, раз уж представилась такая возможность.</p>"},{class:"kangaroo",title:"Нашествие кенгуру",text:"<p>Хозяин фермы, на которую приехал знаменитый путешественник, был очень взволнован. Уже многие годы его жизнь отравляли зловредные кенгуру, совершавшие набеги на грядки.</p><p>Добросердечный Пупок Джонс решил помочь фермеру.</p>"},{class:"battle",text:"<p>Чтобы справиться с разорительным набегом кенгуру, покупайте хищные растения и высаживайте их на пути вредителей.</p>",game:"australia"},{class:"newspaper",title:"Победа!",text:"<p>Прожорливые кенгуру вынуждены убраться подобру-поздорову. Они больше не вернутся на ферму.</p><p>В качестве благодарности фермер угощает Пупка вкусным обедом. За едой путешественник читает местную газету и натыкается на очень интересную заметку.</p>"},{class:"ship",blockStyle:"newspaper",text:'<p>Вчера вечером из порта вышло судно "Стремительный хвостик", которое держит курс на Антарктику. </p><p>На борту судна находится плавучий зоопарк с редкими видами животных, а также группа ученых, в числе которых знаменитый исследователь всего и вся Доктор Злобникус.</p>'},{class:"to-antarctica",text:"<p>Так вот зачем злодей Злобникус отправился в Австралию! Отсюда он отплывает в Антарктиду!</p><p>Но зачем ему в Антарктиду? И почему он продолжает удерживать Ахинею?</p>"},{class:"antarctica",title:"Антарктида",text:"<p>Знаменитый путешественник Пупок Джонс отправился в Антарктиду, преследуя Доктора Злобникуса, укравшего бикини японского бога Амэ-но Минакануси но Ками у вождя племени Мумба-Юмба и возлюбленную самого Пупка.</p><p>Чтобы добраться до стоянки злодея, Пупок преодолевает снежные горы и ледяные пустыни, перелезает через айсберги и скатывается на попе с ледников, сражается с пингвинами и ночует в норах лемингов.</p>"},{class:"pizza",title:"Логово Доктора Злобникуса",text:"<p>Наконец, Пупок Джонс добрался до лагеря своего противника, встал перед входной дверью и позвонил.</p><p>- Кто там? - спросил голос Доктора Злобникуса.</p><p>- Доставка пиццы, - ответил Пупок Джонс.</p><p>- Ну наконец-то! - обрадовался Доктор Злобникус. - Открываю, заходите!</p>"},{class:"evil-plan",text:"<p>Доктор Злобникус очень удивился, увидев Пупка, но совсем не растерялся.</p><p>- Я знаю, зачем ты пришел, Пупок Джонс, - сказал он с презрительной ухмылкой. - Но ты опоздал!</p><p>- О нет! - воскликнул Пупок Джонс. - Что ты сделал с Ахинеей?! Она ведь уже помогла тебе добыть невероятно ценное бикини японского бога Амэ-но Минакануси но Ками! Отпусти же ее!</p>"},{class:"evil-plan-2",img:"img/bikini.jpg",text:"<p>- Нет, не отпущу, - ответил Злобникус. - Она нужна мне, чтобы сделать красивое фото в бикини японского бога Амэ-но Минакануси но Ками на фоне айсберга! Она ведь замечательный фотограф! Уже завтра это фото выйдет на первых полосах всех мировых газет, и мир будет покорен и падет ниц перед великим и прекрасным Доктором Злобникусом!</p><p>И он натравил на Пупка свою армию кровожадных пингвинов.</p>"},{class:"pinguin-battle",text:"<p>Уворачивайтесь от пингвинов Доктора Злобникуса и собирайте падающие снежинки.</p>",game:"antarctica"},{class:"fly",title:"Победа!",text:"<p>Пупок Джонс победил всех пингвинов, но Доктор Злобникус уже поднимался на гору вместе с Ахинеей, чтобы сделать красивую фотографию.</p><p>Ему никак было не успеть!</p><p>Но знаменитый путешественник и искатель приключений Пупок Джонс был знаменит тем, что никогда не сдавался! Он схватил поверженного пингвина, сел на него и заставил лететь вслед за злодеем.</p>"},{class:"photo",text:"<p>Приземлившись прямо перед удивленным Доктором Злобникусом, Пупок Джонс вызывающе сказал ему:</p><p>- Я не позволю тебе сделать красивую фотографию в бикини японского бога Амэ-но Минакануси но Ками на фоне айсберга и воплотить в жизнь этот ужасный план по завоеванию мира!</p><p>- Ха-ха, - ответил Злобникус. - И как же ты сможешь мне помешать?</p>"},{class:"photo-2",text:"<p>И тут настал звездный час профессора Пиздрика, предложившего своему другу замечательную идею.</p><p>- У меня есть компромат на тебя, Злобникус, - рассмеялся Пупок Джонс. - Если мир узнает о нем, тебе не поможет даже самая красивая фотография на фоне айсберга, сделанная моей возлюбленной!</p>"},{class:"win",text:"<p>Сказать, что Доктор Злобникус расстроился, - ничего не сказать. Он был разбит, раздавлен, рассусолен!</p><p>- Проклятый Пупок, - буркнул он, бросил на снег фотоаппарат, развернулся и побрел прочь.</p>"},{class:"to-america",text:"<p>Пупок бросился к своей возлюбленной Ахинее, заключил ее в жаркие объятия и страстно поцеловал.</p><p>- Ты спас меня, пупсик! - воскликнула она, теряя сознание на руках у героя.</p><p>Пупок закинул бесчувственную Ахинею на плечо, оседлал пингвина и полетел к берегам Южной Америки.</p>"},{class:"america",title:"Южная Америка, Патагония",text:"<p>Едва долетев до южного побережья Южной Америки, пингвин взбрыкнул, сбросил седоков и гордо полетел домой, в Антарктиду.</p><p>Пупок погрозил кулаком вслед удаляющейся птице и грустно вздохнул. Он собирался добраться до своего института в Коннектикуте, а вовсе не застрять в пустынях Патагонии.</p>"},{class:"america-2",title:"Южная Америка, Патагония",text:"<p>Но делать нечего, знаменитый путешественник и искатель приключений Пупок Джонс поправил на плече бесчувственную Ахинею и пошагал на север.</p>"},{class:"indian",title:"Центральная Америка, Гондурас",text:"<p>Пупок Джонс спокойно дошагал до Гондураса, но тут его остановила толпа недружелюбно настроенных аборигенов.</p><p>Пришлось спасаться бегством!</p>"},{class:"gonduras",task:"word",title:"Столица Гондураса?",text:"<p>Чтобы скрыться от преследователей, назови столицу Гондураса</p>",answer:["тегусигальпа"]},{class:"pyramid",text:"<p>Убегая от враждебного племени, Пупок спрятался в огромной пирамиде индейцев Майя, которой было больше трех тысяч лет. </p><p>Путь назад был отрезан аборигенами, поэтому Пупок Джонс поправил на плече бесчувственную Ахинею и пошагал вперед.</p>"},{class:"maze",text:"<p>Очень скоро он понял, что внутри пирамиды лежит огромный лабиринт.</p><p>Проведи Пупка Джонса по лабиринту как можно быстрее.</p>",game:"america"},{class:"out",title:"Выход найден!",text:"<p>Пупок Джонс вышел из лабиринта ацтеков прямо перед кампусом своего института.</p><p>Ахинея на его плече наконец-то зашевелилась и пришла в себя.</p><p>- О, мой герой! - патетически прошептала она и снова упала в обморок от радости.</p>"},{class:"end",finish:!0}],p=function(t){t.style.display="none"},f=function(t){t.style.display=""},h=(r=document.querySelector(".game-screen"),i=r.querySelector(".screen__pic"),o=i.querySelector(".screen__img"),a=r.querySelector(".screen__title"),s=r.querySelector(".screen__text"),l=r.querySelector(".screen__next"),c=l.querySelector("b"),function(t,e){if(t){if(t.finish){document.querySelector(".game").style.display="none",document.querySelector(".quest-finish").style.display="block",window.points=Math.max(window.points,2200),document.querySelector("[data-points]").textContent=window.points;var n=document.querySelectorAll("[data-price]");return n.forEach((function(t){parseInt(t.dataset.price)>window.points&&(t.disabled=!0)})),void document.addEventListener("click",(function(t){if(t.target.hasAttribute("data-price")){var e=parseInt(t.target.dataset.price);e<=window.points&&(window.points-=e,document.querySelector("[data-points]").textContent=window.points,n.forEach((function(t){parseInt(t.dataset.price)>window.points&&(t.disabled=!0)})))}}))}f(i),f(o),f(a),f(s),i.removeAttribute("data-map"),r.removeAttribute("data-class"),r.setAttribute("data-class",t.class),t.img?o.src=t.img:p(o),t.map?i.setAttribute("data-map",t.map):t.img||p(i),t.title?a.innerHTML=t.title:p(a),t.text?s.innerHTML=t.text:p(s),t.next?c.textContent=t.next:c.textContent="Дальше",t.task&&(l.disabled=!0,function(t,e){if("word"===t.task){var n=document.createElement("input");n.type="text",n.className="input",n.oninput=function(r){var i=n.value.toLowerCase();-1!==t.answer.indexOf(i)&&(n.classList.add("success"),n.disabled=!0,e())},s.appendChild(n)}else if("choise"===t.task){var r=[];t.variants.forEach((function(t){var n=document.createElement("button");n.type="button",n.className="variant",n.textContent=t.text;var i=document.createElement("div");i.innerHTML=t.message,i.className="message",r.push(n),n.onclick=function(i){t.exit?(r.forEach((function(t){return t.disabled=!0})),n.classList.add("success"),e()):(n.classList.add("error"),n.disabled=!0)},s.appendChild(n),s.appendChild(i)})),f(s)}}(t,(function(){l.disabled=!1}))),l.onclick=function(){return e()},f(r)}else p(r)}),d=[{text:"Париж",value:"france"},{text:"Франция",value:"france"},{text:"Брюссель",value:"belgium"},{text:"Бельгия",value:"belgium"},{text:"Мадрид",value:"spane"},{text:"Испания",value:"spane"},{text:"Афины",value:"greece"},{text:"Греция",value:"greece"},{text:"Дублин",value:"ireland"},{text:"Ирландия",value:"ireland"},{text:"Прага",value:"chezh"},{text:"Чехия",value:"chezh"},{text:"Осло",value:"norway"},{text:"Норвегия",value:"norway"},{text:"Варшава",value:"poland"},{text:"Польша",value:"poland"},{text:"Вильнюс",value:"lithuania"},{text:"Литва",value:"lithuania"},{text:"Скопье",value:"macedonia"},{text:"Македония",value:"macedonia"}],m={france:{img:"img/compromat/1.jpeg",text:"Гладил полотенчики!"},belgium:{img:"img/compromat/2.jpg",text:"Плескался в ванной с пеной и резиновым утенком!"},spane:{img:"img/compromat/2.jpg_large",text:"Ходил на быстрые свидания!"},greece:{img:"img/compromat/3.jpg",text:"Возил куколку в коляске!"},ireland:{img:"img/compromat/4.jpg",text:"Читал близнецам сказки!"},chezh:{img:"img/compromat/5.jpg",text:"Делал добрые дела!"},norway:{img:"img/compromat/6.jpg",text:"Играл с котятами!"},poland:{img:"img/compromat/7.jpg",text:"Дирижировал оркестром!"},lithuania:{img:"img/compromat/8.jpg",text:"Питался фастфудом!"},macedonia:{img:"img/compromat/9.jpg",text:"Мыл тарелочки!"}};n(5);function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var v=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.callbacks={},e&&(e.on=function(){return n.on.apply(n,arguments)},e.once=function(){return n.once.apply(n,arguments)},e.off=function(){return n.off.apply(n,arguments)},e.trigger=function(){return n.trigger.apply(n,arguments)})}var e,n,r;return e=t,(n=[{key:"on",value:function(t,e){this.callbacks[t]||(this.callbacks[t]=[]),this.callbacks[t].push((function(t){return e(t)}))}},{key:"once",value:function(t,e){var n=this;this.callbacks[t]||(this.callbacks[t]=[]),this.callbacks[t].push((function r(i){e(i),n.off(t,r)}))}},{key:"off",value:function(t,e){if(this.callbacks[t]){var n=this.callbacks[t].indexOf(e);-1!==n&&this.callbacks[t].splice(n,1)}}},{key:"trigger",value:function(t,e){var n=this,r=this.callbacks[t];r&&r.forEach((function(r){r(e,(function(){return n.off(t,r)}))}))}}])&&g(e.prototype,n),r&&g(e,r),t}();function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var y=0,w=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.field=e,this.cards=[];var r=n.width||5,i=n.height||4;this.map=this.createRandomMap(d,r,i),this.renderMap(),this.selected=null,this.inProcess=!1,this.image=this.createImage(),this.field.appendChild(this.image.wrapper)}var e,n,r;return e=t,(n=[{key:"createImage",value:function(){var t=document.createElement("div");t.className="image",t.style.display="none";var e=document.createElement("div");e.className="image__wrapper",t.appendChild(e);var n=document.createElement("img");e.appendChild(n);var r=document.createElement("div");r.className="image__text",t.appendChild(r);var i=document.createElement("button");return i.type="button",i.textContent="Продолжить",t.appendChild(i),{wrapper:t,img:n,text:r,button:i}}},{key:"createRandomMap",value:function(t,e,n){for(var r=[],i=[],o=0;o<n;o++){i.push([]);for(var a=0;a<e;a++)r.push([o,a]),i[o][a]=null}for(var s=0;r.length;){var l=t[s];if(!l)break;var c=Math.floor(Math.random()*r.length),u=r[c];i[u[0]][u[1]]=l,r.splice(c,1),s++}return i}},{key:"renderMap",value:function(){for(var t=this,e=0;e<this.map.length;e++){var n=document.createElement("div");n.className="row";for(var r=function(r){var i=document.createElement("div");i.className="cell";var o=t.map[e][r],a=document.createElement("div");a.className="card";var s=document.createElement("span");s.textContent=o.text,a.appendChild(s),a.value=o.value,a.clicks=0,a.setAttribute("data-value",o.value),a.setAttribute("data-state",o.state),t.cards.push(a),a.addEventListener("click",(function(){return t.onCardClick(a)})),i.appendChild(a),n.appendChild(i)},i=0;i<this.map[0].length;i++)r(i);this.field.appendChild(n)}}},{key:"showImage",value:function(t){var e=this;this.image.img.src=t.img,this.image.text.innerHTML=t.text,this.image.wrapper.style.display="",this.image.button.onclick=function(){e.image.wrapper.style.display="none",e.cards.length||e.win()}}},{key:"onCardClick",value:function(t){var e=this;t==this.selected||this.inProcess||t.removed||(y++,t.classList.add("show"),t.clicks++,this.inProcess=!0,setTimeout((function(){if(e.selected)if(e.selected.value==t.value){e.selected.classList.add("right"),t.classList.add("right");var n=e.cards.indexOf(e.selected);e.cards.splice(n,1),n=e.cards.indexOf(t),e.cards.splice(n,1);var r=Math.max(1,15-t.clicks-e.selected.clicks);e.points=e.points+r,setTimeout((function(){e.selected.removed=!0,t.removed=!0,e.selected.setAttribute("data-removed",""),t.setAttribute("data-removed",""),e.selected=null,e.inProcess=!1,e.showImage(m[t.value])}),400)}else e.selected.classList.add("wrong"),t.classList.add("wrong"),setTimeout((function(){e.selected.classList.remove("selected"),e.selected.classList.remove("show"),e.selected.classList.remove("wrong"),t.classList.remove("show"),t.classList.remove("wrong"),e.selected=null,e.inProcess=!1}),400);else e.selected=t,e.selected.classList.add("selected"),e.selected.classList.add("show"),e.inProcess=!1}),600))}},{key:"win",value:function(){this.trigger("win",1e3/y*2+500)}}])&&b(e.prototype,n),r&&b(e,r),t}(),k=function(t){var e=document.createElement("table");e.classList.add("game-table");var n={};for(var r in t){var i=t[r],o=document.createElement("tr"),a=document.createElement("td");a.textContent=i.name,o.appendChild(a);var s=document.createElement("td");s.textContent=i.value||0,o.appendChild(s),n[r]=s,e.appendChild(o)}return{element:e,update:function(t){for(var e in t){var r=n[e];r&&(r.textContent=t[e])}}}},x=(n(7),function(t,e){var n;t.classList.add("game-wrapper"),e&&t.appendChild(e);var r=function(){var t=document.createElement("div");return t.style.position="relative",t.classList.add("game-field"),t}();t.appendChild(r);var i=function(){var t=document.createElement("div");return t.classList.add("game-field__mask"),t.style.display="none",t}();return i.addEventListener("click",(function(){return r.start()})),r.appendChild(i),r.onLose=function(t){n=t,i.style.display=""},r.start=function(){i.style.display="none","function"==typeof n&&n()},r});function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var j=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.callbacks={},e&&(e.on=function(){return n.on.apply(n,arguments)},e.once=function(){return n.once.apply(n,arguments)},e.off=function(){return n.off.apply(n,arguments)},e.trigger=function(){return n.trigger.apply(n,arguments)})}var e,n,r;return e=t,(n=[{key:"on",value:function(t,e){this.callbacks[t]||(this.callbacks[t]=[]),this.callbacks[t].push((function(t){return e(t)}))}},{key:"once",value:function(t,e){var n=this;this.callbacks[t]||(this.callbacks[t]=[]),this.callbacks[t].push((function r(i){e(i),n.off(t,r)}))}},{key:"off",value:function(t,e){if(this.callbacks[t]){var n=this.callbacks[t].indexOf(e);-1!==n&&this.callbacks[t].splice(n,1)}}},{key:"trigger",value:function(t,e){var n=this,r=this.callbacks[t];r&&r.forEach((function(r){r(e,(function(){return n.off(t,r)}))}))}}])&&_(e.prototype,n),r&&_(e,r),t}();function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var E=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,(n=[{key:"check",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(!t.removed&&!e.removed){var r=t.getBoundingClientRect(),i=e.getBoundingClientRect();return!(r.top>i.bottom-n||r.bottom<i.top+n||r.left>i.right-n||r.right<i.left+n)}clearInterval(this.timer)}},{key:"watch",value:function(e,n,r){var i=this,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;new j(e),new j(n);var a=setInterval((function(){i.check(e,n,r)&&(e.trigger(t.events.collision,{object:n}),n.trigger(t.events.collision,{object:e}))}),o);return a}},{key:"stopWatcher",value:function(t){clearInterval(t)}}])&&O(e.prototype,n),r&&O(e,r),t}();E.events={collision:"intersector.events.collision"};var S=E;function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var P=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new j(this),this.element=e,this._speed={left:0,right:0,up:0,down:0},Object.assign(this._speed,n.speed),this.field=n.field,this.diff={top:0,bottom:0,left:0,right:0},Object.assign(this.diff,n.diff),this.pause=!0}var e,n,r;return e=t,(n=[{key:"canMove",value:function(t){if(this.field){var e=this.element.getBoundingClientRect(),n=this.field.getBoundingClientRect();switch(t){case"left":if(e.left-this.speed.left<n.left+this.diff.left)return!1;break;case"right":if(e.right+this.speed.right>n.right-this.diff.right)return!1;break;case"up":if(e.top-this.speed.up<n.top+this.diff.top)return!1;break;case"down":if(e.bottom+this.speed.down>n.bottom-this.diff.bottom)return!1}}return!0}},{key:"toLeft",value:function(){this.pause||(this.canMove("left")?this.left=this.left-this.speed.left:this.trigger("boundary","left"))}},{key:"toRight",value:function(){this.pause||(this.canMove("right")?this.left=this.left+this.speed.right:this.trigger("boundary","right"))}},{key:"toUp",value:function(){this.pause||(this.canMove("up")?this.top=this.top-this.speed.up:this.trigger("boundary","up"))}},{key:"toDown",value:function(){this.pause||(this.canMove("down")?this.top=this.top+this.speed.down:this.trigger("boundary","down"))}},{key:"left",get:function(){return parseInt(this.element.style.left)||0},set:function(t){this.element.style.left=Number(t)+"px"}},{key:"top",get:function(){return parseInt(this.element.style.top)||0},set:function(t){this.element.style.top=Number(t)+"px"}},{key:"speed",get:function(){return this._speed},set:function(t){t.left&&(this._speed.left=t.left),t.right&&(this._speed.right=t.right),t.up&&(this._speed.up=t.up),t.down&&(this._speed.down=t.down)}}])&&C(e.prototype,n),r&&C(e,r),t}();function T(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var z=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new j(this),this.actions=[],this.setListeners(),this.timer=null,this.timerInterval=e||100}var e,n,r;return e=t,(n=[{key:"setListeners",value:function(){var e=this;document.addEventListener("keydown",(function(n){var r=n.keyCode,i=t.codes[r];i&&(-1===e.actions.indexOf(i)&&(e.actions.push(i),e.trigger(i)),e.started||e.start())})),document.addEventListener("keyup",(function(n){var r=n.keyCode,i=t.codes[r];if(i){var o=e.actions.indexOf(i);-1!==o&&e.actions.splice(o,1),0==e.actions.length&&e.stop()}}))}},{key:"start",value:function(){var t=this;this.started=!0;var e=function(){t.actions.forEach((function(e){t.trigger(e)}))};this.timer=setInterval(e,this.timerInterval),e()}},{key:"stop",value:function(){this.started=!1,clearInterval(this.timer)}}])&&T(e.prototype,n),r&&T(e,r),t}();z.codes={39:"RIGHT",68:"RIGHT",102:"RIGHT",37:"LEFT",65:"LEFT",100:"LEFT",40:"DOWN",83:"DOWN",98:"DOWN",38:"UP",87:"UP",104:"UP",13:"ENTER",32:"SPACE",8:"BACKSPACE",46:"DELETE"};var L=z;var I=function t(e,n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.mover=e,this.listener=new L(n),this.listener.on("LEFT",(function(){return r.mover.toLeft()})),this.listener.on("RIGHT",(function(){return r.mover.toRight()})),this.listener.on("UP",(function(){return r.mover.toUp()})),this.listener.on("DOWN",(function(){return r.mover.toDown()}))};function M(t){return(M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function B(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function N(t,e,n){return(N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function A(t){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function H(t,e){return(H=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var U=function(t){function e(t){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r,i,o=document.createElement("div");return o.id="hero",r=this,i=A(e).call(this,o,{speed:{up:4,down:4,left:4,right:4},field:t.field,diff:{left:0,right:t.field.offsetWidth/2,top:0,bottom:0}}),(n=!i||"object"!==M(i)&&"function"!=typeof i?B(r):i).jumpTimer,n.jumpHeight=140,n.game=t,new I(B(n),10),n.checkTimer=setInterval((function(){n.jumping||n.canMove("down")&&(n.top=n.top+n.speed.down)}),10),n}var n,r,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&H(t,e)}(e,t),n=e,(r=[{key:"canMove",value:function(t){return this.game.canMove(this,t)?(this.mapBoundary=!1,N(A(e.prototype),"canMove",this).call(this,t)):(this.mapBoundary=!0,!1)}},{key:"toUp",value:function(){this.pause||(this.canMove("up")?this.startJump():this.trigger("boundary","up"))}},{key:"startJump",value:function(){var t=this;if(!this.jumping){this.jumping=!0;var e=this.top;this.jumpTimer=setInterval((function(){var n=t.canMove("up"),r=t.top<=e-t.jumpHeight;!n||r?(clearInterval(t.jumpTimer),t.jumpTimer=setInterval((function(){t.canMove("down")?t.top=t.top+t.speed.down:(clearInterval(t.jumpTimer),t.jumping=!1)}),10)):t.top=t.top-t.speed.up}),10)}}}])&&R(n.prototype,r),i&&R(n,i),e}(P),W=["........................................................................","................................................*....*..................","................................................=...===.................","................*...........*................=......*......*............",".....*.........==.....*...===....*.....*..=.........=x...===..........*.","....==.....==.........==.........=.....=............===........=......=.","+..-....................................................................","########################################################################"],D={".":null,"#":"ground","=":"platform","*":"coin","+":"hero","-":"tribe",x:"exit"};n(9);function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var F=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.pointSize=50,this.objects=[],this.map=[],this.game=e,this.element=this.render()}var e,n,r;return e=t,(n=[{key:"init",value:function(){this.initialLeft=this.left,this.minLeft=-1*this.width}},{key:"render",value:function(){var t=document.createElement("div");t.id="map";for(var e=0,n=W.length;e<n;e++){this.map.push([]);for(var r=0,i=W[0].length;r<i;r++){var o=this.drawPoint(e,r);o&&t.appendChild(o.element),this.map[e][r]=o||null}}return t.style.width=W[0].length*this.pointSize+"px",t.style.height=W.length*this.pointSize+"px",t}},{key:"drawPoint",value:function(t,e){var n=this,r=W[t][e],i=D[r];if(i)switch(i){case"ground":case"platform":var o=document.createElement("div");return o.style.width=this.pointSize+"px",o.style.height=this.pointSize+"px",o.classList.add(i),o.style.position="absolute",o.style.top=this.pointSize*t+"px",o.style.left=this.pointSize*e+"px",{object:i,element:o};case"hero":this._heroStartPosition={top:this.pointSize*t,left:this.pointSize*e};break;case"coin":var a=document.createElement("div");return a.style.width=this.pointSize+"px",a.style.height=this.pointSize+"px",a.classList.add(i),a.style.position="absolute",a.style.top=this.pointSize*t+"px",a.style.left=this.pointSize*e+"px",this.game.intersector.watch(a,this.game.hero.element),a.on("intersector.events.collision",(function(t){n.game.points=n.game.points+1,a.remove()})),{object:i,element:a};case"tribe":this._tribeStartPosition={top:this.pointSize*t,left:this.pointSize*e};break;case"exit":var s=document.createElement("div");return s.style.width=this.pointSize+"px",s.style.height=this.pointSize+"px",s.classList.add("finish"),s.style.position="absolute",s.style.top=this.pointSize*t+"px",s.style.left=this.pointSize*e+"px",this.finish=s,{object:"exit",element:s}}}},{key:"start",value:function(){this.pause=!1}},{key:"move",value:function(t,e){var n,r;this.pause||("left"===t?r=e.speed.left/2:"right"===t&&(r=-1*e.speed.right/2),(n=this.left+r)>this.initialLeft||n<this.minLeft||(this.left=n,this.trigger("move",{direction:t,speed:r})))}},{key:"reset",value:function(){var t=this;this.left=this.initialLeft,this.map.forEach((function(e){e.forEach((function(e){e&&"coin"==e.object&&t.element.appendChild(e.element)}))}))}},{key:"hasObject",value:function(t){for(var e=0,n=this.map.length;e<n;e++)for(var r=0,i=this.map[0].length;r<i;r++){var o=this.map[e][r];if(o&&("platform"===o.object||"ground"===o.object)){var a={left:this.pointSize*r,right:this.pointSize*r+this.pointSize,top:this.pointSize*e,bottom:this.pointSize*e+this.pointSize},s=t.right<=a.left,l=t.left>=a.right,c=t.bottom<=a.top,u=t.top>=a.bottom;if(!(s||l||c||u))return!0}}return!1}},{key:"width",get:function(){return this.pointSize*W[0].length}},{key:"height",get:function(){return this.pointSize*W.length}},{key:"left",get:function(){return parseInt(this.element.style.left)||0},set:function(t){this.element.style.left=Number(t)+"px"}},{key:"heroStartPosition",get:function(){return this._heroStartPosition}},{key:"tribeStartPosition",get:function(){return this._tribeStartPosition}}])&&q(e.prototype,n),r&&q(e,r),t}();n(11);function G(t){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function $(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function J(t,e){return!e||"object"!==G(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function V(t){return(V=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function K(t,e){return(K=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var X=function(t){function e(t){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=document.createElement("div");return r.id="tribe",(n=J(this,V(e).call(this,r,{speed:{up:0,down:0,left:1,right:1},field:t.field,diff:{left:0,right:0,top:0,bottom:0}}))).name="tribe",n.game=t,n._pause=!0,n._direction="right",n.on("boundary",(function(t){n.direction="right"===t?"left":"right"})),n}var n,r,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&K(t,e)}(e,t),n=e,(r=[{key:"reset",value:function(){this._direction="right"}},{key:"reset",value:function(){this.pause=!0,this.direction="right"}},{key:"move",value:function(t,e){this.left=this.left+e}},{key:"direction",get:function(){return this._direction},set:function(t){this._direction=t,"left"===this._direction?this.element.classList.add("revert"):this.element.classList.remove("revert")}},{key:"left",get:function(){return parseInt(this.element.style.left)||0},set:function(t){this.element.style.left=Number(t)+"px"}},{key:"top",get:function(){return parseInt(this.element.style.top)||0},set:function(t){this.element.style.top=Number(t)+"px"}},{key:"pause",get:function(){return this._pause},set:function(t){var e=this;this._pause=Boolean(t),clearInterval(this._moveTimer),this._pause||(this._moveTimer=setInterval((function(){"right"==e.direction?e.toRight():e.toLeft()}),10))}}])&&$(n.prototype,r),i&&$(n,i),e}(P);n(13);function Q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Y=function(){function t(e){var n=this;arguments.length>1&&void 0!==arguments[1]&&arguments[1];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this._points=0,this.intersector=new S,this.table=k({points:{name:"Алмазы",value:0}}),this.field=x(e,this.table.element),this.hero=new U(this),this.field.appendChild(this.hero.element),this.hero.on("boundary",(function(t){return n._onHeroBoundary(t)})),this.map=new F(this),this.map.init(),this.field.appendChild(this.map.element),this.tribe=new X(this),this.field.appendChild(this.tribe.element);var r=this.map.finish,i=this.intersector.watch(r,this.hero.element);r.on("intersector.events.collision",(function(t){n.win(),n.intersector.stopWatcher(i)})),this.intersector.watch(this.tribe.element,this.hero.element),this.tribe.element.on("intersector.events.collision",(function(t){n.lose()})),this.map.on("move",(function(t){var e=t.direction,r=t.speed;n.tribe.move(e,r)})),this._setHeroStartPosition(),this._setTribeStartPosition(),this.start()}var e,n,r;return e=t,(n=[{key:"win",value:function(){this.trigger("win",100*this.points+100)}},{key:"lose",value:function(){var t=this;this._setHeroStartPosition(),this._setTribeStartPosition(),this.points=this.defaultPoints,this.tribe.reset(),this.map.reset(),this.hero.pause=!0,this.tribe.pause=!0,this.field.onLose((function(){return t.start()}))}},{key:"start",value:function(){this.hero.pause=!1,this.tribe.pause=!1,this.map.start()}},{key:"_setHeroStartPosition",value:function(){var t=this.map.heroStartPosition;this.hero.left=t.left,this.hero.top=t.top}},{key:"_setTribeStartPosition",value:function(){var t=this.map.tribeStartPosition;this.tribe.left=t.left,this.tribe.top=t.top}},{key:"_onHeroBoundary",value:function(t){this.hero.mapBoundary||this.map.move(t,this.hero)}},{key:"canMove",value:function(t,e){var n=t.element.getBoundingClientRect(),r={top:n.top,bottom:n.bottom,left:n.left,right:n.right};switch(e){case"up":r.top-=t.speed.up,r.bottom-=t.speed.up;break;case"down":r.top+=t.speed.down,r.bottom+=t.speed.down;break;case"left":r.left-=t.speed.left,r.right-=t.speed.left;break;case"right":r.left+=t.speed.right,r.right+=t.speed.right}var i=this.map.element.getBoundingClientRect(),o={left:r.left-i.left,right:r.right-i.left,top:r.top-i.top,bottom:r.bottom-i.top};return!this.map.hasObject(o)}},{key:"points",get:function(){return this._points},set:function(t){this._points=parseInt(t)||0,this.table.update({points:this._points})}}])&&Q(e.prototype,n),r&&Q(e,r),t}();n(15);function Z(t){return(Z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function tt(t){return(tt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function et(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function nt(t,e){return(nt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var rt=function(t){function e(t){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r,i,o=document.createElement("div");return o.id="hero",r=this,(n=!(i=tt(e).call(this,o,{speed:{up:7,down:7,left:6,right:6},field:t.field,diff:{left:0,right:0,top:120,bottom:150}}))||"object"!==Z(i)&&"function"!=typeof i?et(r):i).jumpTimer,n.jumpHeight=140,n.game=t,new I(et(n),10),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&nt(t,e)}(e,t),e}(P);n(17);function it(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var ot=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.game=e,this.element=this.render(),this.pause=!0}var e,n,r;return e=t,(n=[{key:"init",value:function(){this.initialBottom=this.bottom,this.minBottom=-1*(this.element.offsetHeight-this.game.field.offsetHeight)}},{key:"start",value:function(){this._setPosition(),this.pause=!1}},{key:"_setPosition",value:function(){this.bottom=this.initialBottom}},{key:"reset",value:function(){this._setPosition(),this.pause=!0}},{key:"render",value:function(){var e=this,n=document.createElement("div");n.id="track",n.style.height=t.finish+2*t.step+"px";var r=document.createElement("div");r.className="finish",r.style.top=t.step+"px",n.appendChild(r);for(var i=1,o=t.step*i,a=function(){var r=o+t.step+"px",a=document.createElement("div");a.className="sign",a.textContent=o/1e3+"km",a.style.top=r,a.value=o,n.appendChild(a),e.game.intersector.watch(a,e.game.hero.element),a.on("intersector.events.collision",(function(){e._onCheckMark(a.value)})),i++,o=t.step*i};o<=t.finish;)a();return n}},{key:"_onCheckMark",value:function(t){this.pause||this.trigger("check-mark",{distance:t})}},{key:"move",value:function(t,e){var n;this.pause||("up"===t?n=this.bottom-e.speed.up/2:"down"===t&&(n=this.bottom+e.speed.up/2),n>this.initialBottom||n<this.minBottom||(this.bottom=n))}},{key:"addCar",value:function(t){this.element.appendChild(t.element)}},{key:"finish",get:function(){return this.element.querySelector(".finish")}},{key:"startOffset",get:function(){return-1*t.step}},{key:"bottom",get:function(){return parseInt(this.element.style.bottom)||0},set:function(t){this.element.style.bottom=Number(t)+"px"}}])&&it(e.prototype,n),r&&it(e,r),t}();ot.finish=2e3,ot.step=250;var at=ot,st=function(t,e){if(e||(e=t||1,t=0),"number"!=typeof t||"number"!=typeof e)throw new Error("Random generator error: both min or max values must be numbers");return Math.floor(Math.random()*(e-t)+t)};function lt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var ct=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.element=document.createElement("div"),this.speed=t.getRandomSpeed(),this.element.className="car car-".concat(t.getRandomColor())}var e,n,r;return e=t,(n=[{key:"remove",value:function(){this.removed=!0,this.element.remove()}},{key:"left",set:function(t){this.element.style.left=Number(t)+"px"}},{key:"bottom",get:function(){return parseFloat(this.element.style.bottom)||0},set:function(t){this.element.style.bottom=Number(t)+"px"}}])&&lt(e.prototype,n),r&&lt(e,r),t}();ct.height=50,ct.variants=4,ct.minSpeed=.5,ct.maxSpeed=.5,ct.getRandomSpeed=function(){return Math.random()*(ct.maxSpeed-ct.minSpeed)+ct.minSpeed},ct.getRandomColor=function(){return st(0,ct.variants)};var ut=ct;function pt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var ft=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.config=Object.assign({minDelay:1100,maxDelay:2500,maxCars:7,minCarSpeed:.6,maxCarSpeed:1.6},n),ut.maxSpeed=this.config.maxCarSpeed,ut.minSpeed=this.config.minCarSpeed,this.game=e,this.track=this.game.track,this.width=this.track.element.offsetWidth,this.intersector=this.game.intersector,this.cars=[],this.flowTimer,this.generationTimer}var e,n,r;return e=t,(n=[{key:"start",value:function(){this.startFlow(),this.startMoving()}},{key:"stop",value:function(){var t=this;clearInterval(this.flowTimer),clearTimeout(this.generationTimer),this.cars.forEach((function(e){t.game.intersector.stopWatcher(e.watcher),e.remove()})),this.cars.length=0}},{key:"startMoving",value:function(){var t=this;this.flowTimer=setInterval((function(){t.cars=t.cars.filter((function(t){return!t.removed})),t.cars.forEach((function(e){var n=e.bottom-e.speed;if(n<t.finishBottomPosition)return e.remove(),void t.game.intersector.stopWatcher(e.watcher);e.bottom=n}))}),0)}},{key:"startFlow",value:function(){var t=this;!function e(){var n=100;t.cars.length<t.config.maxCars&&(t.createCar(),n=t.delay),t.generationTimer=setTimeout((function(){return e()}),n)}()}},{key:"createCar",value:function(){var t=this,e=new ut;this.cars.push(e),e.bottom=this.startBottomPosition,e.left=this.startLeftPosition,this.track.addCar(e);var n=this.game.intersector.watch(e.element,this.game.hero.element);e.watcher=n,e.element.on("intersector.events.collision",(function(){return t._onCollision(e)}))}},{key:"_onCollision",value:function(t){t.remove(),this.trigger("accident")}},{key:"startBottomPosition",get:function(){return this.game.field.offsetHeight-this.track.bottom+ut.height}},{key:"finishBottomPosition",get:function(){return-2*ut.height}},{key:"startLeftPosition",get:function(){return st(20,this.width-40)}},{key:"delay",get:function(){return st(this.config.minDelay,this.config.maxDelay)}}])&&pt(e.prototype,n),r&&pt(e,r),t}();function ht(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var dt=function(){function t(e){var n=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.intersector=new S,this._distance=r.distance||4e3,this._lives=3,this.table=k({points:{name:"До цели",value:this._distance},lives:{name:"Жизни",value:this._lives}}),this.field=x(e,this.table.element),this.hero=new rt(this),this.field.appendChild(this.hero.element),this.hero.on("boundary",(function(t){return n._onHeroBoundary(t)})),at.finish=this._distance,this.track=new at(this),this.field.appendChild(this.track.element),this.track.init(),this.track.on("check-mark",(function(t){n.points=t.distance}));var i=this.track.finish;this.intersector.watch(i,this.hero.element),i.on("intersector.events.collision",(function(t){n.win()})),this._setHeroStartPosition(),this.traffic=new ft(this,{}),this.traffic.on("accident",(function(){return n.loseLife()})),this.start()}var e,n,r;return e=t,(n=[{key:"win",value:function(){this.trigger("win",100*this.lives)}},{key:"lose",value:function(){var t=this;this.hero.pause=!0,this.track.reset(),this.traffic.stop(),this._setHeroStartPosition(),this.points=this._distance,this.lives=3,this.field.onLose((function(){return t.start()}))}},{key:"loseLife",value:function(){this.lives=this.lives-1}},{key:"start",value:function(){this.hero.pause=!1,this.track.start(),this.traffic.start()}},{key:"_setHeroStartPosition",value:function(){this.hero.left=this.field.offsetWidth/2-this.hero.element.offsetWidth/2,this.hero.top=this.field.offsetHeight+this.track.startOffset-this.hero.element.offsetHeight/2}},{key:"_onHeroBoundary",value:function(t){"up"!==t&&"down"!==t||this.track.move(t,this.hero)}},{key:"points",get:function(){return this._points},set:function(t){this._points=parseInt(t)||0,this.table.update({points:this._points})}},{key:"lives",get:function(){return this._lives},set:function(t){this._lives=parseInt(t)||0,this._lives=Math.max(this._lives,0),this.table.update({lives:this._lives}),0===this._lives&&this.lose()}}])&&ht(e.prototype,n),r&&ht(e,r),t}();function mt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var gt=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.index=e,this.line=n,this.element=this.render()}var e,n,r;return e=t,(n=[{key:"render",value:function(){var t=document.createElement("div");return t.classList.add("spot"),t.setAttribute("data-index",this.index+1),t.style.left=100*this.index+50+"px",t}},{key:"plant",get:function(){return this._plant},set:function(t){var e=this;if(this._plant=t,this._plant){var n=this._plant.view;this.element.appendChild(n),this._plant.on("killed",(function(){e._plant=null,n.remove()}))}}}])&&mt(e.prototype,n),r&&mt(e,r),t}();function vt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var bt=function(){function t(e,n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.game=e,this.index=n.index+1,this.spots=[],this.element=this.render(),this.game.on("startAttack",(function(){return r._onAttack()})),this.enemies=[],this.bullets=[],this.checkTimer}var e,n,r;return e=t,(n=[{key:"render",value:function(){var t=this,e=document.createElement("div");e.classList.add("line"),e.setAttribute("data-index",this.index),e.style.bottom=100*(this.index-1)+"px";for(var n=function(n){var r=new gt(n,t);t.spots.push(r),r.element.addEventListener("click",(function(){t.active&&t._onSelectSpot(r)})),e.appendChild(r.element)},r=0;r<5;r++)n(r);return e}},{key:"activate",value:function(){this.active=!0,this._run(),this._startCheck()}},{key:"deactivate",value:function(){this.active=!1,this._stopCheck(),this.spots.forEach((function(t){t.plant&&t.plant.stop()})),this.enemies.length=0,this.bullets.length=0}},{key:"reset",value:function(){this.active=!1,this._stopCheck(),this.bullets.forEach((function(t){t.removed=!0})),this.bullets.length=0,this.spots.forEach((function(t){t.plant&&t.plant.remove(),t.plant=null})),this.enemies.forEach((function(t){t.remove()})),this.enemies.length=0}},{key:"_onSelectSpot",value:function(t){t.plant||this.game.trigger("selectSpot",t)}},{key:"_onAttack",value:function(){var t=this;this.spots.forEach((function(e){e.plant&&e.plant.activate(t)}))}},{key:"_run",value:function(){var t=this;this.cycleTimer=setInterval((function(){t.enemies.forEach((function(e){e.el.offsetLeft<=0&&(t.game.lose(),clearInterval(t.cycleTimer));var n=e.el.getBoundingClientRect();t.bullets.forEach((function(r){if(r.getBoundingClientRect().right>n.left&&(e.lifes=e.lifes-r.shot,r.remove(),r.removed=!0,e.lifes<=0)){e.kill();var i=t.enemies.indexOf(e);-1!==i&&t.enemies.splice(i,1),t.game.trigger("killEnemy"),t.game.points=t.game.points+1}})),t.bullets=t.bullets.filter((function(t){return!t.removed}))}))}),10)}},{key:"_startCheck",value:function(){var t=this;this.checkTimer=setInterval((function(){var e=t.spots.filter((function(t){return t.plant})).map((function(t){return t.plant}));t.enemies.forEach((function(n){var r=n.el.getBoundingClientRect();e.forEach((function(e){var n=e.view.getBoundingClientRect();r.left>=n.right||(e.kill(),t.game.points=t.game.points-.5)}))}))}),1e3)}},{key:"_stopCheck",value:function(){clearInterval(this.checkTimer)}},{key:"active",get:function(){return this._active},set:function(t){this._active=Boolean(t)}}])&&vt(e.prototype,n),r&&vt(e,r),t}();function yt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var wt=0,kt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.index=++wt,new v(this)}var e,n,r;return e=t,r=[{key:"getPreview",value:function(){var t=document.createElement("div");t.classList.add("plant-preview"),t.classList.add("plant"),t.setAttribute("data-plant",this.plantName);var e=document.createElement("div");return e.classList.add("plant-preview__price"),e.textContent=this.price,t.appendChild(e),t}}],(n=[{key:"renderView",value:function(){var t=document.createElement("div");return t.className="plant-view plant",t.setAttribute("data-plant",this.constructor.plantName),t}},{key:"execute",value:function(t){}},{key:"activate",value:function(t){console.log("ACTIVATE",this.executed),this.executed||(this.executed=!0,this.execute(t))}},{key:"stop",value:function(){this.stopped=!0,clearInterval(this.executeTimer)}},{key:"kill",value:function(){this.stop(),this.trigger("killed")}},{key:"remove",value:function(){this.stop(),this.view.remove()}},{key:"view",get:function(){return this._view||(this._view=this.renderView()),this._view}},{key:"price",get:function(){return this.constructor.price}}])&&yt(e.prototype,n),r&&yt(e,r),t}();kt.plantName="plant";var xt=kt;function _t(t){return(_t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function jt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ot(t,e){return!e||"object"!==_t(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Et(t){return(Et=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function St(t,e){return(St=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Ct=function(t){function e(){var t,n,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var i=arguments.length,o=new Array(i>1?i-1:0),a=1;a<i;a++)o[a-1]=arguments[a];return(n=Ot(this,(t=Et(e)).call.apply(t,[this].concat(o)))).shot=r,n}var n,r,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&St(t,e)}(e,t),n=e,(r=[{key:"execute",value:function(t){console.log("iteration",this.index),this.line=t,this._iterate()}},{key:"_iterate",value:function(){var t=this,n=this._createBullet();this.line.element.appendChild(n),this._moveBullet(n),this.line.bullets.push(n),this.timeout=setTimeout((function(){t.stopped||t._iterate()}),e.executeInterval)}},{key:"_createBullet",value:function(){var t=document.createElement("div");return t.className="plant-bullet "+this.constructor.plantName,t.left=this.view.parentElement.offsetLeft+this.view.offsetWidth-30,t.style.left=t.left+"px",t.shot=this.shot,t}},{key:"_moveBullet",value:function(t){var e=this;t.timer=setInterval((function(){if(t.left=t.left+4,t.style.left=t.left+"px",t.left>600){clearInterval(t.timer),t.remove();var n=e.line.bullets.indexOf(t);-1!==n&&e.line.bullets.splice(n,1)}}),10)}}])&&jt(n.prototype,r),i&&jt(n,i),e}(xt);Ct.plantName="base",Ct.price=100,Ct.executeInterval=2e3;var Pt=Ct;function Tt(t){return(Tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function zt(t,e){return!e||"object"!==Tt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Lt(t){return(Lt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function It(t,e){return(It=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Mt=function(t){function e(){var t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return zt(this,(t=Lt(e)).call.apply(t,[this,2].concat(r)))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&It(t,e)}(e,t),e}(Pt);Mt.plantName="power",Mt.price=300;var Rt=Mt;function Bt(t){return(Bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Nt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function At(t,e){return!e||"object"!==Bt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ht(t,e,n){return(Ht="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Ut(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Ut(t){return(Ut=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Wt(t,e){return(Wt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Dt=function(t){function e(){var t,n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];return(n=At(this,(t=Ut(e)).call.apply(t,[this].concat(i)))).moneyTimer,n}var n,r,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Wt(t,e)}(e,t),n=e,(r=[{key:"renderView",value:function(){var t=this,n=Ht(Ut(e.prototype),"renderView",this).call(this),r=document.createElement("div");return r.className="bg",n.appendChild(r),this.bg=r,n.addEventListener("click",(function(){t.ready&&(t.line.game.money=t.line.game.money+e.price,t.ready=!1,t.bg.style.height=0,t._startTimer())})),n}},{key:"execute",value:function(t){this.line=t,this._startTimer()}},{key:"_startTimer",value:function(){var t=this;this.startTime=Date.now(),this.moneyTimer=setTimeout((function(){clearInterval(t.updateTimer),t.ready=!0}),e.executeInterval),this.updateTimer=setInterval((function(){var n=100*(Date.now()-t.startTime)/(e.executeInterval-5);t.bg.style.height=n+"%"}),100)}},{key:"ready",get:function(){return this._ready},set:function(t){this._ready=t,this._ready?this.view.setAttribute("data-ready",""):this.view.removeAttribute("data-ready")}}])&&Nt(n.prototype,r),i&&Nt(n,i),e}(xt);Dt.plantName="money",Dt.price=50,Dt.executeInterval=5e3;var qt=Dt;function Ft(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Gt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.game=e,this.plants=[qt,Pt,Rt],this.element=this.render()}var e,n,r;return e=t,(n=[{key:"render",value:function(){var t=this,e=document.createElement("div");return e.classList.add("plants-board"),this.plants.forEach((function(n,r){var i=n.getPreview();n.preview=i,i.addEventListener("click",(function(){t.active&&(console.log("select plant",n),t._onSelect(n))})),e.appendChild(i)})),e}},{key:"activate",value:function(){console.log("activate plants board"),this.active=!0}},{key:"deactivate",value:function(){console.log("deactivate plants board"),this.active=!1}},{key:"_onSelect",value:function(t){this.selected&&this.selected.preview.classList.remove("active"),this.selected=t,t.preview.classList.add("active"),this.game.trigger("selectPlant")}},{key:"active",get:function(){return this._active},set:function(t){this._active=Boolean(t),this.element.classList.toggle("active",this._active)}},{key:"selected",get:function(){return this._selected},set:function(t){this._selected=t}},{key:"selectedPlant",get:function(){if(this._selected)return new this._selected}}])&&Ft(e.prototype,n),r&&Ft(e,r),t}();function $t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Jt=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=e,this.pause=!0,this.game.on("selectPlant",(function(){return n._onSelectPlant()})),this.game.on("selectSpot",(function(t){return n._onSelectSpot(t)}))}var e,n,r;return e=t,(n=[{key:"start",value:function(){this.game.plantsBoard.activate(),this.game.lines.forEach((function(t){return t.activate()})),this.pause=!1}},{key:"stop",value:function(){this.game.lines.forEach((function(t){return t.deactivate()})),this.pause=!0}},{key:"reset",value:function(){this.game.lines.forEach((function(t){t.reset()})),this.pause=!0}},{key:"_onSelectPlant",value:function(){var t=this.game.plantsBoard.selected;console.log("plant",t)}},{key:"_onSelectSpot",value:function(t){var e=this.game.plantsBoard.selectedPlant;e&&(console.log(e.price),e.price<=this.game.money?(this.game.money-=e.price,t.plant=e,this.game.attacked&&e.activate(t.line)):console.warn("Недостаточно денег"))}},{key:"pause",get:function(){return this._pause},set:function(t){this._pause=Boolean(t)}}])&&$t(e.prototype,n),r&&$t(e,r),t}();function Vt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Kt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.el=this.render(),this.lifes=4}var e,n,r;return e=t,(n=[{key:"render",value:function(){var t=document.createElement("div");return t.classList.add("enemy"),t}},{key:"remove",value:function(){this.el.remove()}},{key:"kill",value:function(){this.removed=!0,this.remove()}},{key:"lifes",get:function(){return this._lifes},set:function(t){var e=this,n=this.lifes;this._lifes=t,this.el.setAttribute("data-lifes",t),this._lifes<n&&(this.el.classList.add("shot"),setTimeout((function(){return e.el.classList.remove("shot")}),150))}}])&&Vt(e.prototype,n),r&&Vt(e,r),t}();function Xt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Qt=[{delay:3e3,speed:.1,interval:5e3,count:3},{delay:3e3,speed:.2,interval:5e3,count:3},{delay:3e3,speed:.4,interval:5e3,count:3}],Yt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=e,this.index=-1,this.timer,this.pause=!0}var e,n,r;return e=t,(n=[{key:"start",value:function(){this.pause=!1,this.startAttackTimer()}},{key:"startAttackTimer",value:function(){var t=this;this.index++;var e=Qt[this.index];e?this.timer=setTimeout((function(){t.game.attacked=!0,t.startAttack()}),e.delay):this.game.trigger("finishAttacks")}},{key:"stop",value:function(){this.pause=!0,this.game.attacked=!1,clearTimeout(this.timer)}},{key:"reset",value:function(){this.stop(),this.index=0}},{key:"startAttack",value:function(){var t=this;this.game.trigger("startAttack");var e=Qt[this.index],n=0,r=setInterval((function(){if(t.pause)clearInterval(r);else{if(n>=e.count)return clearInterval(r),t.game.trigger("finishAttack"),void t.startAttackTimer();var i=Math.floor(3*Math.random()),o=t.game.lines[i],a=new Kt;n++,a.right=-120,a.el.style.right=a.right+"px",o.element.appendChild(a.el),o.enemies.push(a);var s=setInterval((function(){a.removed||a.right>=600?clearInterval(s):(a.right+=e.speed,a.el.style.right=a.right+"px")}),10)}}),e.interval)}},{key:"count",get:function(){return this._count||0},set:function(t){this._count=t}}])&&Xt(e.prototype,n),r&&Xt(e,r),t}();n(19);function Zt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var te=function(){function t(e){var n=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this._startMoney=r.money||90,this._money=0,this.table=k({money:{name:"Деньги",value:0}}),this.field=x(e,this.table.element),this.lines=[];for(var i=0;i<3;i++){var o=new bt(this,{index:i});this.field.appendChild(o.element),this.lines.push(o)}this.plantsBoard=new Gt(this),this.field.appendChild(this.plantsBoard.element),this.setController=new Jt(this),this.attackController=new Yt(this),this.on("finishAttacks",(function(){n._hasEnemies()?n.monitored=!0:n.win()})),this.on("killEnemy",(function(){n.monitored&&(n._hasEnemies()||n.win())})),this.start()}var e,n,r;return e=t,(n=[{key:"_hasEnemies",value:function(){return this.lines.some((function(t){return t.enemies.length>0}))}},{key:"start",value:function(){this.money=this._startMoney,this.setController.start(),this.attackController.start()}},{key:"win",value:function(){this.trigger("win",3*this.money/2+100)}},{key:"lose",value:function(){var t=this;this.monitored=!1,this.setController.reset(),this.attackController.reset(),this.table.update({money:this._startMoney}),this.field.onLose((function(){return t.start()}))}},{key:"money",get:function(){return this._money||0},set:function(t){this._money=t,this.table.update({money:this._money})}},{key:"attacked",get:function(){return this._attacked},set:function(t){var e=this;this._attacked=Boolean(t),this.lines.forEach((function(t){t.attacked=e._attacked}))}}])&&Zt(e.prototype,n),r&&Zt(e,r),t}();function ee(t){return(ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ne(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function re(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function ie(t,e,n){return(ie="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=oe(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function oe(t){return(oe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ae(t,e){return(ae=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var se=function(t){function e(t){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r,i,o=document.createElement("div");return o.id="player",r=this,n=!(i=oe(e).call(this,o,{speed:{up:0,down:0,left:5,right:5},field:t.field.element,diff:{left:10,right:10}}))||"object"!==ee(i)&&"function"!=typeof i?re(r):i,new I(re(n)),n}var n,r,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ae(t,e)}(e,t),n=e,(r=[{key:"canMove",value:function(t){return"up"!==t&&"down"!==t&&ie(oe(e.prototype),"canMove",this).call(this,t)}}])&&ne(n.prototype,r),i&&ne(n,i),e}(P);n(21);function le(t){return(le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ce(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ue(t,e){return!e||"object"!==le(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function pe(t,e,n){return(pe="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=fe(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function fe(t){return(fe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function he(t,e){return(he=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var de=function(t){function e(t,n){var r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=document.createElement("div");return i.classList.add(n.className),(r=ue(this,fe(e).call(this,i,{speed:{up:0,down:n.speed,left:0,right:0},field:t.field,diff:{bottom:n.bottomOffset}}))).left=Math.random()*(t.field.offsetWidth-r.element.offsetWidth-10)+10,r.timer=setInterval((function(){return r.toDown()}),100),r.on("boundary",(function(){return r.remove()})),r}var n,r,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&he(t,e)}(e,t),n=e,(r=[{key:"canMove",value:function(t){return"down"===t&&pe(fe(e.prototype),"canMove",this).call(this,t)}},{key:"remove",value:function(){clearInterval(this.timer),this.element.remove(),this.trigger("remove")}}])&&ce(n.prototype,r),i&&ce(n,i),e}(P);function me(t){return(me="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ge(t,e){return!e||"object"!==me(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ve(t){return(ve=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function be(t,e){return(be=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ye=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),ge(this,ve(e).call(this,t,{className:"snowflake",speed:10,bottomOffset:-40}))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&be(t,e)}(e,t),e}(de);n(23);function we(t){return(we="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ke(t,e){return!e||"object"!==we(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function xe(t){return(xe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _e(t,e){return(_e=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var je=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),ke(this,xe(e).call(this,t,{className:"penguin",speed:15,bottomOffset:-40}))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_e(t,e)}(e,t),e}(de);function Oe(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Ee=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.game=e,this.elements={},this.element=n.element,this.minTimeout=n.minTimeout,this.maxTimeout=n.maxTimeout,this.timer=null}var e,n,r;return e=t,(n=[{key:"_generateElement",value:function(){var t=this,e=new this.element(this.game);this.game.field.appendChild(e.element);var n=this.game.intersector.watch(e.element,this.game.hero.element);this.elements[n]=e,e.element.on("intersector.events.collision",(function(n){e.remove(),t.trigger("collision")})),e.on("remove",(function(){t.game.intersector.stopWatcher(n),delete t.elements[n]})),e.pause=!1,this.timer=setTimeout((function(){return t._generateElement()}),st(this.minTimeout,this.maxTimeout))}},{key:"start",value:function(){this._generateElement()}},{key:"stop",value:function(){for(var t in clearTimeout(this.timer),this.elements)this.elements[t].remove()}}])&&Oe(e.prototype,n),r&&Oe(e,r),t}();n(25);function Se(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Ce=function(){function t(e){var n=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this.startLives=r.lives||3,this._points=0,this.pointsToWin=10,this._lives=this.startLives,this.intersector=new S,this.table=k({points:{name:"Снежинки",value:0},lives:{name:"Жизни",value:this._lives}}),this.field=x(e,this.table.element);var i=document.createElement("div");i.classList.add("ground"),this.field.appendChild(i),this.hero=new se(this),this.field.appendChild(this.hero.element),this.hero.left=this.field.offsetWidth/2-this.hero.element.offsetWidth/2,this.snowfall=new Ee(this,{element:ye,minTimeout:800,maxTimeout:3100}),this.snowfall.on("collision",(function(){n.points=n.points+1})),this.penguins=new Ee(this,{element:je,minTimeout:720,maxTimeout:2700}),this.penguins.on("collision",(function(){n.loseLife()})),this.start()}var e,n,r;return e=t,(n=[{key:"loseLife",value:function(){this._lives=this._lives-1,this._lives=Math.max(0,this._lives),this.table.update({lives:this._lives}),0==this._lives&&this.lose()}},{key:"win",value:function(){this.trigger("win",100*this._lives+100)}},{key:"lose",value:function(){var t=this;this.hero.pause=!0,this.hero.left=this.field.offsetWidth/2-this.hero.offsetWidth/2,this.snowfall.stop(),this.penguins.stop(),this.field.onLose((function(){return t.start()})),this.points=0}},{key:"start",value:function(){this.hero.pause=!1,this.snowfall.start(),this.penguins.start(),this._lives=this.startLives,this.table.update({lives:this._lives})}},{key:"points",get:function(){return this._points},set:function(t){this._points=parseInt(t)||0,this.table.update({points:this._points}),this._points>=this.pointsToWin&&this.win()}}])&&Se(e.prototype,n),r&&Se(e,r),t}();n(27);function Pe(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Te=function(){function t(e){var n=this;arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),new v(this),this._points=0,this.time=0,this.intersector=new S,this.table=k({time:{name:"Время",value:this.time}}),this.timer=setInterval((function(){n.time++,n.showTime()}),1e3),this.field=x(e,this.table.element),this.width=50,this.height=20,this.step=20,this.currentPosition=[0,0],this.walls=[],this.$maze=this._createMaze(),this.maze=this._fillMaze(),this.amaze(this.currentPosition[0],this.currentPosition[1],!0);0!=this.walls.length;){var r=this.walls[Math.floor(Math.random()*this.walls.length)],i=r[2],o=[i[0]+2*(r[0]-i[0]),i[1]+2*(r[1]-i[1])];this.valid(o[0],o[1])?"maze"==this.maze[o[0]][o[1]]?this.walls.splice(this.walls.indexOf(r),1):(this.amaze(r[0],r[1],!1),this.amaze(o[0],o[1],!0)):this.walls.splice(this.walls.indexOf(r),1)}document.getElementById("0-0").className="block me",document.getElementById(this.height-2+"-"+(this.width-2)).className="block finish",document.body.onkeydown=function(t){n._onKeydown(t)}}var e,n,r;return e=t,(n=[{key:"showTime",value:function(){var t=Math.floor(this.time/60),e=this.time-60*t;this.table.update({time:(t<10?"0"+t:t)+":"+(e<10?"0"+e:e)})}},{key:"_createMaze",value:function(){var t=document.createElement("div");return t.style.width=this.width*this.step+"px",t.style.height=this.height*this.step+"px",this.field.appendChild(t),t}},{key:"_onKeydown",value:function(t){var e=[this.currentPosition[0]+(t.keyCode-39)%2,this.currentPosition[1]+(t.keyCode-38)%2];this.valid(e[0],e[1])&&"wall"!=this.maze[e[0]][e[1]]&&(document.getElementById(this.currentPosition[0]+"-"+this.currentPosition[1]).className="block",this.currentPosition=e,document.getElementById(this.currentPosition[0]+"-"+this.currentPosition[1]).className="block me",this.currentPosition[0]==this.height-2&&this.currentPosition[1]==this.width-2&&this.win())}},{key:"valid",value:function(t,e){return t<this.height&&t>=0&&e<this.width&&e>=0}},{key:"amaze",value:function(t,e,n){this.maze[t][e]="maze",document.getElementById(t+"-"+e).className="block",n&&this.valid(t+1,e)&&"wall"==this.maze[t+1][e]&&this.walls.push([t+1,e,[t,e]]),n&&this.valid(t-1,e)&&"wall"==this.maze[t-1][e]&&this.walls.push([t-1,e,[t,e]]),n&&this.valid(t,e+1)&&"wall"==this.maze[t][e+1]&&this.walls.push([t,e+1,[t,e]]),n&&this.valid(t,e-1)&&"wall"==this.maze[t][e-1]&&this.walls.push([t,e-1,[t,e]])}},{key:"_fillMaze",value:function(){for(var t=[],e=0;e<this.height;e++){t[e]=[];for(var n=0;n<this.width;t[e][n++]="wall"){var r=document.createElement("div");this.$maze.appendChild(r),r.className="block wall",r.setAttribute("id",e+"-"+n)}}return t}},{key:"win",value:function(){window.onkeydown=null,this.trigger("win",Math.floor(1e3/this.time+100))}},{key:"points",get:function(){return this._points},set:function(t){this._points=parseInt(t)||0,this.table.update({points:this._points})}}])&&Pe(e.prototype,n),r&&Pe(e,r),t}();window.points=0;var ze=function(t,e){var n,r=function(t){var e=document.createElement("div");return e.classList.add("game-".concat(t)),e.style.position="relative",e}(t);switch(document.body.appendChild(r),t){case"asia":n=new dt(r);break;case"europe":n=new w(r);break;case"africa":n=new Y(r);break;case"australia":n=new te(r);break;case"antarctica":n=new Ce(r);break;case"america":n=new Te(r)}n&&n.once("win",(function(t){points+=t,console.log("new points",points),n=null,r.remove(),e()}))};!function t(e){var n=u[e];h(n,(function(){n.game?(h(null),ze(n.game,(function(){t(e+1)}))):t(e+1)}))}(0)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,