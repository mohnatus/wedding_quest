/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./africa/index.css":
/*!**************************!*\
  !*** ./africa/index.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./africa/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./africa/index.js":
/*!*************************!*\
  !*** ./africa/index.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ "./game/index.js");
/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ "./africa/player/index.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map */ "./africa/map/index.js");
/* harmony import */ var _tribe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tribe */ "./africa/tribe/index.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index.css */ "./africa/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }








var AfricaGame =
/*#__PURE__*/
function () {
  function AfricaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AfricaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_5__["default"](this);
    this._points = 0;
    this.intersector = new _game__WEBPACK_IMPORTED_MODULE_0__["Intersector"]();
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_0__["GameTable"]({
      "points": {
        name: "Алмазы",
        value: 0
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_0__["GameField"](element, this.table.element);
    /** Герой */

    this.hero = new _player__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.field.appendChild(this.hero.element);
    this.hero.on('boundary', function (boundary) {
      return _this._onHeroBoundary(boundary);
    });
    /** Карта платформ */

    this.map = new _map__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.map.init();
    this.field.appendChild(this.map.element);
    /** Вражеское племя */

    this.tribe = new _tribe__WEBPACK_IMPORTED_MODULE_3__["default"](this);
    this.field.appendChild(this.tribe.element);
    /** Пересечение финиша */

    var finish = this.map.finish;
    var finishWatcher = this.intersector.watch(finish, this.hero.element);
    finish.on('intersector.events.collision', function (data) {
      _this.win();

      _this.intersector.stopWatcher(finishWatcher);
    });
    /** Столкновение с племенем */

    this.intersector.watch(this.tribe.element, this.hero.element);
    this.tribe.element.on('intersector.events.collision', function (data) {
      _this.lose();
    });
    /** Движение племени при движении карты */

    this.map.on('move', function (_ref) {
      var direction = _ref.direction,
          speed = _ref.speed;

      _this.tribe.move(direction, speed);
    });

    this._setHeroStartPosition();

    this._setTribeStartPosition();

    this.start();
  }

  _createClass(AfricaGame, [{
    key: "win",
    value: function win() {
      this.trigger("win");
    }
  }, {
    key: "lose",
    value: function lose() {
      var _this2 = this;

      this._setHeroStartPosition();

      this._setTribeStartPosition();

      this.points = this.defaultPoints;
      this.tribe.reset();
      this.map.reset();
      this.hero.pause = true;
      this.tribe.pause = true;
      this.field.onLose(function () {
        return _this2.start();
      });
    }
  }, {
    key: "start",
    value: function start() {
      this.hero.pause = false;
      this.tribe.pause = false;
      this.map.start();
    }
  }, {
    key: "_setHeroStartPosition",
    value: function _setHeroStartPosition() {
      var position = this.map.heroStartPosition;
      this.hero.left = position.left;
      this.hero.top = position.top;
    }
  }, {
    key: "_setTribeStartPosition",
    value: function _setTribeStartPosition() {
      var position = this.map.tribeStartPosition;
      this.tribe.left = position.left;
      this.tribe.top = position.top;
    }
  }, {
    key: "_onHeroBoundary",
    value: function _onHeroBoundary(boundary) {
      if (this.hero.mapBoundary) return;
      this.map.move(boundary, this.hero);
    }
  }, {
    key: "canMove",
    value: function canMove(mover, direction) {
      var moverStartPosition = mover.element.getBoundingClientRect();
      var moverNextPosition = {
        top: moverStartPosition.top,
        bottom: moverStartPosition.bottom,
        left: moverStartPosition.left,
        right: moverStartPosition.right
      };

      switch (direction) {
        case "up":
          moverNextPosition.top -= mover.speed.up;
          moverNextPosition.bottom -= mover.speed.up;
          break;

        case "down":
          moverNextPosition.top += mover.speed.down;
          moverNextPosition.bottom += mover.speed.down;
          break;

        case "left":
          moverNextPosition.left -= mover.speed.left;
          moverNextPosition.right -= mover.speed.left;
          break;

        case "right":
          moverNextPosition.left += mover.speed.right;
          moverNextPosition.right += mover.speed.right;
          break;
      }

      var mapPosition = this.map.element.getBoundingClientRect();
      var mapCoordinates = {
        left: moverNextPosition.left - mapPosition.left,
        right: moverNextPosition.right - mapPosition.left,
        top: moverNextPosition.top - mapPosition.top,
        bottom: moverNextPosition.bottom - mapPosition.top
      };
      var hasObject = this.map.hasObject(mapCoordinates);
      return !hasObject;
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    },
    set: function set(value) {
      this._points = parseInt(value) || 0;
      this.table.update({
        "points": this._points
      });
    }
  }]);

  return AfricaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AfricaGame);

/***/ }),

/***/ "./africa/map/index.css":
/*!******************************!*\
  !*** ./africa/map/index.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./africa/map/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./africa/map/index.js":
/*!*****************************!*\
  !*** ./africa/map/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./africa/map/map.js");
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.css */ "./africa/map/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_2__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var Map =
/*#__PURE__*/
function () {
  function Map(game) {
    _classCallCheck(this, Map);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.pointSize = 50;
    this.objects = [];
    this.map = [];
    this.game = game;
    this.element = this.render();
  }

  _createClass(Map, [{
    key: "init",
    value: function init() {
      this.initialLeft = this.left;
      this.minLeft = -1 * this.width;
    }
  }, {
    key: "render",
    value: function render() {
      var el = document.createElement('div');
      el.id = 'map';

      for (var y = 0, rows = _map__WEBPACK_IMPORTED_MODULE_0__["map"].length; y < rows; y++) {
        this.map.push([]);

        for (var x = 0, cols = _map__WEBPACK_IMPORTED_MODULE_0__["map"][0].length; x < cols; x++) {
          var point = this.drawPoint(y, x);

          if (point) {
            el.appendChild(point.element);
          }

          this.map[y][x] = point || null;
        }
      }

      el.style.width = _map__WEBPACK_IMPORTED_MODULE_0__["map"][0].length * this.pointSize + "px";
      el.style.height = _map__WEBPACK_IMPORTED_MODULE_0__["map"].length * this.pointSize + "px";
      return el;
    }
  }, {
    key: "drawPoint",
    value: function drawPoint(row, col) {
      var _this = this;

      var symbol = _map__WEBPACK_IMPORTED_MODULE_0__["map"][row][col];
      var object = _map__WEBPACK_IMPORTED_MODULE_0__["legend"][symbol];
      if (!object) return;

      switch (object) {
        case "ground":
        case "platform":
          var el = document.createElement('div');
          el.style.width = this.pointSize + 'px';
          el.style.height = this.pointSize + 'px';
          el.classList.add(object);
          el.style.position = "absolute";
          el.style.top = this.pointSize * row + 'px';
          el.style.left = this.pointSize * col + 'px';
          return {
            object: object,
            element: el
          };

        case "hero":
          this._heroStartPosition = {
            top: this.pointSize * row,
            left: this.pointSize * col
          };
          break;

        case "coin":
          var coin = document.createElement('div');
          coin.style.width = this.pointSize + 'px';
          coin.style.height = this.pointSize + 'px';
          coin.classList.add(object);
          coin.style.position = "absolute";
          coin.style.top = this.pointSize * row + 'px';
          coin.style.left = this.pointSize * col + 'px';
          this.game.intersector.watch(coin, this.game.hero.element);
          coin.on('intersector.events.collision', function (data) {
            _this.game.points = _this.game.points + 1;
            coin.remove();
          });
          return {
            object: object,
            element: coin
          };

        case "tribe":
          this._tribeStartPosition = {
            top: this.pointSize * row,
            left: this.pointSize * col
          };
          break;

        case "exit":
          var finish = document.createElement('div');
          finish.style.width = this.pointSize + 'px';
          finish.style.height = this.pointSize + 'px';
          finish.classList.add("finish");
          finish.style.position = "absolute";
          finish.style.top = this.pointSize * row + 'px';
          finish.style.left = this.pointSize * col + 'px';
          this.finish = finish;
          return {
            object: "exit",
            element: finish
          };
      }
    }
  }, {
    key: "start",
    value: function start() {
      this.pause = false;
    }
  }, {
    key: "move",
    value: function move(direction, hero) {
      if (this.pause) return;
      var newPosition, speed;

      if (direction === "left") {
        speed = hero.speed.left / 2;
      } else if (direction === "right") {
        speed = -1 * hero.speed.right / 2;
      }

      newPosition = this.left + speed;
      if (newPosition > this.initialLeft) return;
      if (newPosition < this.minLeft) return;
      this.left = newPosition;
      this.trigger('move', {
        direction: direction,
        speed: speed
      });
    }
  }, {
    key: "reset",
    value: function reset() {
      var _this2 = this;

      this.left = this.initialLeft;
      this.map.forEach(function (row) {
        row.forEach(function (point) {
          if (point && point.object == 'coin') {
            _this2.element.appendChild(point.element);
          }
        });
      });
    }
  }, {
    key: "hasObject",
    value: function hasObject(coords) {
      for (var y = 0, rows = this.map.length; y < rows; y++) {
        for (var x = 0, cols = this.map[0].length; x < cols; x++) {
          var point = this.map[y][x];
          if (!point) continue;
          if (point.object !== 'platform' && point.object !== 'ground') continue;
          var pointCoords = {
            left: this.pointSize * x,
            right: this.pointSize * x + this.pointSize,
            top: this.pointSize * y,
            bottom: this.pointSize * y + this.pointSize
          };
          var isMoreLeft = coords.right <= pointCoords.left;
          var isMoreRight = coords.left >= pointCoords.right;
          var isMoreUp = coords.bottom <= pointCoords.top;
          var isMoreDown = coords.top >= pointCoords.bottom;
          if (isMoreLeft || isMoreRight || isMoreUp || isMoreDown) continue;
          return true;
        }
      }

      return false;
    }
  }, {
    key: "width",
    get: function get() {
      return this.pointSize * _map__WEBPACK_IMPORTED_MODULE_0__["map"][0].length;
    }
  }, {
    key: "height",
    get: function get() {
      return this.pointSize * _map__WEBPACK_IMPORTED_MODULE_0__["map"].length;
    }
  }, {
    key: "left",
    get: function get() {
      return parseInt(this.element.style.left) || 0;
    },
    set: function set(value) {
      this.element.style.left = Number(value) + 'px';
    }
  }, {
    key: "heroStartPosition",
    get: function get() {
      return this._heroStartPosition;
    }
  }, {
    key: "tribeStartPosition",
    get: function get() {
      return this._tribeStartPosition;
    }
  }]);

  return Map;
}();

/* harmony default export */ __webpack_exports__["default"] = (Map);

/***/ }),

/***/ "./africa/map/map.js":
/*!***************************!*\
  !*** ./africa/map/map.js ***!
  \***************************/
/*! exports provided: map, legend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "legend", function() { return legend; });
var map = ["........................................................................", "................................................*....*..................", "................................................=...===.................", "................*...........*................=......*......*............", ".....*.........==.....*...===....*.....*..=.........=x...===..........*.", "....==.....==.........==.........=.....=............===........=......=.", "+..-....................................................................", "########################################################################"];
var legend = {
  ".": null,
  "#": "ground",
  "=": "platform",
  "*": "coin",
  "+": "hero",
  "-": "tribe",
  "x": "exit"
};


/***/ }),

/***/ "./africa/player/index.js":
/*!********************************!*\
  !*** ./africa/player/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var Player =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Player, _player$Mover);

  function Player(game) {
    var _this;

    _classCallCheck(this, Player);

    var element = document.createElement('div');
    element.id = "hero";
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Player).call(this, element, {
      speed: {
        up: 4,
        down: 4,
        left: 4,
        right: 4
      },
      field: game.field,
      diff: {
        left: 0,
        right: game.field.offsetWidth / 2,
        top: 0,
        bottom: 0
      }
    }));
    _this.jumpTimer;
    _this.jumpHeight = 140;
    _this.game = game;
    new _game_player__WEBPACK_IMPORTED_MODULE_0__["KeyboardMover"](_assertThisInitialized(_this), 10);
    _this.checkTimer = setInterval(function () {
      if (_this.jumping) return;

      if (_this.canMove("down")) {
        _this.top = _this.top + _this.speed.down;
      }
    }, 10);
    return _this;
  }

  _createClass(Player, [{
    key: "canMove",
    value: function canMove(direction) {
      if (!this.game.canMove(this, direction)) {
        this.mapBoundary = true;
        return false;
      }

      this.mapBoundary = false;
      return _get(_getPrototypeOf(Player.prototype), "canMove", this).call(this, direction);
    }
  }, {
    key: "toUp",
    value: function toUp() {
      if (this.pause) return;

      if (this.canMove("up")) {
        this.startJump();
      } else {
        this.trigger("boundary", "up");
      }
    }
  }, {
    key: "startJump",
    value: function startJump() {
      var _this2 = this;

      if (this.jumping) return;
      this.jumping = true;
      var jumpStart = this.top;
      this.jumpTimer = setInterval(function () {
        var canMove = _this2.canMove("up");

        var maxHeight = _this2.top <= jumpStart - _this2.jumpHeight;

        if (!canMove || maxHeight) {
          clearInterval(_this2.jumpTimer);
          _this2.jumpTimer = setInterval(function () {
            if (!_this2.canMove("down")) {
              clearInterval(_this2.jumpTimer);
              _this2.jumping = false;
            } else {
              _this2.top = _this2.top + _this2.speed.down;
            }
          }, 10);
        } else {
          _this2.top = _this2.top - _this2.speed.up;
        }
      }, 10);
    }
  }]);

  return Player;
}(_game_player__WEBPACK_IMPORTED_MODULE_0__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Player);

/***/ }),

/***/ "./africa/tribe/index.css":
/*!********************************!*\
  !*** ./africa/tribe/index.css ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./africa/tribe/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./africa/tribe/index.js":
/*!*******************************!*\
  !*** ./africa/tribe/index.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.css */ "./africa/tribe/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var Tribe =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Tribe, _player$Mover);

  function Tribe(game) {
    var _this;

    _classCallCheck(this, Tribe);

    var el = document.createElement('div');
    el.id = 'tribe';
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tribe).call(this, el, {
      speed: {
        up: 0,
        down: 0,
        left: 1,
        right: 1
      },
      field: game.field,
      diff: {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
      }
    }));
    _this.name = "tribe";
    _this.game = game;
    _this._pause = true;
    _this._direction = 'right';

    _this.on('boundary', function (boundary) {
      if (boundary === 'right') _this.direction = 'left';else _this.direction = 'right';
    });

    return _this;
  }

  _createClass(Tribe, [{
    key: "reset",
    value: function reset() {
      this._direction = 'right';
    }
  }, {
    key: "reset",
    value: function reset() {
      this.pause = true;
      this.direction = 'right';
    }
  }, {
    key: "move",
    value: function move(direction, speed) {
      this.left = this.left + speed;
    }
  }, {
    key: "direction",
    get: function get() {
      return this._direction;
    },
    set: function set(value) {
      this._direction = value;
      if (this._direction === 'left') this.element.classList.add('revert');else this.element.classList.remove('revert');
    }
  }, {
    key: "left",
    get: function get() {
      return parseInt(this.element.style.left) || 0;
    },
    set: function set(value) {
      this.element.style.left = Number(value) + 'px';
    }
  }, {
    key: "top",
    get: function get() {
      return parseInt(this.element.style.top) || 0;
    },
    set: function set(value) {
      this.element.style.top = Number(value) + 'px';
    }
  }, {
    key: "pause",
    get: function get() {
      return this._pause;
    },
    set: function set(value) {
      var _this2 = this;

      this._pause = Boolean(value);
      clearInterval(this._moveTimer);

      if (!this._pause) {
        this._moveTimer = setInterval(function () {
          if (_this2.direction == 'right') {
            _this2.toRight();
          } else {
            _this2.toLeft();
          }
        }, 10);
      }
    }
  }]);

  return Tribe;
}(_game_player__WEBPACK_IMPORTED_MODULE_1__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Tribe);

/***/ }),

/***/ "./america/index.css":
/*!***************************!*\
  !*** ./america/index.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./america/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./america/index.js":
/*!**************************!*\
  !*** ./america/index.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ "./game/index.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "./america/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var AmericaGame =
/*#__PURE__*/
function () {
  function AmericaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AmericaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this._points = 0;
    this.intersector = new _game__WEBPACK_IMPORTED_MODULE_0__["Intersector"]();
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_0__["GameTable"]({
      "time": {
        name: "Время",
        value: 0
      },
      "lives": {
        name: "Жизни",
        value: 3
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_0__["GameField"](element, this.table.element);
    this.width = 50;
    this.height = 20;
    this.step = 20;
    this.currentPosition = [0, 0];
    this.walls = [];
    this.$maze = this._createMaze();
    this.maze = this._fillMaze();
    this.amaze(this.currentPosition[0], this.currentPosition[1], true);

    while (this.walls.length != 0) {
      var randomWall = this.walls[Math.floor(Math.random() * this.walls.length)],
          host = randomWall[2],
          opposite = [host[0] + (randomWall[0] - host[0]) * 2, host[1] + (randomWall[1] - host[1]) * 2];

      if (this.valid(opposite[0], opposite[1])) {
        if (this.maze[opposite[0]][opposite[1]] == 'maze') {
          this.walls.splice(this.walls.indexOf(randomWall), 1);
        } else {
          this.amaze(randomWall[0], randomWall[1], false), this.amaze(opposite[0], opposite[1], true);
        }
      } else {
        this.walls.splice(this.walls.indexOf(randomWall), 1);
      }
    }

    document.getElementById('0-0').className = 'block me';
    document.getElementById(this.height - 2 + '-' + (this.width - 2)).className = 'block finish';

    document.body.onkeydown = function (e) {
      _this._onKeydown(e);
    };
  }

  _createClass(AmericaGame, [{
    key: "_createMaze",
    value: function _createMaze() {
      var el = document.createElement("div");
      el.style.width = this.width * this.step + 'px';
      el.style.height = this.height * this.step + 'px';
      this.field.appendChild(el);
      return el;
    }
  }, {
    key: "_onKeydown",
    value: function _onKeydown(e) {
      var newPosition = [this.currentPosition[0] + (e.keyCode - 39) % 2, this.currentPosition[1] + (e.keyCode - 38) % 2];

      if (this.valid(newPosition[0], newPosition[1]) && this.maze[newPosition[0]][newPosition[1]] != 'wall') {
        document.getElementById(this.currentPosition[0] + '-' + this.currentPosition[1]).className = 'block';
        this.currentPosition = newPosition;
        document.getElementById(this.currentPosition[0] + '-' + this.currentPosition[1]).className = 'block me';

        if (this.currentPosition[0] == this.height - 2 && this.currentPosition[1] == this.width - 2) {
          this.win();
        }
      }
    }
  }, {
    key: "valid",
    value: function valid(a, b) {
      return a < this.height && a >= 0 && b < this.width && b >= 0 ? true : false;
    }
  }, {
    key: "amaze",
    value: function amaze(y, x, addBlockWalls) {
      this.maze[y][x] = 'maze';
      document.getElementById(y + '-' + x).className = 'block';
      if (addBlockWalls && this.valid(y + 1, x) && this.maze[y + 1][x] == 'wall') this.walls.push([y + 1, x, [y, x]]);
      if (addBlockWalls && this.valid(y - 1, x) && this.maze[y - 1][x] == 'wall') this.walls.push([y - 1, x, [y, x]]);
      if (addBlockWalls && this.valid(y, x + 1) && this.maze[y][x + 1] == 'wall') this.walls.push([y, x + 1, [y, x]]);
      if (addBlockWalls && this.valid(y, x - 1) && this.maze[y][x - 1] == 'wall') this.walls.push([y, x - 1, [y, x]]);
    }
  }, {
    key: "_fillMaze",
    value: function _fillMaze() {
      var maze = [];

      for (var y = 0; y < this.height; y++) {
        maze[y] = [];

        for (var x = 0; x < this.width; maze[y][x++] = 'wall') {
          var el = document.createElement("div");
          this.$maze.appendChild(el);
          el.className = 'block wall';
          el.setAttribute('id', y + '-' + x);
        }
      }

      return maze;
    }
  }, {
    key: "win",
    value: function win() {
      window.onkeydown = null;
      this.trigger("win");
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    },
    set: function set(value) {
      this._points = parseInt(value) || 0;
      this.table.update({
        "points": this._points
      });
    }
  }]);

  return AmericaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AmericaGame);

/***/ }),

/***/ "./antarctica/faller/faller.js":
/*!*************************************!*\
  !*** ./antarctica/faller/faller.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var Faller =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Faller, _player$Mover);

  function Faller(game, config) {
    var _this;

    _classCallCheck(this, Faller);

    var element = document.createElement('div');
    element.classList.add(config.className);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Faller).call(this, element, {
      speed: {
        up: 0,
        down: config.speed,
        left: 0,
        right: 0
      },
      field: game.field,
      diff: {
        bottom: config.bottomOffset
      }
    }));
    _this.left = Math.random() * (game.field.offsetWidth - _this.element.offsetWidth - 10) + 10;
    _this.timer = setInterval(function () {
      return _this.toDown();
    }, 100);

    _this.on('boundary', function () {
      return _this.remove();
    });

    return _this;
  }

  _createClass(Faller, [{
    key: "canMove",
    value: function canMove(direction) {
      if (direction !== "down") return false;
      return _get(_getPrototypeOf(Faller.prototype), "canMove", this).call(this, direction);
    }
  }, {
    key: "remove",
    value: function remove() {
      clearInterval(this.timer);
      this.element.remove();
      this.trigger('remove');
    }
  }]);

  return Faller;
}(_game_player__WEBPACK_IMPORTED_MODULE_0__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Faller);

/***/ }),

/***/ "./antarctica/faller/flow.js":
/*!***********************************!*\
  !*** ./antarctica/faller/flow.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var get_random_integer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-random-integer */ "./node_modules/get-random-integer/index.js");
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var Flow =
/*#__PURE__*/
function () {
  function Flow(game, config) {
    _classCallCheck(this, Flow);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.game = game;
    this.elements = {};
    this.element = config.element;
    this.minTimeout = config.minTimeout;
    this.maxTimeout = config.maxTimeout;
    this.timer = null;
  }

  _createClass(Flow, [{
    key: "_generateElement",
    value: function _generateElement() {
      var _this = this;

      var flowElement = new this.element(this.game);
      this.game.field.appendChild(flowElement.element);
      var watcher = this.game.intersector.watch(flowElement.element, this.game.hero.element);
      this.elements[watcher] = flowElement;
      flowElement.element.on('intersector.events.collision', function (data) {
        flowElement.remove();

        _this.trigger('collision');
      });
      flowElement.on('remove', function () {
        _this.game.intersector.stopWatcher(watcher);

        delete _this.elements[watcher];
      });
      flowElement.pause = false;
      this.timer = setTimeout(function () {
        return _this._generateElement();
      }, Object(get_random_integer__WEBPACK_IMPORTED_MODULE_0__["default"])(this.minTimeout, this.maxTimeout));
    }
  }, {
    key: "start",
    value: function start() {
      this._generateElement();
    }
  }, {
    key: "stop",
    value: function stop() {
      clearTimeout(this.timer);

      for (var watcher in this.elements) {
        this.elements[watcher].remove();
      }
    }
  }]);

  return Flow;
}();

/* harmony default export */ __webpack_exports__["default"] = (Flow);

/***/ }),

/***/ "./antarctica/faller/penguin.css":
/*!***************************************!*\
  !*** ./antarctica/faller/penguin.css ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./penguin.css */ "./node_modules/css-loader/index.js?!./antarctica/faller/penguin.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./antarctica/faller/penguin.js":
/*!**************************************!*\
  !*** ./antarctica/faller/penguin.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _penguin_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./penguin.css */ "./antarctica/faller/penguin.css");
/* harmony import */ var _penguin_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_penguin_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _faller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./faller */ "./antarctica/faller/faller.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var Penguin =
/*#__PURE__*/
function (_Faller) {
  _inherits(Penguin, _Faller);

  function Penguin(game) {
    _classCallCheck(this, Penguin);

    return _possibleConstructorReturn(this, _getPrototypeOf(Penguin).call(this, game, {
      className: 'penguin',
      speed: 15,
      bottomOffset: -40
    }));
  }

  return Penguin;
}(_faller__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Penguin);

/***/ }),

/***/ "./antarctica/faller/snowflake.css":
/*!*****************************************!*\
  !*** ./antarctica/faller/snowflake.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./snowflake.css */ "./node_modules/css-loader/index.js?!./antarctica/faller/snowflake.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./antarctica/faller/snowflake.js":
/*!****************************************!*\
  !*** ./antarctica/faller/snowflake.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _snowflake_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./snowflake.css */ "./antarctica/faller/snowflake.css");
/* harmony import */ var _snowflake_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_snowflake_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _faller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./faller */ "./antarctica/faller/faller.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var Snowflake =
/*#__PURE__*/
function (_Faller) {
  _inherits(Snowflake, _Faller);

  function Snowflake(game) {
    _classCallCheck(this, Snowflake);

    return _possibleConstructorReturn(this, _getPrototypeOf(Snowflake).call(this, game, {
      className: 'snowflake',
      speed: 10,
      bottomOffset: -40
    }));
  }

  return Snowflake;
}(_faller__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Snowflake);

/***/ }),

/***/ "./antarctica/hero/index.js":
/*!**********************************!*\
  !*** ./antarctica/hero/index.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var Hero =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Hero, _player$Mover);

  function Hero(game) {
    var _this;

    _classCallCheck(this, Hero);

    var element = document.createElement('div');
    element.id = "player";
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Hero).call(this, element, {
      speed: {
        up: 0,
        down: 0,
        left: 5,
        right: 5
      },
      field: game.field.element,
      diff: {
        left: 10,
        right: 10
      }
    }));
    new _game_player__WEBPACK_IMPORTED_MODULE_0__["KeyboardMover"](_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Hero, [{
    key: "canMove",
    value: function canMove(direction) {
      if (direction === "up" || direction === "down") return false;
      return _get(_getPrototypeOf(Hero.prototype), "canMove", this).call(this, direction);
    }
  }]);

  return Hero;
}(_game_player__WEBPACK_IMPORTED_MODULE_0__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Hero);

/***/ }),

/***/ "./antarctica/index.css":
/*!******************************!*\
  !*** ./antarctica/index.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./antarctica/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./antarctica/index.js":
/*!*****************************!*\
  !*** ./antarctica/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ "./game/index.js");
/* harmony import */ var _hero__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hero */ "./antarctica/hero/index.js");
/* harmony import */ var _faller_snowflake__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./faller/snowflake */ "./antarctica/faller/snowflake.js");
/* harmony import */ var _faller_penguin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./faller/penguin */ "./antarctica/faller/penguin.js");
/* harmony import */ var _faller_flow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./faller/flow */ "./antarctica/faller/flow.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index.css */ "./antarctica/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }









var AntarcticaGame =
/*#__PURE__*/
function () {
  function AntarcticaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AntarcticaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_6__["default"](this);
    this.startLives = config.lives || 3;
    this._points = 0;
    this.pointsToWin = 2;
    this._lives = this.startLives;
    this.intersector = new _game__WEBPACK_IMPORTED_MODULE_0__["Intersector"]();
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_0__["GameTable"]({
      "points": {
        name: "Снежинки",
        value: 0
      },
      "lives": {
        name: "Жизни",
        value: this._lives
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_0__["GameField"](element, this.table.element);
    var ground = document.createElement('div');
    ground.classList.add('ground');
    this.field.appendChild(ground);
    /** Герой */

    this.hero = new _hero__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.field.appendChild(this.hero.element);
    this.hero.left = this.field.offsetWidth / 2 - this.hero.element.offsetWidth / 2;
    this.snowfall = new _faller_flow__WEBPACK_IMPORTED_MODULE_4__["default"](this, {
      element: _faller_snowflake__WEBPACK_IMPORTED_MODULE_2__["default"],
      minTimeout: 800,
      maxTimeout: 3100
    });
    this.snowfall.on('collision', function () {
      _this.points = _this.points + 1;
    });
    this.penguins = new _faller_flow__WEBPACK_IMPORTED_MODULE_4__["default"](this, {
      element: _faller_penguin__WEBPACK_IMPORTED_MODULE_3__["default"],
      minTimeout: 720,
      maxTimeout: 2700
    });
    this.penguins.on('collision', function () {
      _this.loseLife();
    });
    this.start();
  }

  _createClass(AntarcticaGame, [{
    key: "loseLife",
    value: function loseLife() {
      this._lives = this._lives - 1;
      this._lives = Math.max(0, this._lives);
      this.table.update({
        "lives": this._lives
      });
      if (this._lives == 0) this.lose();
    }
  }, {
    key: "win",
    value: function win() {
      this.trigger("win");
    }
  }, {
    key: "lose",
    value: function lose() {
      var _this2 = this;

      this.hero.pause = true;
      this.hero.left = this.field.offsetWidth / 2 - this.hero.offsetWidth / 2;
      this.snowfall.stop();
      this.penguins.stop();
      this.field.onLose(function () {
        return _this2.start();
      });
      this.points = 0;
    }
  }, {
    key: "start",
    value: function start() {
      this.hero.pause = false;
      this.snowfall.start();
      this.penguins.start();
      this._lives = this.startLives;
      this.table.update({
        "lives": this._lives
      });
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    },
    set: function set(value) {
      this._points = parseInt(value) || 0;
      this.table.update({
        "points": this._points
      });

      if (this._points >= this.pointsToWin) {
        this.win();
      }
    }
  }]);

  return AntarcticaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AntarcticaGame);

/***/ }),

/***/ "./asia/index.css":
/*!************************!*\
  !*** ./asia/index.css ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./asia/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./asia/index.js":
/*!***********************!*\
  !*** ./asia/index.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ "./game/index.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "./asia/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./player */ "./asia/player/index.js");
/* harmony import */ var _track__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./track */ "./asia/track/index.js");
/* harmony import */ var _traffic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./traffic */ "./asia/traffic/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }








var AsiaGame =
/*#__PURE__*/
function () {
  function AsiaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AsiaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.intersector = new _game__WEBPACK_IMPORTED_MODULE_0__["Intersector"]();
    this._distance = config.distance || 4000;
    this._lives = 3;
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_0__["GameTable"]({
      "points": {
        name: "До цели",
        value: this._distance
      },
      "lives": {
        name: "Жизни",
        value: this._lives
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_0__["GameField"](element, this.table.element);
    /** Герой */

    this.hero = new _player__WEBPACK_IMPORTED_MODULE_3__["default"](this);
    this.field.appendChild(this.hero.element);
    this.hero.on('boundary', function (boundary) {
      return _this._onHeroBoundary(boundary);
    });
    _track__WEBPACK_IMPORTED_MODULE_4__["default"].finish = this._distance;
    this.track = new _track__WEBPACK_IMPORTED_MODULE_4__["default"](this);
    this.field.appendChild(this.track.element);
    this.track.init();
    this.track.on('check-mark', function (data) {
      _this.points = data.distance;
    });
    var finish = this.track.finish;
    this.intersector.watch(finish, this.hero.element);
    finish.on('intersector.events.collision', function (data) {
      _this.win();
    });

    this._setHeroStartPosition();

    this.traffic = new _traffic__WEBPACK_IMPORTED_MODULE_5__["default"](this, {});
    this.traffic.on('accident', function () {
      return _this.loseLife();
    });
    this.start();
  }

  _createClass(AsiaGame, [{
    key: "win",
    value: function win() {
      this.trigger("win", this.lives * 100);
    }
  }, {
    key: "lose",
    value: function lose() {
      var _this2 = this;

      this.hero.pause = true;
      this.track.reset();
      this.traffic.stop();

      this._setHeroStartPosition();

      this.points = this._distance;
      this.lives = 3;
      this.field.onLose(function () {
        return _this2.start();
      });
    }
  }, {
    key: "loseLife",
    value: function loseLife() {
      this.lives = this.lives - 1;
    }
  }, {
    key: "start",
    value: function start() {
      this.hero.pause = false;
      this.track.start();
      this.traffic.start();
    }
  }, {
    key: "_setHeroStartPosition",
    value: function _setHeroStartPosition() {
      this.hero.left = this.field.offsetWidth / 2 - this.hero.element.offsetWidth / 2;
      this.hero.top = this.field.offsetHeight + this.track.startOffset - this.hero.element.offsetHeight / 2;
    }
  }, {
    key: "_onHeroBoundary",
    value: function _onHeroBoundary(boundary) {
      if (boundary !== "up" && boundary !== "down") return;
      this.track.move(boundary, this.hero);
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    },
    set: function set(value) {
      this._points = parseInt(value) || 0;
      this.table.update({
        "points": this._points
      });
    }
  }, {
    key: "lives",
    get: function get() {
      return this._lives;
    },
    set: function set(value) {
      this._lives = parseInt(value) || 0;
      this._lives = Math.max(this._lives, 0);
      this.table.update({
        "lives": this._lives
      });
      if (this._lives === 0) this.lose();
    }
  }]);

  return AsiaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AsiaGame);

/***/ }),

/***/ "./asia/player/index.js":
/*!******************************!*\
  !*** ./asia/player/index.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../game/player */ "./game/player.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var Player =
/*#__PURE__*/
function (_player$Mover) {
  _inherits(Player, _player$Mover);

  function Player(game) {
    var _this;

    _classCallCheck(this, Player);

    var element = document.createElement('div');
    element.id = "hero";
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Player).call(this, element, {
      speed: {
        up: 7,
        down: 7,
        left: 6,
        right: 6
      },
      field: game.field,
      diff: {
        left: 0,
        right: 0,
        top: 120,
        bottom: 150
      }
    }));
    _this.jumpTimer;
    _this.jumpHeight = 140;
    _this.game = game;
    new _game_player__WEBPACK_IMPORTED_MODULE_0__["KeyboardMover"](_assertThisInitialized(_this), 10);
    return _this;
  }

  return Player;
}(_game_player__WEBPACK_IMPORTED_MODULE_0__["Mover"]);

/* harmony default export */ __webpack_exports__["default"] = (Player);

/***/ }),

/***/ "./asia/track/index.css":
/*!******************************!*\
  !*** ./asia/track/index.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./asia/track/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./asia/track/index.js":
/*!*****************************!*\
  !*** ./asia/track/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.css */ "./asia/track/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var Track =
/*#__PURE__*/
function () {
  function Track(game) {
    _classCallCheck(this, Track);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.game = game;
    this.element = this.render();
    this.pause = true;
  }

  _createClass(Track, [{
    key: "init",
    value: function init() {
      this.initialBottom = this.bottom;
      this.minBottom = -1 * (this.element.offsetHeight - this.game.field.offsetHeight);
    }
  }, {
    key: "start",
    value: function start() {
      this._setPosition();

      this.pause = false;
    }
  }, {
    key: "_setPosition",
    value: function _setPosition() {
      this.bottom = this.initialBottom;
    }
  }, {
    key: "reset",
    value: function reset() {
      this._setPosition();

      this.pause = true;
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var track = document.createElement('div');
      track.id = 'track';
      track.style.height = Track.finish + Track.step * 2 + 'px';
      var finish = document.createElement('div');
      finish.className = 'finish';
      finish.style.top = Track.step + 'px';
      track.appendChild(finish);
      var counter = 1;
      var signValue = Track.step * counter;

      var _loop = function _loop() {
        var signPosition = signValue + Track.step + 'px';
        var signElement = document.createElement('div');
        signElement.className = "sign";
        signElement.textContent = signValue / 1000 + 'km';
        signElement.style.top = signPosition;
        signElement.value = signValue;
        track.appendChild(signElement);

        _this.game.intersector.watch(signElement, _this.game.hero.element);

        signElement.on('intersector.events.collision', function () {
          _this._onCheckMark(signElement.value);
        });
        counter++;
        signValue = Track.step * counter;
      };

      while (signValue <= Track.finish) {
        _loop();
      }

      return track;
    }
  }, {
    key: "_onCheckMark",
    value: function _onCheckMark(markValue) {
      if (this.pause) return;
      this.trigger('check-mark', {
        distance: markValue
      });
    }
  }, {
    key: "move",
    value: function move(direction, hero) {
      if (this.pause) return;
      var newPosition;

      if (direction === "up") {
        newPosition = this.bottom - hero.speed.up / 2;
      } else if (direction === "down") {
        newPosition = this.bottom + hero.speed.up / 2;
      }

      if (newPosition > this.initialBottom) return;
      if (newPosition < this.minBottom) return;
      this.bottom = newPosition;
    }
  }, {
    key: "addCar",
    value: function addCar(car) {
      this.element.appendChild(car.element);
    }
  }, {
    key: "finish",
    get: function get() {
      return this.element.querySelector('.finish');
    }
  }, {
    key: "startOffset",
    get: function get() {
      return -1 * Track.step;
    }
  }, {
    key: "bottom",
    get: function get() {
      return parseInt(this.element.style.bottom) || 0;
    },
    set: function set(value) {
      this.element.style.bottom = Number(value) + 'px';
    }
  }]);

  return Track;
}();

Track.finish = 2000;
Track.step = 250;
/* harmony default export */ __webpack_exports__["default"] = (Track);

/***/ }),

/***/ "./asia/traffic/car.js":
/*!*****************************!*\
  !*** ./asia/traffic/car.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var get_random_integer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-random-integer */ "./node_modules/get-random-integer/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Car =
/*#__PURE__*/
function () {
  function Car() {
    _classCallCheck(this, Car);

    this.element = document.createElement('div');
    this.speed = Car.getRandomSpeed();
    this.element.className = "car car-".concat(Car.getRandomColor());
  }

  _createClass(Car, [{
    key: "remove",
    value: function remove() {
      this.removed = true;
      this.element.remove();
    }
  }, {
    key: "left",
    set: function set(value) {
      this.element.style.left = Number(value) + 'px';
    }
  }, {
    key: "bottom",
    get: function get() {
      return parseFloat(this.element.style.bottom) || 0;
    },
    set: function set(value) {
      this.element.style.bottom = Number(value) + 'px';
    }
  }]);

  return Car;
}();

Car.height = 50;
Car.variants = 4;
Car.minSpeed = 0.5;
Car.maxSpeed = 0.5;

Car.getRandomSpeed = function () {
  return Math.random() * (Car.maxSpeed - Car.minSpeed) + Car.minSpeed;
};

Car.getRandomColor = function () {
  return Object(get_random_integer__WEBPACK_IMPORTED_MODULE_0__["default"])(0, Car.variants);
};

/* harmony default export */ __webpack_exports__["default"] = (Car);

/***/ }),

/***/ "./asia/traffic/index.js":
/*!*******************************!*\
  !*** ./asia/traffic/index.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _car__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./car */ "./asia/traffic/car.js");
/* harmony import */ var get_random_integer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-random-integer */ "./node_modules/get-random-integer/index.js");
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var Traffic =
/*#__PURE__*/
function () {
  function Traffic(game, config) {
    _classCallCheck(this, Traffic);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.config = Object.assign({
      minDelay: 1100,
      maxDelay: 2500,
      maxCars: 7,
      minCarSpeed: 0.6,
      maxCarSpeed: 1.6
    }, config);
    _car__WEBPACK_IMPORTED_MODULE_0__["default"].maxSpeed = this.config.maxCarSpeed;
    _car__WEBPACK_IMPORTED_MODULE_0__["default"].minSpeed = this.config.minCarSpeed;
    this.game = game;
    this.track = this.game.track;
    this.width = this.track.element.offsetWidth;
    this.intersector = this.game.intersector;
    this.cars = [];
    this.flowTimer;
    this.generationTimer;
  }

  _createClass(Traffic, [{
    key: "start",
    value: function start() {
      this.startFlow();
      this.startMoving();
    }
  }, {
    key: "stop",
    value: function stop() {
      var _this = this;

      clearInterval(this.flowTimer);
      clearTimeout(this.generationTimer);
      this.cars.forEach(function (car) {
        _this.game.intersector.stopWatcher(car.watcher);

        car.remove();
      });
      this.cars.length = 0;
    }
  }, {
    key: "startMoving",
    value: function startMoving() {
      var _this2 = this;

      this.flowTimer = setInterval(function () {
        _this2.cars = _this2.cars.filter(function (car) {
          return !car.removed;
        });

        _this2.cars.forEach(function (car) {
          var newPosition = car.bottom - car.speed;

          if (newPosition < _this2.finishBottomPosition) {
            car.remove();

            _this2.game.intersector.stopWatcher(car.watcher);

            return;
          }

          car.bottom = newPosition;
        });
      }, 0);
    }
  }, {
    key: "startFlow",
    value: function startFlow() {
      var _this3 = this;

      var iteration = function iteration() {
        var delay = 100;

        if (_this3.cars.length < _this3.config.maxCars) {
          _this3.createCar();

          delay = _this3.delay;
        }

        _this3.generationTimer = setTimeout(function () {
          return iteration();
        }, delay);
      };

      iteration();
    }
  }, {
    key: "createCar",
    value: function createCar() {
      var _this4 = this;

      var car = new _car__WEBPACK_IMPORTED_MODULE_0__["default"]();
      this.cars.push(car);
      car.bottom = this.startBottomPosition;
      car.left = this.startLeftPosition;
      this.track.addCar(car);
      var watcher = this.game.intersector.watch(car.element, this.game.hero.element);
      car.watcher = watcher;
      car.element.on('intersector.events.collision', function () {
        return _this4._onCollision(car);
      });
    }
  }, {
    key: "_onCollision",
    value: function _onCollision(car) {
      car.remove();
      this.trigger('accident');
    }
  }, {
    key: "startBottomPosition",
    get: function get() {
      return this.game.field.offsetHeight - this.track.bottom + _car__WEBPACK_IMPORTED_MODULE_0__["default"].height;
    }
  }, {
    key: "finishBottomPosition",
    get: function get() {
      return -2 * _car__WEBPACK_IMPORTED_MODULE_0__["default"].height;
    }
  }, {
    key: "startLeftPosition",
    get: function get() {
      return Object(get_random_integer__WEBPACK_IMPORTED_MODULE_1__["default"])(20, this.width - 40);
    }
  }, {
    key: "delay",
    get: function get() {
      return Object(get_random_integer__WEBPACK_IMPORTED_MODULE_1__["default"])(this.config.minDelay, this.config.maxDelay);
    }
  }]);

  return Traffic;
}();

/* harmony default export */ __webpack_exports__["default"] = (Traffic);

/***/ }),

/***/ "./australia/attack-controller.js":
/*!****************************************!*\
  !*** ./australia/attack-controller.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enemy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enemy */ "./australia/enemy/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var attacks = [{
  delay: 3000,
  speed: 0.1,
  interval: 5000,
  count: 3
}, {
  delay: 3000,
  speed: 0.2,
  interval: 5000,
  count: 3
}, {
  delay: 3000,
  speed: 0.4,
  interval: 5000,
  count: 3
}];

var AttackController =
/*#__PURE__*/
function () {
  function AttackController(game) {
    _classCallCheck(this, AttackController);

    this.game = game;
    this.index = -1;
    this.timer;
    this.pause = true;
  }

  _createClass(AttackController, [{
    key: "start",
    value: function start() {
      this.pause = false;
      this.startAttackTimer();
    }
  }, {
    key: "startAttackTimer",
    value: function startAttackTimer() {
      var _this = this;

      this.index++;
      var attack = attacks[this.index];

      if (!attack) {
        this.game.trigger('finishAttacks');
        return;
      }

      this.timer = setTimeout(function () {
        _this.game.attacked = true;

        _this.startAttack();
      }, attack.delay);
    }
  }, {
    key: "stop",
    value: function stop() {
      this.pause = true;
      this.game.attacked = false;
      clearTimeout(this.timer);
    }
  }, {
    key: "reset",
    value: function reset() {
      this.stop();
      this.index = 0;
    }
  }, {
    key: "startAttack",
    value: function startAttack() {
      var _this2 = this;

      this.game.trigger('startAttack');
      var attack = attacks[this.index];
      var count = 0;
      var attackInterval = setInterval(function () {
        if (_this2.pause) {
          clearInterval(attackInterval);
          return;
        }

        if (count >= attack.count) {
          clearInterval(attackInterval);

          _this2.game.trigger('finishAttack');

          _this2.startAttackTimer();

          return;
        }

        var lineIndex = Math.floor(Math.random() * 3);
        var line = _this2.game.lines[lineIndex];
        var enemy = new _enemy__WEBPACK_IMPORTED_MODULE_0__["default"]();
        count++;
        enemy.right = -120;
        enemy.el.style.right = enemy.right + 'px';
        line.element.appendChild(enemy.el);
        line.enemies.push(enemy);
        var enemyInterval = setInterval(function () {
          if (enemy.removed || enemy.right >= 600) {
            clearInterval(enemyInterval);
          } else {
            enemy.right += attack.speed;
            enemy.el.style.right = enemy.right + 'px';
          }
        }, 10);
      }, attack.interval);
    }
  }, {
    key: "count",
    get: function get() {
      return this._count || 0;
    },
    set: function set(value) {
      this._count = value;
    }
  }]);

  return AttackController;
}();

/* harmony default export */ __webpack_exports__["default"] = (AttackController);

/***/ }),

/***/ "./australia/enemy/index.js":
/*!**********************************!*\
  !*** ./australia/enemy/index.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Enemy =
/*#__PURE__*/
function () {
  function Enemy(lifes) {
    _classCallCheck(this, Enemy);

    this.el = this.render();
    this.lifes = 4;
  }

  _createClass(Enemy, [{
    key: "render",
    value: function render() {
      var el = document.createElement('div');
      el.classList.add('enemy');
      return el;
    }
  }, {
    key: "remove",
    value: function remove() {
      this.el.remove();
    }
  }, {
    key: "kill",
    value: function kill() {
      this.removed = true;
      this.remove();
    }
  }, {
    key: "lifes",
    get: function get() {
      return this._lifes;
    },
    set: function set(value) {
      var _this = this;

      var oldLifes = this.lifes;
      this._lifes = value;
      this.el.setAttribute('data-lifes', value);

      if (this._lifes < oldLifes) {
        this.el.classList.add('shot');
        setTimeout(function () {
          return _this.el.classList.remove('shot');
        }, 150);
      }
    }
  }]);

  return Enemy;
}();

/* harmony default export */ __webpack_exports__["default"] = (Enemy);

/***/ }),

/***/ "./australia/index.css":
/*!*****************************!*\
  !*** ./australia/index.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./australia/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./australia/index.js":
/*!****************************!*\
  !*** ./australia/index.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./line */ "./australia/line/index.js");
/* harmony import */ var _plant_board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plant/board */ "./australia/plant/board.js");
/* harmony import */ var _set_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./set-controller */ "./australia/set-controller.js");
/* harmony import */ var _attack_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attack-controller */ "./australia/attack-controller.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index.css */ "./australia/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../game */ "./game/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }









var AustraliaGame =
/*#__PURE__*/
function () {
  function AustraliaGame(element) {
    var _this = this;

    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, AustraliaGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_5__["default"](this);
    this._startMoney = config.money || 800;
    this._money = 0;
    /** Таблица результатов */

    this.table = _game__WEBPACK_IMPORTED_MODULE_6__["GameTable"]({
      "money": {
        name: "Деньги",
        value: 0
      }
    });
    /** Игровое поле */

    this.field = _game__WEBPACK_IMPORTED_MODULE_6__["GameField"](element, this.table.element);
    this.lines = [];

    for (var i = 0; i < 3; i++) {
      var line = new _line__WEBPACK_IMPORTED_MODULE_0__["default"](this, {
        index: i
      });
      this.field.appendChild(line.element);
      this.lines.push(line);
    }

    this.plantsBoard = new _plant_board__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.field.appendChild(this.plantsBoard.element);
    this.setController = new _set_controller__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.attackController = new _attack_controller__WEBPACK_IMPORTED_MODULE_3__["default"](this);
    this.on('finishAttacks', function () {
      if (!_this._hasEnemies()) {
        _this.win();

        return;
      }

      _this.monitored = true;
    });
    this.on('killEnemy', function () {
      if (_this.monitored) {
        if (!_this._hasEnemies()) {
          _this.win();
        }
      }
    });
    this.start();
  }

  _createClass(AustraliaGame, [{
    key: "_hasEnemies",
    value: function _hasEnemies() {
      return this.lines.some(function (line) {
        return line.enemies.length > 0;
      });
    }
  }, {
    key: "start",
    value: function start() {
      this.money = this._startMoney;
      this.setController.start();
      this.attackController.start();
    }
  }, {
    key: "win",
    value: function win() {
      this.trigger("win");
    }
  }, {
    key: "lose",
    value: function lose() {
      var _this2 = this;

      this.monitored = false;
      this.setController.reset();
      this.attackController.reset();
      this.table.update({
        "money": this._startMoney
      });
      this.field.onLose(function () {
        return _this2.start();
      });
    }
  }, {
    key: "money",
    get: function get() {
      return this._money || 0;
    },
    set: function set(value) {
      this._money = value;
      this.table.update({
        "money": this._money
      });
    }
  }, {
    key: "attacked",
    get: function get() {
      return this._attacked;
    },
    set: function set(value) {
      var _this3 = this;

      this._attacked = Boolean(value);
      this.lines.forEach(function (line) {
        line.attacked = _this3._attacked;
      });
    }
  }]);

  return AustraliaGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (AustraliaGame);

/***/ }),

/***/ "./australia/line/index.js":
/*!*********************************!*\
  !*** ./australia/line/index.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _spot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./spot */ "./australia/line/spot.js");
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var Line =
/*#__PURE__*/
function () {
  function Line(game, config) {
    var _this = this;

    _classCallCheck(this, Line);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_1__["default"](this);
    this.game = game;
    this.index = config.index + 1;
    this.spots = [];
    this.element = this.render();
    this.game.on('startAttack', function () {
      return _this._onAttack();
    });
    this.enemies = [];
    this.bullets = [];
    this.checkTimer;
  }

  _createClass(Line, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var element = document.createElement('div');
      element.classList.add('line');
      element.setAttribute('data-index', this.index);
      element.style.bottom = (this.index - 1) * 100 + 'px';

      var _loop = function _loop(i) {
        var spot = new _spot__WEBPACK_IMPORTED_MODULE_0__["default"](i, _this2);

        _this2.spots.push(spot);

        spot.element.addEventListener('click', function () {
          if (_this2.active) {
            _this2._onSelectSpot(spot);
          }
        });
        element.appendChild(spot.element);
      };

      for (var i = 0; i < 5; i++) {
        _loop(i);
      }

      return element;
    }
  }, {
    key: "activate",
    value: function activate() {
      this.active = true;

      this._run();

      this._startCheck();
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.active = false;

      this._stopCheck();

      this.spots.forEach(function (spot) {
        if (spot.plant) spot.plant.stop();
      });
      this.enemies.length = 0;
      this.bullets.length = 0;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.active = false;

      this._stopCheck();

      this.bullets.forEach(function (bullet) {
        bullet.removed = true;
      });
      this.bullets.length = 0;
      this.spots.forEach(function (spot) {
        if (spot.plant) spot.plant.remove();
      });
      this.enemies.forEach(function (enemy) {
        enemy.remove();
      });
      this.enemies.length = 0;
    }
  }, {
    key: "_onSelectSpot",
    value: function _onSelectSpot(spot) {
      if (spot.plant) return;
      this.game.trigger('selectSpot', spot);
    }
  }, {
    key: "_onAttack",
    value: function _onAttack() {
      var _this3 = this;

      this.spots.forEach(function (spot) {
        if (spot.plant) {
          spot.plant.activate(_this3);
        }
      });
    }
  }, {
    key: "_run",
    value: function _run() {
      var _this4 = this;

      this.cycleTimer = setInterval(function () {
        _this4.enemies.forEach(function (enemy) {
          if (enemy.el.offsetLeft <= 0) {
            _this4.game.lose();

            clearInterval(_this4.cycleTimer);
          }

          var enemyRect = enemy.el.getBoundingClientRect();

          _this4.bullets.forEach(function (bullet) {
            var bulletRect = bullet.getBoundingClientRect();

            if (bulletRect.right > enemyRect.left) {
              enemy.lifes = enemy.lifes - bullet.shot;
              bullet.remove();
              bullet.removed = true;

              if (enemy.lifes <= 0) {
                enemy.kill();

                var index = _this4.enemies.indexOf(enemy);

                if (index !== -1) _this4.enemies.splice(index, 1);

                _this4.game.trigger('killEnemy');

                _this4.game.points = _this4.game.points + 1;
              }
            }
          });

          _this4.bullets = _this4.bullets.filter(function (bullet) {
            return !bullet.removed;
          });
        });
      }, 10);
    }
  }, {
    key: "_startCheck",
    value: function _startCheck() {
      var _this5 = this;

      this.checkTimer = setInterval(function () {
        var plants = _this5.spots.filter(function (spot) {
          return spot.plant;
        }).map(function (spot) {
          return spot.plant;
        });

        _this5.enemies.forEach(function (enemy) {
          var enemyRect = enemy.el.getBoundingClientRect();
          plants.forEach(function (plant) {
            var plantRect = plant.view.getBoundingClientRect();
            if (enemyRect.left >= plantRect.right) return;
            plant.kill();
            _this5.game.points = _this5.game.points - 0.5;
          });
        });
      }, 1000);
    }
  }, {
    key: "_stopCheck",
    value: function _stopCheck() {
      clearInterval(this.checkTimer);
    }
  }, {
    key: "active",
    get: function get() {
      return this._active;
    },
    set: function set(value) {
      this._active = Boolean(value);
    }
  }]);

  return Line;
}();

/* harmony default export */ __webpack_exports__["default"] = (Line);

/***/ }),

/***/ "./australia/line/spot.js":
/*!********************************!*\
  !*** ./australia/line/spot.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Spot =
/*#__PURE__*/
function () {
  function Spot(index, line) {
    _classCallCheck(this, Spot);

    this.index = index;
    this.line = line;
    this.element = this.render();
  }

  _createClass(Spot, [{
    key: "render",
    value: function render() {
      var spot = document.createElement('div');
      spot.classList.add('spot');
      spot.setAttribute('data-index', this.index + 1);
      spot.style.left = this.index * 100 + 50 + 'px';
      return spot;
    }
  }, {
    key: "plant",
    get: function get() {
      return this._plant;
    },
    set: function set(plant) {
      var _this = this;

      this._plant = plant;
      var view = this._plant.view;
      this.element.appendChild(view);

      this._plant.on('killed', function () {
        _this._plant = null;
        view.remove();
      });
    }
  }]);

  return Spot;
}();

/* harmony default export */ __webpack_exports__["default"] = (Spot);

/***/ }),

/***/ "./australia/plant/board.js":
/*!**********************************!*\
  !*** ./australia/plant/board.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
/* harmony import */ var _plant_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plant.base */ "./australia/plant/plant.base.js");
/* harmony import */ var _plant_power__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plant.power */ "./australia/plant/plant.power.js");
/* harmony import */ var _plant_money__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./plant.money */ "./australia/plant/plant.money.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }






var Board =
/*#__PURE__*/
function () {
  function Board(game) {
    _classCallCheck(this, Board);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](this);
    this.game = game;
    this.plants = [_plant_money__WEBPACK_IMPORTED_MODULE_3__["default"], _plant_base__WEBPACK_IMPORTED_MODULE_1__["default"], _plant_power__WEBPACK_IMPORTED_MODULE_2__["default"]];
    this.element = this.render();
  }

  _createClass(Board, [{
    key: "render",
    value: function render() {
      var _this = this;

      var element = document.createElement('div');
      element.classList.add('plants-board');
      this.plants.forEach(function (plant, index) {
        var preview = plant.getPreview();
        plant.preview = preview;
        preview.addEventListener('click', function () {
          if (_this.active) {
            console.log('select plant', plant);

            _this._onSelect(plant);
          }
        });
        element.appendChild(preview);
      });
      return element;
    }
  }, {
    key: "activate",
    value: function activate() {
      console.log('activate plants board');
      this.active = true;
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      console.log('deactivate plants board');
      this.active = false;
    }
  }, {
    key: "_onSelect",
    value: function _onSelect(plant) {
      if (this.selected) {
        this.selected.preview.classList.remove("active");
      }

      this.selected = plant;
      plant.preview.classList.add("active");
      this.game.trigger('selectPlant');
    }
  }, {
    key: "active",
    get: function get() {
      return this._active;
    },
    set: function set(value) {
      this._active = Boolean(value);
      this.element.classList.toggle('active', this._active);
    }
  }, {
    key: "selected",
    get: function get() {
      return this._selected;
    },
    set: function set(plantClass) {
      this._selected = plantClass;
    }
  }, {
    key: "selectedPlant",
    get: function get() {
      if (this._selected) {
        return new this._selected();
      }
    }
  }]);

  return Board;
}();

/* harmony default export */ __webpack_exports__["default"] = (Board);

/***/ }),

/***/ "./australia/plant/index.js":
/*!**********************************!*\
  !*** ./australia/plant/index.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var counter = 0;

var Plant =
/*#__PURE__*/
function () {
  function Plant() {
    _classCallCheck(this, Plant);

    this.index = ++counter;
    new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](this);
  }

  _createClass(Plant, [{
    key: "renderView",
    value: function renderView() {
      var view = document.createElement('div');
      view.className = 'plant-view plant';
      view.setAttribute('data-plant', this.constructor.plantName);
      return view;
    }
  }, {
    key: "execute",
    value: function execute(line) {}
  }, {
    key: "activate",
    value: function activate(line) {
      console.log('ACTIVATE', this.executed);
      if (this.executed) return;
      this.executed = true;
      this.execute(line);
    }
  }, {
    key: "stop",
    value: function stop() {
      this.stopped = true;
      clearInterval(this.executeTimer);
    }
  }, {
    key: "kill",
    value: function kill() {
      this.stop();
      this.trigger('killed');
    }
  }, {
    key: "remove",
    value: function remove() {
      this.stop();
      this.view.remove();
    }
  }, {
    key: "view",
    get: function get() {
      if (!this._view) {
        this._view = this.renderView();
      }

      return this._view;
    }
  }, {
    key: "price",
    get: function get() {
      return this.constructor.price;
    }
  }], [{
    key: "getPreview",
    value: function getPreview() {
      var el = document.createElement('div');
      el.classList.add('plant-preview');
      el.classList.add('plant');
      el.setAttribute('data-plant', this.plantName);
      var price = document.createElement('div');
      price.classList.add('plant-preview__price');
      price.textContent = this.price;
      el.appendChild(price);
      return el;
    }
  }]);

  return Plant;
}();

Plant.plantName = "plant";
/* harmony default export */ __webpack_exports__["default"] = (Plant);

/***/ }),

/***/ "./australia/plant/plant.base.js":
/*!***************************************!*\
  !*** ./australia/plant/plant.base.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ "./australia/plant/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var PlantBase =
/*#__PURE__*/
function (_Plant) {
  _inherits(PlantBase, _Plant);

  function PlantBase() {
    var _getPrototypeOf2;

    var _this;

    var shot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

    _classCallCheck(this, PlantBase);

    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      data[_key - 1] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlantBase)).call.apply(_getPrototypeOf2, [this].concat(data)));
    _this.shot = shot;
    return _this;
  }

  _createClass(PlantBase, [{
    key: "execute",
    value: function execute(line) {
      console.log('iteration', this.index);
      this.line = line;

      this._iterate();
    }
  }, {
    key: "_iterate",
    value: function _iterate() {
      var _this2 = this;

      var bullet = this._createBullet();

      this.line.element.appendChild(bullet);

      this._moveBullet(bullet);

      this.line.bullets.push(bullet);
      this.timeout = setTimeout(function () {
        if (_this2.stopped) return;

        _this2._iterate();
      }, PlantBase.executeInterval);
    }
  }, {
    key: "_createBullet",
    value: function _createBullet() {
      var el = document.createElement('div');
      el.className = "plant-bullet " + this.constructor.plantName;
      el.left = this.view.parentElement.offsetLeft + this.view.offsetWidth - 30;
      el.style.left = el.left + 'px';
      el.shot = this.shot;
      return el;
    }
  }, {
    key: "_moveBullet",
    value: function _moveBullet(bullet) {
      var _this3 = this;

      bullet.timer = setInterval(function () {
        bullet.left = bullet.left + 4;
        bullet.style.left = bullet.left + 'px';

        if (bullet.left > 600) {
          clearInterval(bullet.timer);
          bullet.remove();

          var index = _this3.line.bullets.indexOf(bullet);

          if (index !== -1) _this3.line.bullets.splice(index, 1);
        }
      }, 10);
    }
  }]);

  return PlantBase;
}(___WEBPACK_IMPORTED_MODULE_0__["default"]);

PlantBase.plantName = "base";
PlantBase.price = 100;
PlantBase.executeInterval = 2000;
/* harmony default export */ __webpack_exports__["default"] = (PlantBase);

/***/ }),

/***/ "./australia/plant/plant.money.js":
/*!****************************************!*\
  !*** ./australia/plant/plant.money.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ "./australia/plant/index.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var PlantMoney =
/*#__PURE__*/
function (_Plant) {
  _inherits(PlantMoney, _Plant);

  function PlantMoney() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, PlantMoney);

    for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {
      data[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlantMoney)).call.apply(_getPrototypeOf2, [this].concat(data)));
    _this.moneyTimer;
    return _this;
  }

  _createClass(PlantMoney, [{
    key: "renderView",
    value: function renderView() {
      var _this2 = this;

      var view = _get(_getPrototypeOf(PlantMoney.prototype), "renderView", this).call(this);

      var bg = document.createElement('div');
      bg.className = 'bg';
      view.appendChild(bg);
      this.bg = bg;
      view.addEventListener('click', function () {
        if (_this2.ready) {
          _this2.line.game.money = _this2.line.game.money + PlantMoney.price;
          _this2.ready = false;
          _this2.bg.style.height = 0;

          _this2._startTimer();
        }
      });
      return view;
    }
  }, {
    key: "execute",
    value: function execute(line) {
      this.line = line;

      this._startTimer();
    }
  }, {
    key: "_startTimer",
    value: function _startTimer() {
      var _this3 = this;

      this.startTime = Date.now();
      this.moneyTimer = setTimeout(function () {
        clearInterval(_this3.updateTimer);
        _this3.ready = true;
      }, PlantMoney.executeInterval);
      this.updateTimer = setInterval(function () {
        var now = Date.now();
        var percent = (now - _this3.startTime) * 100 / (PlantMoney.executeInterval - 5);
        _this3.bg.style.height = percent + '%';
      }, 100);
    }
  }, {
    key: "ready",
    get: function get() {
      return this._ready;
    },
    set: function set(value) {
      this._ready = value;

      if (this._ready) {
        this.view.setAttribute('data-ready', '');
      } else {
        this.view.removeAttribute('data-ready');
      }
    }
  }]);

  return PlantMoney;
}(___WEBPACK_IMPORTED_MODULE_0__["default"]);

PlantMoney.plantName = "money";
PlantMoney.price = 50;
PlantMoney.executeInterval = 5000;
/* harmony default export */ __webpack_exports__["default"] = (PlantMoney);

/***/ }),

/***/ "./australia/plant/plant.power.js":
/*!****************************************!*\
  !*** ./australia/plant/plant.power.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _plant_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plant.base */ "./australia/plant/plant.base.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



var PlantPower =
/*#__PURE__*/
function (_PlantBase) {
  _inherits(PlantPower, _PlantBase);

  function PlantPower() {
    var _getPrototypeOf2;

    _classCallCheck(this, PlantPower);

    for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {
      data[_key] = arguments[_key];
    }

    return _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlantPower)).call.apply(_getPrototypeOf2, [this, 2].concat(data)));
  }

  return PlantPower;
}(_plant_base__WEBPACK_IMPORTED_MODULE_0__["default"]);

PlantPower.plantName = "power";
PlantPower.price = 300;
/* harmony default export */ __webpack_exports__["default"] = (PlantPower);

/***/ }),

/***/ "./australia/set-controller.js":
/*!*************************************!*\
  !*** ./australia/set-controller.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var SetController =
/*#__PURE__*/
function () {
  function SetController(game) {
    var _this = this;

    _classCallCheck(this, SetController);

    this.game = game;
    this.pause = true;
    this.game.on('selectPlant', function () {
      return _this._onSelectPlant();
    });
    this.game.on('selectSpot', function (spot) {
      return _this._onSelectSpot(spot);
    });
  }

  _createClass(SetController, [{
    key: "start",
    value: function start() {
      this.game.plantsBoard.activate();
      this.game.lines.forEach(function (line) {
        return line.activate();
      });
      this.pause = false;
    }
  }, {
    key: "stop",
    value: function stop() {
      this.game.lines.forEach(function (line) {
        return line.deactivate();
      });
      this.pause = true;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.game.lines.forEach(function (line) {
        return line.reset();
      });
      this.pause = true;
    }
  }, {
    key: "_onSelectPlant",
    value: function _onSelectPlant() {
      var plant = this.game.plantsBoard.selected;
      console.log('plant', plant);
    }
  }, {
    key: "_onSelectSpot",
    value: function _onSelectSpot(spot) {
      var plant = this.game.plantsBoard.selectedPlant;
      if (!plant) return;
      console.log(plant.price);

      if (plant.price <= this.game.money) {
        this.game.money -= plant.price;
        spot.plant = plant;
        if (this.game.attacked) plant.activate(spot.line);
      } else {
        console.warn('Недостаточно денег');
      }
    }
  }, {
    key: "pause",
    get: function get() {
      return this._pause;
    },
    set: function set(value) {
      this._pause = Boolean(value);
    }
  }]);

  return SetController;
}();

/* harmony default export */ __webpack_exports__["default"] = (SetController);

/***/ }),

/***/ "./europe/cards.js":
/*!*************************!*\
  !*** ./europe/cards.js ***!
  \*************************/
/*! exports provided: cards, images */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cards", function() { return cards; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "images", function() { return images; });
var cards = [{
  text: 'Париж',
  value: 'france'
}, {
  text: 'Франция',
  value: 'france'
}, {
  text: 'Брюссель',
  value: 'belgium'
}, {
  text: 'Бельгия',
  value: 'belgium'
}, {
  text: 'Мадрид',
  value: 'spane'
}, {
  text: 'Испания',
  value: 'spane'
}, {
  text: 'Афины',
  value: 'greece'
}, {
  text: 'Греция',
  value: 'greece'
}, {
  text: 'Дублин',
  value: 'ireland'
}, {
  text: 'Ирландия',
  value: 'ireland'
}, {
  text: 'Прага',
  value: 'chezh'
}, {
  text: 'Чехия',
  value: 'chezh'
}, {
  text: 'Осло',
  value: 'norway'
}, {
  text: 'Норвегия',
  value: 'norway'
}, {
  text: 'Варшава',
  value: 'poland'
}, {
  text: 'Польша',
  value: 'poland'
}, {
  text: 'Вильнюс',
  value: 'lithuania'
}, {
  text: 'Литва',
  value: 'lithuania'
}, {
  text: 'Скопье',
  value: 'macedonia'
}, {
  text: 'Македония',
  value: 'macedonia'
}];
var images = {
  'france': {
    img: 'img/compromat/1.jpeg',
    text: 'Гладил полотенчики!'
  },
  'belgium': {
    img: 'img/compromat/2.jpg',
    text: 'Плескался в ванной с пеной и резиновым утенком!'
  },
  'spane': {
    img: 'img/compromat/2.jpg_large',
    text: 'Ходил на быстрые свидания!'
  },
  'greece': {
    img: 'img/compromat/3.jpg',
    text: 'Возил куколку в коляске!'
  },
  'ireland': {
    img: 'img/compromat/4.jpg',
    text: 'Читал близнецам сказки!'
  },
  'chezh': {
    img: 'img/compromat/5.jpg',
    text: 'Делал добрые дела!'
  },
  'norway': {
    img: 'img/compromat/6.jpg',
    text: 'Играл с котятами!'
  },
  'poland': {
    img: 'img/compromat/7.jpg',
    text: 'Дирижировал оркестром!'
  },
  'lithuania': {
    img: 'img/compromat/8.jpg',
    text: 'Питался фастфудом!'
  },
  'macedonia': {
    img: 'img/compromat/9.jpg',
    text: 'Мыл тарелочки!'
  }
};


/***/ }),

/***/ "./europe/index.css":
/*!**************************!*\
  !*** ./europe/index.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./europe/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./europe/index.js":
/*!*************************!*\
  !*** ./europe/index.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cards */ "./europe/cards.js");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ "./europe/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events-dispatch */ "./node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var clicks = 0;

var EuropeGame =
/*#__PURE__*/
function () {
  function EuropeGame(element) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, EuropeGame);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_2__["default"](this);
    this.field = element;
    this.cards = [];
    var width = config.width || 5;
    var height = config.height || 4;
    this.map = this.createRandomMap(_cards__WEBPACK_IMPORTED_MODULE_0__["cards"], width, height);
    this.renderMap();
    this.selected = null;
    this.inProcess = false;
    this.image = this.createImage();
    this.field.appendChild(this.image.wrapper);
  }

  _createClass(EuropeGame, [{
    key: "createImage",
    value: function createImage() {
      var wrapper = document.createElement('div');
      wrapper.className = "image";
      wrapper.style.display = "none";
      var imgWrapper = document.createElement('div');
      imgWrapper.className = "image__wrapper";
      wrapper.appendChild(imgWrapper);
      var img = document.createElement('img');
      imgWrapper.appendChild(img);
      var text = document.createElement('div');
      text.className = "image__text";
      wrapper.appendChild(text);
      var button = document.createElement('button');
      button.type = "button";
      button.textContent = "Продолжить";
      wrapper.appendChild(button);
      return {
        wrapper: wrapper,
        img: img,
        text: text,
        button: button
      };
    }
  }, {
    key: "createRandomMap",
    value: function createRandomMap(cards, width, height) {
      var combinations = [];
      var map = [];

      for (var y = 0; y < height; y++) {
        map.push([]);

        for (var x = 0; x < width; x++) {
          combinations.push([y, x]);
          map[y][x] = null;
        }
      }

      var counter = 0;

      while (combinations.length) {
        var card = cards[counter];
        if (!card) break;
        var random = Math.floor(Math.random() * combinations.length);
        var position = combinations[random];
        map[position[0]][position[1]] = card;
        combinations.splice(random, 1);
        counter++;
      }

      return map;
    }
  }, {
    key: "renderMap",
    value: function renderMap() {
      var _this = this;

      for (var y = 0; y < this.map.length; y++) {
        var row = document.createElement('div');
        row.className = 'row';

        var _loop = function _loop(x) {
          var cell = document.createElement('div');
          cell.className = 'cell';
          var card = _this.map[y][x];
          var $card = document.createElement('div');
          $card.className = "card";
          var text = document.createElement('span');
          text.textContent = card.text;
          $card.appendChild(text);
          $card.value = card.value;
          $card.clicks = 0;
          $card.setAttribute('data-value', card.value);
          $card.setAttribute('data-state', card.state);

          _this.cards.push($card);

          $card.addEventListener('click', function () {
            return _this.onCardClick($card);
          });
          cell.appendChild($card);
          row.appendChild(cell);
        };

        for (var x = 0; x < this.map[0].length; x++) {
          _loop(x);
        }

        this.field.appendChild(row);
      }
    }
  }, {
    key: "showImage",
    value: function showImage(img) {
      var _this2 = this;

      this.image.img.src = img.img;
      this.image.text.innerHTML = img.text;
      this.image.wrapper.style.display = "";

      this.image.button.onclick = function () {
        _this2.image.wrapper.style.display = "none";
        if (!_this2.cards.length) _this2.win();
      };
    }
  }, {
    key: "onCardClick",
    value: function onCardClick(card) {
      var _this3 = this;

      if (card == this.selected || this.inProcess) return;
      if (card.removed) return;
      clicks++;
      card.classList.add('show');
      card.clicks++;
      this.inProcess = true;
      setTimeout(function () {
        if (_this3.selected) {
          if (_this3.selected.value == card.value) {
            _this3.selected.classList.add('right');

            card.classList.add('right');

            var index = _this3.cards.indexOf(_this3.selected);

            _this3.cards.splice(index, 1);

            index = _this3.cards.indexOf(card);

            _this3.cards.splice(index, 1);

            var points = Math.max(1, 15 - card.clicks - _this3.selected.clicks);
            _this3.points = _this3.points + points;
            setTimeout(function () {
              _this3.selected.removed = true;
              card.removed = true;

              _this3.selected.setAttribute('data-removed', '');

              card.setAttribute('data-removed', '');
              _this3.selected = null;
              _this3.inProcess = false;

              _this3.showImage(_cards__WEBPACK_IMPORTED_MODULE_0__["images"][card.value]);
            }, 400);
          } else {
            _this3.selected.classList.add('wrong');

            card.classList.add('wrong');
            setTimeout(function () {
              _this3.selected.classList.remove('selected');

              _this3.selected.classList.remove('show');

              _this3.selected.classList.remove('wrong');

              card.classList.remove('show');
              card.classList.remove('wrong');
              _this3.selected = null;
              _this3.inProcess = false;
            }, 400);
          }
        } else {
          _this3.selected = card;

          _this3.selected.classList.add('selected');

          _this3.selected.classList.add('show');

          _this3.inProcess = false;
        }
      }, 600);
    }
  }, {
    key: "win",
    value: function win() {
      this.trigger("win", 1000 / clicks * 2 + 500);
    }
  }]);

  return EuropeGame;
}();

/* harmony default export */ __webpack_exports__["default"] = (EuropeGame);

/***/ }),

/***/ "./game/game-player/keyboard-mover.js":
/*!********************************************!*\
  !*** ./game/game-player/keyboard-mover.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var listen_keyboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! listen-keyboard */ "./game/node_modules/listen-keyboard/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var KeyboardMover = function KeyboardMover(mover, period) {
  var _this = this;

  _classCallCheck(this, KeyboardMover);

  this.mover = mover;
  this.listener = new listen_keyboard__WEBPACK_IMPORTED_MODULE_0__["default"](period);
  this.listener.on('LEFT', function () {
    return _this.mover.toLeft();
  });
  this.listener.on('RIGHT', function () {
    return _this.mover.toRight();
  });
  this.listener.on('UP', function () {
    return _this.mover.toUp();
  });
  this.listener.on('DOWN', function () {
    return _this.mover.toDown();
  });
};

/* harmony default export */ __webpack_exports__["default"] = (KeyboardMover);

/***/ }),

/***/ "./game/game-player/mover.js":
/*!***********************************!*\
  !*** ./game/game-player/mover.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./game/node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Mover =
/*#__PURE__*/
function () {
  function Mover(element, config) {
    _classCallCheck(this, Mover);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](this);
    this.element = element;
    this._speed = {
      left: 0,
      right: 0,
      up: 0,
      down: 0
    };
    Object.assign(this._speed, config.speed);
    this.field = config.field;
    this.diff = {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0
    };
    Object.assign(this.diff, config.diff);
    this.pause = true;
  }

  _createClass(Mover, [{
    key: "canMove",
    value: function canMove(direction) {
      if (this.field) {
        var moverRect = this.element.getBoundingClientRect();
        var fieldRect = this.field.getBoundingClientRect();

        switch (direction) {
          case "left":
            if (moverRect.left - this.speed.left < fieldRect.left + this.diff.left) return false;
            break;

          case "right":
            if (moverRect.right + this.speed.right > fieldRect.right - this.diff.right) return false;
            break;

          case "up":
            if (moverRect.top - this.speed.up < fieldRect.top + this.diff.top) return false;
            break;

          case "down":
            if (moverRect.bottom + this.speed.down > fieldRect.bottom - this.diff.bottom) return false;
        }
      }

      return true;
    }
  }, {
    key: "toLeft",
    value: function toLeft() {
      if (this.pause) return;

      if (this.canMove("left")) {
        this.left = this.left - this.speed.left;
      } else {
        this.trigger("boundary", "left");
      }
    }
  }, {
    key: "toRight",
    value: function toRight() {
      if (this.pause) return;

      if (this.canMove("right")) {
        this.left = this.left + this.speed.right;
      } else {
        this.trigger("boundary", "right");
      }
    }
  }, {
    key: "toUp",
    value: function toUp() {
      if (this.pause) return;

      if (this.canMove("up")) {
        this.top = this.top - this.speed.up;
      } else {
        this.trigger("boundary", "up");
      }
    }
  }, {
    key: "toDown",
    value: function toDown() {
      if (this.pause) return;

      if (this.canMove("down")) {
        this.top = this.top + this.speed.down;
      } else {
        this.trigger("boundary", "down");
      }
    }
  }, {
    key: "left",
    get: function get() {
      return parseInt(this.element.style.left) || 0;
    },
    set: function set(value) {
      this.element.style.left = Number(value) + 'px';
    }
  }, {
    key: "top",
    get: function get() {
      return parseInt(this.element.style.top) || 0;
    },
    set: function set(value) {
      this.element.style.top = Number(value) + 'px';
    }
  }, {
    key: "speed",
    get: function get() {
      return this._speed;
    },
    set: function set(speed) {
      if (speed.left) this._speed.left = speed.left;
      if (speed.right) this._speed.right = speed.right;
      if (speed.up) this._speed.up = speed.up;
      if (speed.down) this._speed.down = speed.down;
    }
  }]);

  return Mover;
}();

/* harmony default export */ __webpack_exports__["default"] = (Mover);

/***/ }),

/***/ "./game/index.js":
/*!***********************!*\
  !*** ./game/index.js ***!
  \***********************/
/*! exports provided: GameTable, GameField, Intersector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_game_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/game.table */ "./game/modules/game.table.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GameTable", function() { return _modules_game_table__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _modules_game_field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/game.field */ "./game/modules/game.field.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GameField", function() { return _modules_game_field__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _modules_intersector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/intersector */ "./game/modules/intersector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Intersector", function() { return _modules_intersector__WEBPACK_IMPORTED_MODULE_2__["default"]; });






/***/ }),

/***/ "./game/modules/game.field.css":
/*!*************************************!*\
  !*** ./game/modules/game.field.css ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!./game.field.css */ "./node_modules/css-loader/index.js?!./game/modules/game.field.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./game/modules/game.field.js":
/*!************************************!*\
  !*** ./game/modules/game.field.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_field_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game.field.css */ "./game/modules/game.field.css");
/* harmony import */ var _game_field_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_game_field_css__WEBPACK_IMPORTED_MODULE_0__);


var createMask = function createMask() {
  var el = document.createElement("div");
  el.classList.add("game-field__mask");
  el.style.display = "none";
  return el;
};

var createField = function createField() {
  var el = document.createElement("div");
  el.style.position = "relative";
  el.classList.add("game-field");
  return el;
};

var GameField = function GameField(el, table) {
  el.classList.add('game-wrapper');

  if (table) {
    el.appendChild(table);
  }

  var clickCallback;
  var field = createField();
  el.appendChild(field);
  var mask = createMask();
  mask.addEventListener("click", function () {
    return field.start();
  });
  field.appendChild(mask);

  field.onLose = function (callback) {
    clickCallback = callback;
    mask.style.display = "";
  };

  field.start = function () {
    mask.style.display = "none";
    if (typeof clickCallback === "function") clickCallback();
  };

  return field;
};

/* harmony default export */ __webpack_exports__["default"] = (GameField);

/***/ }),

/***/ "./game/modules/game.table.js":
/*!************************************!*\
  !*** ./game/modules/game.table.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var GameTable = function GameTable(params) {
  var table = document.createElement("table");
  table.classList.add("game-table");
  var nodes = {};

  for (var paramName in params) {
    var param = params[paramName];
    var row = document.createElement("tr");
    var name = document.createElement("td");
    name.textContent = param.name;
    row.appendChild(name);
    var value = document.createElement("td");
    value.textContent = param.value || 0;
    row.appendChild(value);
    nodes[paramName] = value;
    table.appendChild(row);
  }

  return {
    element: table,
    update: function update(data) {
      for (var _param in data) {
        var node = nodes[_param];
        if (node) node.textContent = data[_param];
      }
    }
  };
};

/* harmony default export */ __webpack_exports__["default"] = (GameTable);

/***/ }),

/***/ "./game/modules/intersector.js":
/*!*************************************!*\
  !*** ./game/modules/intersector.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./game/node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


/**
 * Intersector
 * @class
 * @description определяет пересечение объектов
 */

var Intersector =
/*#__PURE__*/
function () {
  function Intersector() {
    _classCallCheck(this, Intersector);
  }

  _createClass(Intersector, [{
    key: "check",

    /**
     * Определяет пересечение объектов
     * @param {HTMLElement} obj1 первый объект
     * @param {HTMLElement} obj2 второй объект
     * @param {Number} [offset] минимальное перекрытие одного объекта другим
     * @returns {Boolean}
     */
    value: function check(obj1, obj2) {
      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (obj1.removed || obj2.removed) {
        clearInterval(this.timer);
        return;
      }

      var coords1 = obj1.getBoundingClientRect();
      var coords2 = obj2.getBoundingClientRect(); // второй объект выше первого

      if (coords1.top > coords2.bottom - offset) return false; // второй объект ниже первого

      if (coords1.bottom < coords2.top + offset) return false; // второй объект левее первого

      if (coords1.left > coords2.right - offset) return false; // второй объект правее первого

      if (coords1.right < coords2.left + offset) return false;
      return true;
    }
    /**
     * Периодически проверяет пересечение объектов
     * @param {GameObject} obj1 
     * @param {GameObject} obj2 
     * @param {Number} [period] периодичность проверки в мс
     */

  }, {
    key: "watch",
    value: function watch(obj1, obj2, offset) {
      var _this = this;

      var period = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 100;
      new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](obj1);
      new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](obj2);
      var timer = setInterval(function () {
        var places = _this.check(obj1, obj2, offset);

        if (places) {
          obj1.trigger(Intersector.events.collision, {
            object: obj2
          });
          obj2.trigger(Intersector.events.collision, {
            object: obj1
          });
        }
      }, period);
      return timer;
    }
  }, {
    key: "stopWatcher",
    value: function stopWatcher(watcher) {
      clearInterval(watcher);
    }
  }]);

  return Intersector;
}();
/**
 * @static
 */


Intersector.events = {
  collision: "intersector.events.collision"
};
/* harmony default export */ __webpack_exports__["default"] = (Intersector);

/***/ }),

/***/ "./game/node_modules/events-dispatch/index.js":
/*!****************************************************!*\
  !*** ./game/node_modules/events-dispatch/index.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Dispatcher; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Dispatcher =
/*#__PURE__*/
function () {
  function Dispatcher(object) {
    var _this = this;

    _classCallCheck(this, Dispatcher);

    this.callbacks = {};

    if (object) {
      object.on = function () {
        return _this.on.apply(_this, arguments);
      };

      object.once = function () {
        return _this.once.apply(_this, arguments);
      };

      object.off = function () {
        return _this.off.apply(_this, arguments);
      };

      object.trigger = function () {
        return _this.trigger.apply(_this, arguments);
      };
    }
  }

  _createClass(Dispatcher, [{
    key: "on",
    value: function on(eventName, callback) {
      if (!this.callbacks[eventName]) this.callbacks[eventName] = [];

      var cb = function cb(data) {
        return callback(data);
      };

      this.callbacks[eventName].push(cb);
    }
  }, {
    key: "once",
    value: function once(eventName, callback) {
      var _this2 = this;

      if (!this.callbacks[eventName]) this.callbacks[eventName] = [];

      var cb = function cb(data) {
        callback(data);

        _this2.off(eventName, cb);
      };

      this.callbacks[eventName].push(cb);
    }
  }, {
    key: "off",
    value: function off(eventName, callback) {
      if (this.callbacks[eventName]) {
        var index = this.callbacks[eventName].indexOf(callback);

        if (index !== -1) {
          this.callbacks[eventName].splice(index, 1);
        }
      }
    }
  }, {
    key: "trigger",
    value: function trigger(eventName, data) {
      var _this3 = this;

      var cbs = this.callbacks[eventName];

      if (cbs) {
        cbs.forEach(function (cb) {
          var off = function off() {
            return _this3.off(eventName, cb);
          };

          cb(data, off);
        });
      }
    }
  }]);

  return Dispatcher;
}();



/***/ }),

/***/ "./game/node_modules/listen-keyboard/index.js":
/*!****************************************************!*\
  !*** ./game/node_modules/listen-keyboard/index.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var events_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events-dispatch */ "./game/node_modules/events-dispatch/index.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var KeyboardListener =
/*#__PURE__*/
function () {
  function KeyboardListener(period) {
    _classCallCheck(this, KeyboardListener);

    new events_dispatch__WEBPACK_IMPORTED_MODULE_0__["default"](this);
    this.actions = [];
    this.setListeners();
    this.timer = null;
    this.timerInterval = period || 100; // ms
  }

  _createClass(KeyboardListener, [{
    key: "setListeners",
    value: function setListeners() {
      var _this = this;

      document.addEventListener('keydown', function (e) {
        var code = e.keyCode;
        var action = KeyboardListener.codes[code];

        if (action) {
          var index = _this.actions.indexOf(action);

          if (index === -1) {
            _this.actions.push(action);

            _this.trigger(action);
          }

          if (!_this.started) _this.start();
        }
      });
      document.addEventListener('keyup', function (e) {
        var code = e.keyCode;
        var action = KeyboardListener.codes[code];

        if (action) {
          var index = _this.actions.indexOf(action);

          if (index !== -1) _this.actions.splice(index, 1);
          if (_this.actions.length == 0) _this.stop();
        }
      });
    }
  }, {
    key: "start",
    value: function start() {
      var _this2 = this;

      this.started = true;

      var launch = function launch() {
        _this2.actions.forEach(function (action) {
          _this2.trigger(action);
        });
      };

      this.timer = setInterval(launch, this.timerInterval);
      launch();
    }
  }, {
    key: "stop",
    value: function stop() {
      this.started = false;
      clearInterval(this.timer);
    }
  }]);

  return KeyboardListener;
}();

KeyboardListener.codes = {
  39: "RIGHT",
  68: "RIGHT",
  102: "RIGHT",
  37: "LEFT",
  65: "LEFT",
  100: "LEFT",
  40: "DOWN",
  83: "DOWN",
  98: "DOWN",
  38: "UP",
  87: "UP",
  104: "UP",
  13: "ENTER",
  32: "SPACE",
  8: "BACKSPACE",
  46: "DELETE"
};
/* harmony default export */ __webpack_exports__["default"] = (KeyboardListener);

/***/ }),

/***/ "./game/player.js":
/*!************************!*\
  !*** ./game/player.js ***!
  \************************/
/*! exports provided: Mover, KeyboardMover */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _game_player_mover__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game-player/mover */ "./game/game-player/mover.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Mover", function() { return _game_player_mover__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _game_player_keyboard_mover__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game-player/keyboard-mover */ "./game/game-player/keyboard-mover.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeyboardMover", function() { return _game_player_keyboard_mover__WEBPACK_IMPORTED_MODULE_1__["default"]; });





/***/ }),

/***/ "./node_modules/css-loader/index.js?!./africa/index.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./africa/index.css ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-africa .game-table {\r\n  width: 600px;\r\n}\r\n\r\n.game-africa .game-field {\r\n  position: relative;\r\n  height: 400px;\r\n  width: 600px;\r\n}\r\n\r\n.game-africa #hero {\r\n  position: absolute;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  \r\n  background-image: url('img/player.png');\r\n  background-position: left 50% bottom -5px;\r\n  z-index: 20;\r\n\r\n  width: 50px;\r\n  height: 50px;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./africa/map/index.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./africa/map/index.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-africa .ground {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0; right: 0;\r\n  height: 25px;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background: url('img/sand.jpg');\r\n}\r\n\r\n.game-africa .coin {\r\n  position: absolute;\r\n  background-image: url('img/coin.jpg');\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.game-africa #map {\r\n  position: absolute;\r\n  background-image: url('img/bg.png');\r\n  background-position: left 0 bottom 10px;\r\n  background-size: auto var(--field-width);\r\n  background-repeat: repeat-x;\r\n}\r\n\r\n.game-africa .platform {\r\n  background: url('img/sand.jpg');\r\n}\r\n\r\n\r\n.game-africa .finish {\r\n  background-image: url('img/flower.png');\r\n  background-position: center;\r\n  background-size: 70px;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./africa/tribe/index.css":
/*!********************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./africa/tribe/index.css ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "#tribe {\r\n  position: absolute;\r\n  background-size: contain;\r\n  background-image: url('img/tribe.png');\r\n  background-size: 100%;\r\n  background-position: bottom;\r\n  background-repeat: no-repeat;\r\n  width: 100px;\r\n  height: 50px;\r\n  filter: hue-rotate(290deg) brightness(5);\r\n  transform: scaleX(-1);\r\n}\r\n\r\n#tribe.revert {\r\n  transform: none;\r\n}\r\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./america/index.css":
/*!***************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./america/index.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-america .block {\r\n  float: left;\r\n  height: 20px;\r\n  width: 20px;\r\n}\r\n\r\n.game-america .wall {\r\n  background-color: #000;\r\n}\r\n\r\n.game-america .me {\r\n  position: relative;\r\n}\r\n\r\n.game-america .me:after {\r\n  background-color: #23afee;\r\n  border-radius: 100%;\r\n  content: '';\r\n  height: 20px;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 20px;\r\n}\r\n\r\n.game-america .finish {\r\n  background-color: #f31d1d;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./antarctica/faller/penguin.css":
/*!***************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./antarctica/faller/penguin.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\r\n.penguin {\r\n  width: 35px;\r\n  height: 40px;\r\n\r\n  position: absolute;\r\n}\r\n\r\n.penguin:before {\r\n  content: '';\r\n  background-image: url('img/penguin.png');\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n\r\n  position: absolute;\r\n  left: -20px; \r\n  top: 0;\r\n\r\n  width: 75px;\r\n  height: 50px;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./antarctica/faller/snowflake.css":
/*!*****************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./antarctica/faller/snowflake.css ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".snowflake {\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-image: url('img/snowflake.png');\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  border-radius: 50%;\r\n\r\n  position: absolute;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./antarctica/index.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./antarctica/index.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-antarctica .game-field {\r\n  width: 500px;\r\n  height: 400px;\r\n  background-image: url('img/mounts.png');\r\n  overflow: hidden;\r\n}\r\n\r\n.game-antarctica .ground {\r\n  position: absolute;\r\n  left: 0; right: 0;\r\n  bottom: 0;\r\n  height: 40px;\r\n\r\n  background: url('img/ice.jpg') center / auto 40px repeat-x;\r\n}\r\n\r\n.game-antarctica #player {\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-image: url('img/player.png');\r\n\r\n  width: 64px;\r\n  height: 64px;\r\n\r\n  position: absolute;\r\n  bottom: 20px;\r\n}\r\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./asia/index.css":
/*!************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./asia/index.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\r\n.game-asia .car {\r\n  width: 30px;\r\n  height: 50px;\r\n\r\n  position: absolute;\r\n}\r\n\r\n.game-asia .car:before {\r\n  content: '';\r\n  background-image: url('img/green-car.png');\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n\r\n  position: absolute;\r\n  left: -5px; \r\n  top: -6px;\r\n\r\n  width: 40px;\r\n  height: 72px;\r\n}\r\n\r\n.game-asia .car-1:before {\r\n  background-image: url('img/red-car.png');\r\n}\r\n\r\n.game-asia .car-2:before {\r\n  background-image: url('img/blue-car.png');\r\n}\r\n\r\n.game-asia .car-3:before {\r\n  background-image: url('img/yellow-car.png');\r\n}\r\n\r\n.game-asia #hero {\r\n  background-image: url('img/player.png');\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n\r\n  width: 64px;\r\n  height: 64px;\r\n\r\n  position: absolute;\r\n  z-index: 2;\r\n}\r\n\r\n.game-asia #track {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n\r\n  height: 2500px;\r\n\r\n  background-color: #aaa;\r\n}\r\n\r\n.game-asia #track:before {\r\n  content: '';\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  bottom: 0;\r\n  top: 0;\r\n  width: 33%;\r\n  border-width: 6px;\r\n  border-style: none dashed;\r\n  border-color: white;\r\n}\r\n\r\n.game-asia #track .sign {\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 5px;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 12px;\r\n  text-align: right;\r\n  padding-right: 25px;\r\n}\r\n\r\n.game-asia #track .sign:after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 5px;\r\n  right: 0;\r\n  top: 3px;\r\n  background: white;\r\n  margin-left: 5px;\r\n}\r\n\r\n.game-asia #track .finish {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  color: white;\r\n}\r\n\r\n.game-asia #track .finish:after {\r\n  content: '';\r\n  display: block;\r\n  width: 100%;\r\n  height: 6px;\r\n  background: white;\r\n  margin-top: 4px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.r-table {\r\n  width: var(--field-height);\r\n}\r\n\r\n.game-asia .r-table__points {\r\n  font-size: 0;\r\n}\r\n\r\n.game-asia .r-table__points:before, .game-asia .r-table__points .r-table__value {\r\n  font-size: 20px;\r\n}\r\n\r\n.game-asia .r-table__points:before {\r\n  content: 'Target: ';\r\n}\r\n\r\n.game-asia .r-table__points .r-table__value:after {\r\n  content: 'm';\r\n}\r\n\r\n#start, #win, #replay, #lose {\r\n  color: white;\r\n}\r\n\r\n#lose {\r\n  font-size: 1.5em;\r\n}\r\n\r\n.game-asia .game-field {\r\n  width: 400px;\r\n  height: 500px;\r\n  position: relative;\r\n  overflow: hidden;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./asia/track/index.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./asia/track/index.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "#track {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n\r\n  height: 2500px;\r\n\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n#track:before {\r\n  content: '';\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  bottom: 0;\r\n  top: 0;\r\n  width: 33%;\r\n  border-width: 6px;\r\n  border-style: none dashed;\r\n  border-color: white;\r\n}\r\n\r\n#track .sign {\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 5px;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 12px;\r\n  text-align: right;\r\n  padding-right: 25px;\r\n}\r\n\r\n#track .sign:after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 5px;\r\n  right: 0;\r\n  top: 3px;\r\n  background: white;\r\n  margin-left: 5px;\r\n}\r\n\r\n#track .finish {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  color: white;\r\n}\r\n\r\n#track .finish:after {\r\n  content: '';\r\n  display: block;\r\n  width: 100%;\r\n  height: 6px;\r\n  background: white;\r\n  margin-top: 4px;\r\n}\r\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./australia/index.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./australia/index.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-australia .game-field {\r\n  width: 600px;\r\n  height: 400px;\r\n}\r\n\r\n\r\n.game-australia .enemy {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  width: 120px;\r\n  height: 120px;\r\n  background-image: url('img/kengo.png');\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center bottom;\r\n}\r\n\r\n.game-australia .enemy.shot {\r\n  filter: hue-rotate(120deg);\r\n}\r\n\r\n.game-australia .enemy[data-lifes=\"3\"] {\r\n  \r\n}\r\n\r\n.game-australia .enemy[data-lifes=\"2\"] {\r\n  \r\n}\r\n\r\n.game-australia .enemy[data-lifes=\"1\"] {\r\n  \r\n}\r\n\r\n.game-australia .line {\r\n  position: absolute;\r\n  left: 0; right: 0;\r\n  height: 90px;\r\n  background: #c5ba9f;\r\n}\r\n.game-australia .line[data-index=\"1\"] { z-index: 3; }\r\n.game-australia .line[data-index=\"2\"] { z-index: 2; }\r\n.game-australia .line[data-index=\"3\"] { z-index: 1; }\r\n.game-australia .spot {\r\n  position: absolute;\r\n  width: 100px;\r\n  height: 90px;\r\n  background-image: url(img/ground.png);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n}\r\n\r\n.game-australia .spot:hover {\r\n  opacity: 0.6;\r\n}\r\n\r\n.plants-board {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 80px;\r\n  background-image: url(img/wood.png);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: flex;\r\n}\r\n\r\n.plant.plant-preview {\r\n  width: 160px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-position: left 10px center;\r\n  cursor: pointer;\r\n}\r\n\r\n.plant-preview.active:after, .plant-preview:hover:after {\r\n  content: '';\r\n  position: absolute;\r\n  background: goldenrod;\r\n  opacity: 0.4;\r\n  top: 0; left: 0; bottom: 0; right: 0;\r\n}\r\n\r\n.plant-preview__price {\r\n  color: white;\r\n  padding-left: 95px;\r\n}\r\n\r\n.plant {\r\n  position: relative;\r\n\r\n  width: 100px;\r\n  height: 90px;\r\n\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: 60px auto;\r\n}\r\n.plant[data-plant=\"base\"] {\r\n  background-image: url(img/base.gif);\r\n}\r\n.plant[data-plant=\"power\"] {\r\n  background-image: url(img/base.gif);\r\n  filter: hue-rotate(75deg);\r\n}\r\n.plant[data-plant=\"money\"] {\r\n\r\n  background-image: url(img/money.png);\r\n}\r\n.plant[data-plant=\"money\"] .bg {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: goldenrod;\r\n  opacity: 0.4;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  \r\n}\r\n.plant[data-plant=\"money\"][data-ready] .bg {\r\n  opacity: 0.7;\r\n  box-shadow: 0 0 4px 1px goldenrod;\r\n}\r\n\r\n.plant-bullet {\r\n  position: absolute;\r\n  top: 15px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #66fe6c;\r\n  box-shadow: 2px 2px 2px green;\r\n}\r\n.plant-bullet.power {\r\n  position: absolute;\r\n  top: 15px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #00e8ff;\r\n  box-shadow: 2px 2px 2px blue;\r\n}\r\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./europe/index.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./europe/index.css ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-europe {\r\n  padding-top: 50px;\r\n}\r\n\r\n.game-europe .row {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.game-europe .cell {\r\n  width: 140px;\r\n  height: 125px;\r\n  padding: 5px;\r\n}\r\n\r\n.game-europe .card {\r\n  position: relative;\r\n  font-size: 12px;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 0;\r\n  background: url('img/back.png') center / cover no-repeat;\r\n  filter: grayscale(0.5);\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  color: white;\r\n}\r\n\r\n.game-europe .card:hover {\r\n  filter: grayscale(0);\r\n}\r\n\r\n.game-europe .card.show {\r\n  font-size: 12px;\r\n\r\n  background-position: center;\r\n  background-size: cover;\r\n}\r\n\r\n.game-europe .card.show:before {\r\n  background: black;\r\n  z-index: 0;\r\n}\r\n\r\n.game-europe .card span {\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.game-europe .card:after, .card:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0; bottom: 0;\r\n  left: 0; right: 0;\r\n  opacity: 0.5;\r\n}\r\n\r\n.game-europe .card.wrong:after {\r\n  background: red;\r\n}\r\n\r\n.game-europe .card.right:after {\r\n  background: green;\r\n}\r\n\r\n.game-europe .card.show[data-value=\"france\"] {\r\n  background-image: url('img/france.svg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"belgium\"] {\r\n  background-image: url('img/belgium.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"spane\"] {\r\n  background-image: url('img/spane.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"greece\"] {\r\n  background-image: url('img/greece.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"ireland\"] {\r\n  background-image: url('img/ireland.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"chezh\"] {\r\n  background-image: url('img/chezh.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"norway\"] {\r\n  background-image: url('img/norway.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"poland\"] {\r\n  background-image: url('img/poland.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"lithuania\"] {\r\n  background-image: url('img/lithuania.jpg');\r\n}\r\n\r\n.game-europe .card.show[data-value=\"macedonia\"] {\r\n  background-image: url('img/macedonia.jpg');\r\n}\r\n\r\n.game-europe .card[data-removed]:before,\r\n.game-europe .card[data-removed]:after {\r\n  display: none;\r\n}\r\n\r\n.game-europe .card[data-removed] span {\r\n  font-size: 0;\r\n}\r\n\r\n.game-europe .image {\r\n  position: fixed;\r\n  top: 0; bottom: 0;\r\n  left: 0; right: 0;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.game-europe .image__wrapper {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n\r\n.game-europe .image img {\r\n  max-width: calc(100% - 80px);\r\n  max-height: 100%;\r\n  position: absolute;\r\n  object-fit: contain;\r\n  object-position: center;\r\n}\r\n\r\n.game-europe .image__text {\r\n  margin-top: 20px;\r\n}\r\n\r\n.game-europe .image button {\r\n  margin: 40px 0;\r\n}\r\n\r\n.game-europe .image button {\r\n  position: relative;\r\n  outline: none;\r\n  border: none;\r\n  background: none;\r\n  height: 60px;\r\n  padding: 10px 30px;\r\n\r\n  background: var(--button-background);\r\n  border: 4px solid var(--button-border);\r\n\r\n  cursor: pointer;\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 16px;\r\n}\r\n\r\n.game-europe .image button:hover {\r\n  border-color: var(--content-background);\r\n}\r\n\r\n.game-europe .image button:before,\r\n.game-europe .image button:after,\r\n.game-europe .image button span:before,\r\n.game-europe .image button span:after {\r\n  content: '';\r\n  width: 4px;\r\n  height: 4px;\r\n  background-color:  var(--content-background);\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.game-europe .image button:before,\r\n.game-europe .image button:after {\r\n  top: -4px;\r\n}\r\n\r\n.game-europe .image button span:before,\r\n.game-europe .image button span:after {\r\n  bottom: -4px;\r\n}\r\n\r\n.game-europe .image button:before,\r\n.game-europe .image button span:before {\r\n  left: -4px;\r\n}\r\n\r\n.game-europe .image button:after,\r\n.game-europe .image button span:after {\r\n  right: -4px;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./game/modules/game.field.css":
/*!*************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./game/modules/game.field.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".game-field {\r\n  overflow-x: hidden;\r\n}\r\n\r\n.game-field__mask {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0, 0, 0, 0.5) url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 24 24'%3E%3Cpath d='M9 12l-4.463 4.969-4.537-4.969h3c0-4.97 4.03-9 9-9 2.395 0 4.565.942 6.179 2.468l-2.004 2.231c-1.081-1.05-2.553-1.699-4.175-1.699-3.309 0-6 2.691-6 6h3zm10.463-4.969l-4.463 4.969h3c0 3.309-2.691 6-6 6-1.623 0-3.094-.65-4.175-1.699l-2.004 2.231c1.613 1.526 3.784 2.468 6.179 2.468 4.97 0 9-4.03 9-9h3l-4.537-4.969z' fill='white' /%3E%3C/svg%3E\") center no-repeat;\r\n  cursor: pointer;\r\n  z-index: 1000;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?!./src/index.css":
/*!***********************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./src/index.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ":root {\r\n  --body-background: black;\r\n  --content-background: white;\r\n  --content-border: transparent;\r\n  --content-color: black;\r\n  --button-background: lime;\r\n  --button-border: black;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: 'Roboto Mono', sans-serif;\r\n  font-size: 20px;\r\n  background: var(--body-background) url(img/pixels.jpg);\r\n}\r\n\r\n.screen {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.screen__container {\r\n  width: 800px;\r\n  min-height: 500px;\r\n  background: var(--content-background);\r\n  color: var(--content-color);\r\n  padding: 40px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.screen__content {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n}\r\n\r\n.screen__pic {\r\n  width: 300px;\r\n  height: 300px;\r\n  margin-right: 40px;\r\n  overflow: hidden;\r\n}\r\n\r\n[data-class=\"pizdrik\"] .screen__pic img {\r\n  position: relative; left: -2px;\r\n}\r\n\r\n.screen__description {\r\n  width: 460px;\r\n}\r\n\r\n.screen__description p {\r\n  margin: 10px 0;\r\n}\r\n\r\n.screen__title {\r\n  margin-bottom: 40px;\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 30px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.screen__text {\r\n  line-height: 1.5;\r\n}\r\n\r\n.screen__footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 40px;\r\n}\r\n\r\n.screen button {\r\n  position: relative;\r\n  outline: none;\r\n  border: none;\r\n  background: none;\r\n  height: 60px;\r\n  padding: 10px 30px;\r\n\r\n  background: var(--button-background);\r\n  border: 4px solid var(--button-border);\r\n\r\n  cursor: pointer;\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 16px;\r\n}\r\n\r\n.screen button:hover {\r\n  border-color: var(--content-background);\r\n}\r\n\r\n.screen button:before,\r\n.screen button:after,\r\n.screen button span:before,\r\n.screen button span:after {\r\n  content: '';\r\n  width: 4px;\r\n  height: 4px;\r\n  background-color:  var(--content-background);\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.screen button:before,\r\n.screen button:after {\r\n  top: -4px;\r\n}\r\n\r\n.screen button span:before,\r\n.screen button span:after {\r\n  bottom: -4px;\r\n}\r\n\r\n.screen button:before,\r\n.screen button span:before {\r\n  left: -4px;\r\n}\r\n\r\n.screen button:after,\r\n.screen button span:after {\r\n  right: -4px;\r\n}\r\n\r\n.screen__pic[data-map] {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n\r\n.screen__pic[data-map=\"asia\"] {\r\n  background-image: url('img/map/india.png');\r\n}\r\n\r\n.screen__pic[data-map=\"europe\"] {\r\n  background-image: url('img/map/europe.png');\r\n}\r\n\r\n.screen__pic[data-map=\"africa\"] {\r\n  background-image: url('img/map/africa.png');\r\n}\r\n\r\n.game-wrapper {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.game-table {\r\n  background: #aaa;\r\n\r\n  width: 400px;\r\n  padding: 40px;\r\n  margin-bottom: 40px;\r\n\r\n  font-family: 'Press Start 2P', cursive;\r\n  font-size: 20px;\r\n}\r\n\r\n.game-table td {\r\n  padding: 5px;\r\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media " + item[2] + "{" + content + "}";
      } else {
        return content;
      }
    }).join("");
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === "string") modules = [[null, modules, ""]];
    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];
      if (typeof id === "number") alreadyImportedModules[id] = true;
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      //  when a module is imported multiple times with different media queries.
      //  I hope this will never occur (Hey this way we have smaller bundles)

      if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),

/***/ "./node_modules/events-dispatch/index.js":
/*!***********************************************!*\
  !*** ./node_modules/events-dispatch/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Dispatcher; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Dispatcher =
/*#__PURE__*/
function () {
  function Dispatcher(object) {
    var _this = this;

    _classCallCheck(this, Dispatcher);

    this.callbacks = {};

    if (object) {
      object.on = function () {
        return _this.on.apply(_this, arguments);
      };

      object.once = function () {
        return _this.once.apply(_this, arguments);
      };

      object.off = function () {
        return _this.off.apply(_this, arguments);
      };

      object.trigger = function () {
        return _this.trigger.apply(_this, arguments);
      };
    }
  }

  _createClass(Dispatcher, [{
    key: "on",
    value: function on(eventName, callback) {
      if (!this.callbacks[eventName]) this.callbacks[eventName] = [];

      var cb = function cb(data) {
        return callback(data);
      };

      this.callbacks[eventName].push(cb);
    }
  }, {
    key: "once",
    value: function once(eventName, callback) {
      var _this2 = this;

      if (!this.callbacks[eventName]) this.callbacks[eventName] = [];

      var cb = function cb(data) {
        callback(data);

        _this2.off(eventName, cb);
      };

      this.callbacks[eventName].push(cb);
    }
  }, {
    key: "off",
    value: function off(eventName, callback) {
      if (this.callbacks[eventName]) {
        var index = this.callbacks[eventName].indexOf(callback);

        if (index !== -1) {
          this.callbacks[eventName].splice(index, 1);
        }
      }
    }
  }, {
    key: "trigger",
    value: function trigger(eventName, data) {
      var _this3 = this;

      var cbs = this.callbacks[eventName];

      if (cbs) {
        cbs.forEach(function (cb) {
          var off = function off() {
            return _this3.off(eventName, cb);
          };

          cb(data, off);
        });
      }
    }
  }]);

  return Dispatcher;
}();



/***/ }),

/***/ "./node_modules/get-random-integer/index.js":
/*!**************************************************!*\
  !*** ./node_modules/get-random-integer/index.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


var defaultMaxValue = 1;
var defaultMinValue = 0;
var typeError = "Random generator error: both min or max values must be numbers";
/* harmony default export */ __webpack_exports__["default"] = (function (min, max) {
  if (!max) {
    if (!min) {
      max = defaultMaxValue;
    } else {
      max = min;
    }

    min = defaultMinValue;
  }

  if (typeof min !== "number" || typeof max !== "number") {
    throw new Error(typeError);
  }

  return Math.floor(Math.random() * (max - min) + min);
});

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target) {
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertInto + " " + options.insertAt.before);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */
module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  } // blank or null?


  if (!css || typeof css !== "string") {
    return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/"); // convert each url(...)

  /*
  This regular expression is just a way to recursively match brackets within
  a string.
  	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
     (  = Start a capturing group
       (?:  = Start a non-capturing group
           [^)(]  = Match anything that isn't a parentheses
           |  = OR
           \(  = Match a start parentheses
               (?:  = Start another non-capturing groups
                   [^)(]+  = Match anything that isn't a parentheses
                   |  = OR
                   \(  = Match a start parentheses
                       [^)(]*  = Match anything that isn't a parentheses
                   \)  = Match a end parentheses
               )  = End Group
               *\) = Match anything and then a close parens
           )  = Close non-capturing group
           *  = Match anything
        )  = Close capturing group
   \)  = Match a close parens
  	 /gi  = Get all matches, not the first.  Be case insensitive.
   */

  var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function (fullMatch, origUrl) {
    // strip quotes (if they exist)
    var unquotedOrigUrl = origUrl.trim().replace(/^"(.*)"$/, function (o, $1) {
      return $1;
    }).replace(/^'(.*)'$/, function (o, $1) {
      return $1;
    }); // already a full url? no change

    if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
      return fullMatch;
    } // convert the url to a full url


    var newUrl;

    if (unquotedOrigUrl.indexOf("//") === 0) {
      //TODO: should we add protocol?
      newUrl = unquotedOrigUrl;
    } else if (unquotedOrigUrl.indexOf("/") === 0) {
      // path should be relative to the base url
      newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
    } else {
      // path should be relative to current directory
      newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
    } // send back the fixed url(...)


    return "url(" + JSON.stringify(newUrl) + ")";
  }); // send back the fixed css

  return fixedCss;
};

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader??ref--5-1!./index.css */ "./node_modules/css-loader/index.js?!./src/index.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.css */ "./src/index.css");
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _screens__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./screens */ "./src/screens.js");
/* harmony import */ var _utils_update_screen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/update.screen */ "./src/utils/update.screen.js");
/* harmony import */ var _utils_init_game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/init.game */ "./src/utils/init.game.js");




var currentScreen = 0;

var showScreen = function showScreen(index) {
  currentScreen = index;
  var screen = _screens__WEBPACK_IMPORTED_MODULE_1__["default"][currentScreen];
  Object(_utils_update_screen__WEBPACK_IMPORTED_MODULE_2__["default"])(screen, function () {
    if (screen.game) {
      Object(_utils_update_screen__WEBPACK_IMPORTED_MODULE_2__["default"])(null);
      Object(_utils_init_game__WEBPACK_IMPORTED_MODULE_3__["default"])(screen.game, function () {
        showScreen(index + 1);
      });
    } else {
      showScreen(index + 1);
    }
  });
};

showScreen(10);

/***/ }),

/***/ "./src/screens.js":
/*!************************!*\
  !*** ./src/screens.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var screens = [{
  // 0 pupok
  "class": "pupok",
  img: "img/hero.png",
  title: "Пупок Джонс",
  text: "<p>\u0417\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u0438\u0441\u043A\u0430\u0442\u0435\u043B\u044C \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439 \u0438 \u0441\u043E\u043A\u0440\u043E\u0432\u0438\u0449.</p>"
}, {
  // 1 ahinea
  "class": "ahinea",
  img: "img/wife.png",
  title: "Ахинея Джонс",
  text: "<p>\u0412\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u0430\u044F \u0438 \u0432\u0435\u0440\u043D\u0430\u044F \u0441\u043F\u0443\u0442\u043D\u0438\u0446\u0430 \u041F\u0443\u043F\u043A\u0430 \u0414\u0436\u043E\u043D\u0441\u0430.</p>"
}, {
  // 2 zlobnikus
  "class": "zlobnikus",
  img: "img/villain.png",
  title: "Доктор Злобникус",
  text: "<p>\u0417\u043B\u043E\u0434\u0435\u0439, \u0432\u0435\u0447\u043D\u044B\u0439 \u043F\u0440\u043E\u0442\u0438\u0432\u043D\u0438\u043A \u041F\u0443\u043F\u043A\u0430 \u0414\u0436\u043E\u043D\u0441\u0430.</p>"
}, {
  // 3 intro
  "class": "intro",
  title: "Трагедия!",
  text: "<p>\u0417\u043B\u043E\u0431\u043D\u044B\u0439 \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043A\u043E\u0432\u0430\u0440\u043D\u043E \u043F\u043E\u0445\u0438\u0442\u0438\u043B \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u0443\u044E \u041F\u0443\u043F\u043A\u0430 \u0414\u0436\u043E\u043D\u0441\u0430 \u0438 \u0443\u0432\u0435\u0437 \u0435\u0435 \u0432 \u043D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u043E\u043C \u043D\u0430\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0438!</p><p>\u0422\u0435\u043F\u0435\u0440\u044C \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u043E\u043C\u0443 \u0438\u0441\u043A\u0430\u0442\u0435\u043B\u044E \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439 \u0438 \u0441\u043E\u043A\u0440\u043E\u0432\u0438\u0449 \u043F\u0440\u0438\u0434\u0435\u0442\u0441\u044F \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C\u0441\u044F \u0432 \u043F\u043E\u043B\u043D\u043E\u0435 \u043E\u043F\u0430\u0441\u043D\u043E\u0441\u0442\u0435\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0435, \u0447\u0442\u043E\u0431\u044B \u043D\u0430\u0439\u0442\u0438 \u0410\u0445\u0438\u043D\u0435\u044E \u0438 \u0441\u043F\u0430\u0441\u0442\u0438 \u0435\u0435.</p>"
}, {
  // 4 to-india
  "class": "to-india",
  map: "asia",
  title: "Азия, Индия",
  text: "<p>\u041E\u0442\u0432\u0430\u0436\u043D\u044B\u0439 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0432 \u041A\u0430\u043B\u044C\u043A\u0443\u0442\u0442\u0443, \u0447\u0442\u043E\u0431\u044B \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0442\u044C\u0441\u044F \u0441\u043E \u0441\u0432\u043E\u0438\u043C \u0434\u043E\u0431\u0440\u044B\u043C \u0434\u0440\u0443\u0433\u043E\u043C, \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440\u043E\u043C \u041F\u0438\u0437\u0434\u0440\u0438\u043A\u043E\u043C.</p>"
}, {
  // 5 asia-race
  "class": "asia-race",
  text: "<p>\u0427\u0442\u043E\u0431\u044B \u0434\u043E\u0431\u0440\u0430\u0442\u044C\u0441\u044F \u0434\u043E \u043E\u0444\u0438\u0441\u0430 \u0441\u0432\u043E\u0435\u0433\u043E \u0434\u0440\u0443\u0433\u0430, \u0433\u0435\u0440\u043E\u044E \u043D\u0443\u0436\u043D\u043E \u043F\u0440\u0435\u043E\u0434\u043E\u043B\u0435\u0442\u044C \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u043A\u0432\u0430\u0440\u0442\u0430\u043B\u043E\u0432.</p><p>\u0413\u043B\u0443\u0431\u043E\u043A\u043E \u0437\u0430\u0434\u0443\u043C\u0430\u0432\u0448\u0438\u0441\u044C \u043E \u0441\u0432\u043E\u0435\u0439 \u043F\u043E\u0442\u0435\u0440\u044F\u043D\u043D\u043E\u0439 \u043B\u044E\u0431\u0438\u043C\u043E\u0439, \u043E\u043D \u0441\u043B\u0443\u0447\u0430\u0439\u043D\u043E \u0432\u044B\u0445\u043E\u0434\u0438\u0442 \u043D\u0430 \u0448\u043E\u0441\u0441\u0435 \u0438 \u0435\u0434\u0432\u0430 \u043D\u0435 \u043F\u043E\u043F\u0430\u0434\u0430\u0435\u0442 \u043F\u043E\u0434 \u043A\u043E\u043B\u0435\u0441\u0430 \u0441\u0442\u0440\u0435\u043C\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u043C\u0447\u0430\u0449\u0435\u0433\u043E\u0441\u044F \u0430\u0432\u0442\u043E\u043C\u043E\u0431\u0438\u043B\u044F!</p><p>\u0412 \u0418\u043D\u0434\u0438\u0438 \u0443\u0436\u0430\u0441\u043D\u043E\u0435 \u0434\u043E\u0440\u043E\u0436\u043D\u043E\u0435 \u0434\u0432\u0438\u0436\u0435\u043D\u0438\u0435, \u043A\u0430\u043A \u0431\u044B \u041F\u0443\u043F\u043E\u043A \u043D\u0435 \u043F\u043E\u0441\u0442\u0440\u0430\u0434\u0430\u043B! \u0422\u044B \u0434\u043E\u043B\u0436\u0435\u043D \u043F\u0440\u043E\u0432\u0435\u0441\u0442\u0438 \u0435\u0433\u043E \u0434\u043E \u0446\u0435\u043B\u0438, \u0438\u0437\u0431\u0435\u0433\u0430\u044F \u0441\u0442\u043E\u043B\u043A\u043D\u043E\u0432\u0435\u043D\u0438\u0439 \u0441 \u043C\u0430\u0448\u0438\u043D\u0430\u043C\u0438.</p>",
  game: "asia"
}, {
  // 6 pizdrik
  "class": "pizdrik",
  img: "img/pr-pizdrik.png",
  title: "Профессор Пиздрик",
  text: "<p>\u0417\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440 \u0431\u044B\u043B \u043E\u0447\u0435\u043D\u044C \u043E\u0431\u0440\u0430\u0434\u043E\u0432\u0430\u043D, \u0443\u0432\u0438\u0434\u0435\u0432 \u0441\u0442\u0430\u0440\u043E\u0433\u043E \u0434\u0440\u0443\u0433\u0430.</p>\n    <p>\u041D\u043E \u0443\u0441\u043B\u044B\u0448\u0430\u0432 \u043E \u043F\u043E\u0445\u0438\u0449\u0435\u043D\u0438\u0438 \u0410\u0445\u0438\u043D\u0435\u0438, \u043F\u0440\u0438\u0448\u0435\u043B \u0432 \u0441\u0438\u043B\u044C\u043D\u043E\u0435 \u0432\u043E\u043B\u043D\u0435\u043D\u0438\u0435.</p>"
}, {
  // 7 compromat
  "class": "compromat",
  text: "<p>- \u0414\u043E\u0440\u043E\u0433\u043E\u0439 \u041F\u0443\u043F\u043E\u043A, - \u0441\u043A\u0430\u0437\u0430\u043B \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440. - \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043E\u0447\u0435\u043D\u044C \u043E\u043F\u0430\u0441\u0435\u043D. \u0427\u0442\u043E\u0431\u044B \u043F\u043E\u0431\u0435\u0434\u0438\u0442\u044C \u0435\u0433\u043E, \u0442\u044B \u0434\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u0431\u0440\u0430\u0442\u044C \u043D\u0430 \u043D\u0435\u0433\u043E \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442.</p><p>- \u0413\u0434\u0435 \u0436\u0435 \u043C\u043D\u0435 \u0435\u0433\u043E \u043D\u0430\u0439\u0442\u0438? - \u0441\u043F\u0440\u043E\u0441\u0438\u043B \u041F\u0443\u043F\u043E\u043A.</p><p>- \u042F \u0441\u043B\u044B\u0448\u0430\u043B, \u0447\u0442\u043E \u0432 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0435 \u0432\u0440\u0435\u043C\u044F \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043C\u043D\u043E\u0433\u043E \u043F\u0430\u043A\u043E\u0441\u0442\u0438\u043B \u0432 \u0415\u0432\u0440\u043E\u043F\u0435. \u041D\u0430\u0432\u0435\u0440\u043D\u044F\u043A\u0430, \u0442\u0430\u043C \u0442\u044B \u043D\u0430\u0439\u0434\u0435\u0448\u044C \u0447\u0442\u043E-\u043D\u0438\u0431\u0443\u0434\u044C \u0438\u043D\u0442\u0435\u0440\u0435\u0441\u043D\u043E\u0435.</p>"
}, {
  // 8 europe
  "class": "europe",
  map: "europe",
  title: "Европа",
  text: "\u041F\u043E \u0441\u043E\u0432\u0435\u0442\u0443 \u0441\u0432\u043E\u0435\u0433\u043E \u0434\u0440\u0443\u0433\u0430 \u041F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440\u0430 \u041F\u0438\u0437\u0434\u0440\u0438\u043A\u0430 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0441\u044F \u0432 \u0415\u0432\u0440\u043E\u043F\u0443, \u0447\u0442\u043E\u0431\u044B \u0441\u043E\u0431\u0440\u0430\u0442\u044C \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442 \u043D\u0430 \u043A\u043E\u0432\u0430\u0440\u043D\u043E\u0433\u043E \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430."
}, {
  // 9 europe-game
  "class": "europe-game",
  text: "<p> \u041F\u043E\u043C\u043E\u0433\u0438 \u041F\u0443\u043F\u043A\u0443 \u0414\u0436\u043E\u043D\u0441\u0443 \u0441\u043E\u0431\u0440\u0430\u0442\u044C \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442 \u043D\u0430 \u0437\u043B\u043E\u0434\u0435\u044F!</p><p>\u041F\u043E\u0434\u0431\u0435\u0440\u0438 \u0441\u0442\u043E\u043B\u0438\u0446\u0443 \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0439 \u0435\u0432\u0440\u043E\u043F\u0435\u0439\u0441\u043A\u043E\u0439 \u0441\u0442\u0440\u0430\u043D\u044B \u0438 \u0443\u0437\u043D\u0430\u0439, \u0447\u0435\u043C \u043E\u0442\u043B\u0438\u0447\u0438\u043B\u0441\u044F \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u0432 \u044D\u0442\u043E\u043C \u0433\u043E\u0440\u043E\u0434\u0435.</p>",
  game: "europe"
}, {
  // 10 europe-win
  "class": "europe-win",
  title: "Замечательно!",
  text: "<p> \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0441\u043E\u0431\u0440\u0430\u043B \u043C\u043D\u043E\u0433\u043E \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442\u0430 \u043D\u0430 \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430! \u0422\u0435\u043F\u0435\u0440\u044C \u043E\u043D \u0441\u043C\u043E\u0436\u0435\u0442 \u0448\u0430\u043D\u0442\u0430\u0436\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0435\u0433\u043E, \u0447\u0442\u043E\u0431\u044B \u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u0443\u044E \u0410\u0445\u0438\u043D\u0435\u044E.</p>"
}, {
  // 11 reason
  "class": "reason",
  text: "<p>\u041D\u043E \u0433\u0434\u0435 \u0436\u0435 \u0438\u0441\u043A\u0430\u0442\u044C \u044D\u0442\u043E\u0433\u043E \u043D\u0435\u0433\u043E\u0434\u044F\u044F, \u0447\u0442\u043E\u0431\u044B \u043D\u0430\u0447\u0430\u0442\u044C \u0435\u0433\u043E \u0448\u0430\u043D\u0442\u0430\u0436\u0438\u0440\u043E\u0432\u0430\u0442\u044C?</p><p>\u041F\u0443\u043F\u043E\u043A \u0437\u0430\u0434\u0443\u043C\u0430\u043B\u0441\u044F - \u0437\u0430\u0447\u0435\u043C \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0443 \u0410\u0445\u0438\u043D\u0435\u044F? </p>"
}, {
  // 12 mumba-umba
  "class": "mumba-umba",
  img: "img/panther.png",
  title: "Племя Мумба-Юмба",
  text: "<p>\u0410\u0445\u0438\u043D\u0435\u044F \u0414\u0436\u043E\u043D\u0441 \u0431\u043B\u0438\u0437\u043A\u043E \u0434\u0440\u0443\u0436\u0438\u0442 \u0441 \u041A\u043E\u0440\u0438\u0447\u043D\u0435\u0432\u044B\u043C \u0421\u0443\u0441\u043B\u0438\u043A\u043E\u043C - \u0432\u043E\u0436\u0434\u0435\u043C \u043F\u043B\u0435\u043C\u0435\u043D\u0438 \u041C\u0443\u043C\u0431\u0430-\u042E\u043C\u0431\u0430.</p><p>\u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043D\u0430\u0432\u0435\u0440\u043D\u044F\u043A\u0430 \u0437\u043D\u0430\u0435\u0442, \u0447\u0442\u043E \u0432 \u044D\u0442\u043E\u043C \u043F\u043B\u0435\u043C\u0435\u043D\u0438 \u0445\u0440\u0430\u043D\u0438\u0442\u0441\u044F \u0431\u0435\u0441\u0446\u0435\u043D\u043D\u0430\u044F \u0440\u0435\u043B\u0438\u043A\u0432\u0438\u044F - \u043F\u043E\u0434\u0442\u044F\u0436\u043A\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438.  </p>"
}, {
  // 13 answer
  "class": "answer",
  text: "<p>\u041C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C, \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u0410\u0445\u0438\u043D\u0435\u0438 \u043E\u043D \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044B\u0432\u0430\u0435\u0442 \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0438\u0442\u044C\u0441\u044F \u0441 \u041A\u043E\u0440\u0438\u0447\u043D\u0435\u0432\u044B\u043C \u0421\u0443\u0441\u043B\u0438\u043A\u043E\u043C \u0438 \u0437\u0430\u0431\u0440\u0430\u0442\u044C \u043F\u043E\u0434\u0442\u044F\u0436\u043A\u0438 \u0441\u0435\u0431\u0435!</p>"
}, {
  // 14 africa
  "class": "africa",
  map: "africa",
  title: "Африка",
  text: "<p>\u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044B\u0432\u0430\u044F \u043F\u0435\u0440\u0435\u0445\u0432\u0430\u0442\u0438\u0442\u044C \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0441\u044F \u0432 \u0422\u0430\u043D\u0437\u0430\u043D\u0438\u044E, \u0432 \u043F\u043B\u0435\u043C\u044F \u041C\u0443\u043C\u0431\u0430-\u042E\u043C\u0431\u0430.\n    </p>"
}, {
  // 15 dodoma
  "class": "dodoma",
  task: "word",
  title: "Столица Танзании?",
  text: "<p>\u0427\u0442\u043E\u0431\u044B \u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u044C \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0435, \u043D\u0430\u0437\u043E\u0432\u0438 \u0441\u0442\u043E\u043B\u0438\u0446\u0443 \u0433\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0430 \u0422\u0430\u043D\u0437\u0430\u043D\u0438\u044F</p>",
  answer: ["додома"]
}, {
  // 16 flower
  "class": "flower",
  title: "Цветок для Ахинеи",
  text: "<p>\u041F\u0440\u043E\u0431\u0438\u0440\u0430\u044F\u0441\u044C \u043F\u043E \u043D\u0435\u0433\u043E\u0441\u0442\u0435\u043F\u0440\u0438\u0438\u043C\u043D\u044B\u043C \u0430\u0444\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u043C \u0437\u0435\u043C\u043B\u044F\u043C, \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0440\u0435\u0448\u0438\u043B \u0432\u043E\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C\u0441\u044F \u043C\u043E\u043C\u0435\u043D\u0442\u043E\u043C \u0438 \u043D\u0430\u0439\u0442\u0438 \u0434\u043B\u044F \u0441\u0432\u043E\u0435\u0439 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u043E\u0439 \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0446\u0432\u0435\u0442\u043E\u043A - \u0445\u0438\u0449\u043D\u0443\u044E \u0430\u0444\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0443\u044E \u043C\u0443\u0445\u043E\u043F\u043E\u0436\u0438\u0440\u0430\u043B\u043A\u0443.</p><p>\u0410\u0445\u0438\u043D\u0435\u044F \u0431\u0443\u0434\u0435\u0442 \u0441\u0447\u0430\u0441\u0442\u043B\u0438\u0432\u0430, \u043F\u043E\u043B\u0443\u0447\u0438\u0432 \u0442\u0430\u043A\u043E\u0439 \u043F\u043E\u0434\u0430\u0440\u043E\u043A, \u043F\u043E\u0434\u0443\u043C\u0430\u043B \u0414\u0436\u043E\u043D\u0441.</p>"
}, {
  // 17 tribe
  "class": "tribe",
  title: "Враждебное племя",
  text: "<p>\u0412 \u043F\u043E\u0438\u0441\u043A\u0430\u0445 \u043C\u0443\u0445\u043E\u043F\u043E\u0436\u0438\u0440\u0430\u043B\u043A\u0438 \u041F\u0443\u043F\u043E\u043A \u0437\u0430\u0431\u0440\u0435\u043B \u043D\u0430 \u0442\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044E \u0432\u0440\u0430\u0436\u0434\u0435\u0431\u043D\u043E\u0433\u043E \u043F\u043B\u0435\u043C\u0435\u043D\u0438, \u043A\u043E\u0442\u043E\u0440\u043E\u0435 \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0432 \u043F\u043E\u043B\u043D\u043E\u043C \u0441\u043E\u0441\u0442\u0430\u0432\u0435 \u043F\u043E\u0433\u043D\u0430\u043B\u043E\u0441\u044C \u0437\u0430 \u043D\u0438\u043C. </p><p>\u0421\u043F\u0430\u0441\u0438 \u041F\u0443\u043F\u043A\u0430 \u043E\u0442 \u043F\u043E\u0433\u043E\u043D\u0438, \u0441\u043E\u0431\u0438\u0440\u0430\u044F \u043F\u043E \u043F\u0443\u0442\u0438 \u0430\u043B\u043C\u0430\u0437\u044B. \u0418 \u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E \u043D\u0430\u0439\u0434\u0438 \u0446\u0432\u0435\u0442\u043E\u043A \u0434\u043B\u044F \u0410\u0445\u0438\u043D\u0435\u0438.</p>",
  game: "africa"
}, {
  // 18 find-flower
  "class": "find-flower",
  img: "flower",
  title: "Великолепно!",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043D\u0430\u0448\u0435\u043B \u0440\u0435\u0434\u043A\u0438\u0439 \u0446\u0432\u0435\u0442\u043E\u043A \u0432 \u043F\u043E\u0434\u0430\u0440\u043E\u043A \u0434\u043B\u044F \u0441\u0432\u043E\u0435\u0439 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u043E\u0439!</p>"
}, {
  // 19 late
  "class": "late",
  title: "Опоздал!",
  text: "<p>\u0417\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0434\u043E\u0431\u0440\u0430\u043B\u0441\u044F \u0434\u043E \u043F\u043B\u0435\u043C\u0435\u043D\u0438 \u041C\u0443\u043C\u0431\u0430-\u042E\u043C\u0431\u0430, \u043D\u043E \u043A\u043E\u0432\u0430\u0440\u043D\u044B\u0439 \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043E\u043F\u0435\u0440\u0435\u0434\u0438\u043B \u0435\u0433\u043E!</p><p>\u0412\u043E\u0436\u0434\u044C \u041A\u043E\u0440\u0438\u0447\u043D\u0435\u0432\u044B\u0439 \u0421\u0443\u0441\u043B\u0438\u043A \u0441\u043A\u0430\u0437\u0430\u043B, \u0447\u0442\u043E \u0437\u043B\u043E\u0434\u0435\u0439 \u0443\u0448\u0435\u043B \u0431\u0443\u043A\u0432\u0430\u043B\u044C\u043D\u043E \u043F\u044F\u0442\u044C \u043C\u0438\u043D\u0443\u0442 \u043D\u0430\u0437\u0430\u0434 \u0438 \u0441\u0435\u043B \u043D\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0439 \u0432\u0435\u0440\u0442\u043E\u043B\u0435\u0442, \u043B\u0435\u0442\u044F\u0449\u0438\u0439 \u0432 \u0410\u0432\u0441\u0442\u0440\u0430\u043B\u0438\u044E.</p><p>\u0421 \u043D\u0438\u043C \u0431\u044B\u043B\u0430 \u0410\u0445\u0438\u043D\u0435\u044F \u0438 \u043F\u043E\u0434\u0442\u044F\u0436\u043A\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438.</p>"
}, {
  // 20 australia
  "class": "australia",
  map: "australia",
  title: "Австралия, Сидней",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0432 \u043E\u0442\u0447\u0430\u044F\u043D\u0438\u0438 \u0431\u0440\u043E\u0441\u0438\u043B\u0441\u044F \u0441\u043B\u0435\u0434\u043E\u043C \u0437\u0430 \u0414\u043E\u043A\u0442\u043E\u0440\u043E\u043C. </p><p>\u041F\u0440\u0438\u043B\u0435\u0442\u0435\u0432 \u0432 \u0421\u0438\u0434\u043D\u0435\u0439, \u043E\u043D \u043F\u043E\u043D\u044F\u043B, \u0447\u0442\u043E \u043D\u0435 \u0437\u043D\u0430\u0435\u0442, \u043A\u0443\u0434\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C\u0441\u044F \u0434\u0430\u043B\u044C\u0448\u0435.</p>"
}, {
  // 21 choise
  "class": "choise",
  task: "choise",
  title: "Куда идти Пупку Джонсу?",
  variants: [{
    index: "1",
    text: "Смотреть на кенгуру",
    exit: true
  }, {
    index: "2",
    text: "Смотреть достопримечательности",
    exit: false,
    message: ""
  }, {
    index: "3",
    text: "На пляж",
    exit: false,
    message: ""
  }, {
    index: "4",
    text: "В полицию",
    exit: false,
    message: ""
  }]
}, {
  // 22 farm
  "class": "farm",
  title: "Пригород Сиднея",
  text: "<p>\u041D\u0435 \u043F\u0440\u0438\u0434\u0443\u043C\u0430\u0432, \u043A\u0443\u0434\u0430 \u043F\u043E\u0434\u0430\u0442\u044C\u0441\u044F, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0440\u0435\u0448\u0438\u043B \u0441\u043E\u0432\u0435\u0440\u0448\u0438\u0442\u044C \u044D\u043A\u0441\u043A\u0443\u0440\u0441\u0438\u044E \u0432 \u043F\u0440\u0438\u0433\u043E\u0440\u043E\u0434 \u0421\u0438\u0434\u043D\u0435\u044F \u0438 \u043F\u043E\u0441\u043C\u043E\u0442\u0440\u0435\u0442\u044C \u043D\u0430 \u043D\u0430\u0441\u0442\u043E\u044F\u0449\u0438\u0445 \u043A\u0435\u043D\u0433\u0443\u0440\u0443, \u0440\u0430\u0437 \u0443\u0436 \u043F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u043B\u0430\u0441\u044C \u0442\u0430\u043A\u0430\u044F \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E\u0441\u0442\u044C.</p>"
}, {
  // 23 kangaroo
  "class": "kangaroo",
  title: "Нашествие кенгуру",
  text: "<p>\u0425\u043E\u0437\u044F\u0438\u043D \u0444\u0435\u0440\u043C\u044B, \u043D\u0430 \u043A\u043E\u0442\u043E\u0440\u0443\u044E \u043F\u0440\u0438\u0435\u0445\u0430\u043B \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A, \u0431\u044B\u043B \u043E\u0447\u0435\u043D\u044C \u0432\u0437\u0432\u043E\u043B\u043D\u043E\u0432\u0430\u043D. \u0423\u0436\u0435 \u043C\u043D\u043E\u0433\u0438\u0435 \u0433\u043E\u0434\u044B \u0435\u0433\u043E \u0436\u0438\u0437\u043D\u044C \u043E\u0442\u0440\u0430\u0432\u043B\u044F\u043B\u0438 \u0437\u043B\u043E\u0432\u0440\u0435\u0434\u043D\u044B\u0435 \u043A\u0435\u043D\u0433\u0443\u0440\u0443, \u0441\u043E\u0432\u0435\u0440\u0448\u0430\u0432\u0448\u0438\u0435 \u043D\u0430\u0431\u0435\u0433\u0438 \u043D\u0430 \u0433\u0440\u044F\u0434\u043A\u0438.</p><p>\u0414\u043E\u0431\u0440\u043E\u0441\u0435\u0440\u0434\u0435\u0447\u043D\u044B\u0439 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0440\u0435\u0448\u0438\u043B \u043F\u043E\u043C\u043E\u0447\u044C \u0444\u0435\u0440\u043C\u0435\u0440\u0443.</p>"
}, {
  // 24 battle
  "class": "battle",
  text: "<p>\u0427\u0442\u043E\u0431\u044B \u0441\u043F\u0440\u0430\u0432\u0438\u0442\u044C\u0441\u044F \u0441 \u0440\u0430\u0437\u043E\u0440\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u043C \u043D\u0430\u0431\u0435\u0433\u043E\u043C \u043A\u0435\u043D\u0433\u0443\u0440\u0443, \u043F\u043E\u043A\u0443\u043F\u0430\u0439\u0442\u0435 \u0445\u0438\u0449\u043D\u044B\u0435 \u0440\u0430\u0441\u0442\u0435\u043D\u0438\u044F \u0438 \u0432\u044B\u0441\u0430\u0436\u0438\u0432\u0430\u0439\u0442\u0435 \u0438\u0445 \u043D\u0430 \u043F\u0443\u0442\u0438 \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043B\u0435\u0439.</p>",
  game: "australia"
}, {
  // 25 newspaper
  "class": "newspaper",
  title: "Победа!",
  text: "<p>\u041F\u0440\u043E\u0436\u043E\u0440\u043B\u0438\u0432\u044B\u0435 \u043A\u0435\u043D\u0433\u0443\u0440\u0443 \u0432\u044B\u043D\u0443\u0436\u0434\u0435\u043D\u044B \u0443\u0431\u0440\u0430\u0442\u044C\u0441\u044F \u043F\u043E\u0434\u043E\u0431\u0440\u0443-\u043F\u043E\u0437\u0434\u043E\u0440\u043E\u0432\u0443. \u041E\u043D\u0438 \u0431\u043E\u043B\u044C\u0448\u0435 \u043D\u0435 \u0432\u0435\u0440\u043D\u0443\u0442\u0441\u044F \u043D\u0430 \u0444\u0435\u0440\u043C\u0443.</p><p>\u0412 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0431\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u043D\u043E\u0441\u0442\u0438 \u0444\u0435\u0440\u043C\u0435\u0440 \u0443\u0433\u043E\u0449\u0430\u0435\u0442 \u041F\u0443\u043F\u043A\u0430 \u0432\u043A\u0443\u0441\u043D\u044B\u043C \u043E\u0431\u0435\u0434\u043E\u043C. \u0417\u0430 \u0435\u0434\u043E\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0447\u0438\u0442\u0430\u0435\u0442 \u043C\u0435\u0441\u0442\u043D\u0443\u044E \u0433\u0430\u0437\u0435\u0442\u0443 \u0438 \u043D\u0430\u0442\u044B\u043A\u0430\u0435\u0442\u0441\u044F \u043D\u0430 \u043E\u0447\u0435\u043D\u044C \u0438\u043D\u0442\u0435\u0440\u0435\u0441\u043D\u0443\u044E \u0437\u0430\u043C\u0435\u0442\u043A\u0443.</p>"
}, {
  // 26 ship
  "class": "ship",
  blockStyle: "newspaper",
  text: "<p>\u0412\u0447\u0435\u0440\u0430 \u0432\u0435\u0447\u0435\u0440\u043E\u043C \u0438\u0437 \u043F\u043E\u0440\u0442\u0430 \u0432\u044B\u0448\u043B\u043E \u0441\u0443\u0434\u043D\u043E \"\u0421\u0442\u0440\u0435\u043C\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0445\u0432\u043E\u0441\u0442\u0438\u043A\", \u043A\u043E\u0442\u043E\u0440\u043E\u0435 \u0434\u0435\u0440\u0436\u0438\u0442 \u043A\u0443\u0440\u0441 \u043D\u0430 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0443. </p><p>\u041D\u0430 \u0431\u043E\u0440\u0442\u0443 \u0441\u0443\u0434\u043D\u0430 \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u0441\u044F \u043F\u043B\u0430\u0432\u0443\u0447\u0438\u0439 \u0437\u043E\u043E\u043F\u0430\u0440\u043A \u0441 \u0440\u0435\u0434\u043A\u0438\u043C\u0438 \u0432\u0438\u0434\u0430\u043C\u0438 \u0436\u0438\u0432\u043E\u0442\u043D\u044B\u0445, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0433\u0440\u0443\u043F\u043F\u0430 \u0443\u0447\u0435\u043D\u044B\u0445, \u0432 \u0447\u0438\u0441\u043B\u0435 \u043A\u043E\u0442\u043E\u0440\u044B\u0445 \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u0438\u0441\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u0432\u0441\u0435\u0433\u043E \u0438 \u0432\u0441\u044F \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441.</p>"
}, {
  // 27 to-antarctica
  "class": "to-antarctica",
  text: "<p>\u0422\u0430\u043A \u0432\u043E\u0442 \u0437\u0430\u0447\u0435\u043C \u0437\u043B\u043E\u0434\u0435\u0439 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0441\u044F \u0432 \u0410\u0432\u0441\u0442\u0440\u0430\u043B\u0438\u044E! \u041E\u0442\u0441\u044E\u0434\u0430 \u043E\u043D \u043E\u0442\u043F\u043B\u044B\u0432\u0430\u0435\u0442 \u0432 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0443!</p><p>\u041D\u043E \u0437\u0430\u0447\u0435\u043C \u0435\u043C\u0443 \u0432 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0443? \u0418 \u043F\u043E\u0447\u0435\u043C\u0443 \u043E\u043D \u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0430\u0435\u0442 \u0443\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044C \u0410\u0445\u0438\u043D\u0435\u044E?</p>"
}, {
  // 28 antarctica
  "class": "antarctica",
  title: "Антарктида",
  text: "<p>\u0417\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0441\u044F \u0432 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0443, \u043F\u0440\u0435\u0441\u043B\u0435\u0434\u0443\u044F \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430, \u0443\u043A\u0440\u0430\u0432\u0448\u0435\u0433\u043E \u043F\u043E\u0434\u0442\u044F\u0436\u043A\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438 \u0443 \u0432\u043E\u0436\u0434\u044F \u043F\u043B\u0435\u043C\u0435\u043D\u0438 \u041C\u0443\u043C\u0431\u0430-\u042E\u043C\u0431\u0430 \u0438 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u0443\u044E \u0441\u0430\u043C\u043E\u0433\u043E \u041F\u0443\u043F\u043A\u0430.</p><p>\u0427\u0442\u043E\u0431\u044B \u0434\u043E\u0431\u0440\u0430\u0442\u044C\u0441\u044F \u0434\u043E \u0441\u0442\u043E\u044F\u043D\u043A\u0438 \u0437\u043B\u043E\u0434\u0435\u044F, \u041F\u0443\u043F\u043E\u043A \u043F\u0440\u0435\u043E\u0434\u043E\u043B\u0435\u0432\u0430\u0435\u0442 \u0441\u043D\u0435\u0436\u043D\u044B\u0435 \u0433\u043E\u0440\u044B \u0438 \u043B\u0435\u0434\u044F\u043D\u044B\u0435 \u043F\u0443\u0441\u0442\u044B\u043D\u0438, \u043F\u0435\u0440\u0435\u043B\u0435\u0437\u0430\u0435\u0442 \u0447\u0435\u0440\u0435\u0437 \u0430\u0439\u0441\u0431\u0435\u0440\u0433\u0438 \u0438 \u0441\u043A\u0430\u0442\u044B\u0432\u0430\u0435\u0442\u0441\u044F \u043D\u0430 \u043F\u043E\u043F\u0435 \u0441 \u043B\u0435\u0434\u043D\u0438\u043A\u043E\u0432, \u0441\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044F \u0441 \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u0430\u043C\u0438 \u0438 \u043D\u043E\u0447\u0443\u0435\u0442 \u0432 \u043D\u043E\u0440\u0430\u0445 \u043B\u0435\u043C\u0438\u043D\u0433\u043E\u0432.</p>"
}, {
  // 29 pizza
  "class": "pizza",
  title: "Логово Доктора Злобникуса",
  text: "<p>\u041D\u0430\u043A\u043E\u043D\u0435\u0446, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0434\u043E\u0431\u0440\u0430\u043B\u0441\u044F \u0434\u043E \u043B\u0430\u0433\u0435\u0440\u044F \u0441\u0432\u043E\u0435\u0433\u043E \u043F\u0440\u043E\u0442\u0438\u0432\u043D\u0438\u043A\u0430, \u0432\u0441\u0442\u0430\u043B \u043F\u0435\u0440\u0435\u0434 \u0432\u0445\u043E\u0434\u043D\u043E\u0439 \u0434\u0432\u0435\u0440\u044C\u044E \u0438 \u043F\u043E\u0437\u0432\u043E\u043D\u0438\u043B.</p><p>- \u041A\u0442\u043E \u0442\u0430\u043C? - \u0441\u043F\u0440\u043E\u0441\u0438\u043B \u0433\u043E\u043B\u043E\u0441 \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430.</p><p>- \u0414\u043E\u0441\u0442\u0430\u0432\u043A\u0430 \u043F\u0438\u0446\u0446\u044B, - \u043E\u0442\u0432\u0435\u0442\u0438\u043B \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441.</p><p>- \u041D\u0443 \u043D\u0430\u043A\u043E\u043D\u0435\u0446-\u0442\u043E! - \u043E\u0431\u0440\u0430\u0434\u043E\u0432\u0430\u043B\u0441\u044F \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441. - \u041E\u0442\u043A\u0440\u044B\u0432\u0430\u044E, \u0437\u0430\u0445\u043E\u0434\u0438\u0442\u0435!</p>"
}, {
  // 30 evil-plan
  "class": "evil-plan",
  text: "<p>\u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u043E\u0447\u0435\u043D\u044C \u0443\u0434\u0438\u0432\u0438\u043B\u0441\u044F, \u0443\u0432\u0438\u0434\u0435\u0432 \u041F\u0443\u043F\u043A\u0430, \u043D\u043E \u0441\u043E\u0432\u0441\u0435\u043C \u043D\u0435 \u0440\u0430\u0441\u0442\u0435\u0440\u044F\u043B\u0441\u044F.</p><p>- \u042F \u0437\u043D\u0430\u044E, \u0437\u0430\u0447\u0435\u043C \u0442\u044B \u043F\u0440\u0438\u0448\u0435\u043B, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441, - \u0441\u043A\u0430\u0437\u0430\u043B \u043E\u043D \u0441 \u043F\u0440\u0435\u0437\u0440\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0439 \u0443\u0445\u043C\u044B\u043B\u043A\u043E\u0439. - \u041D\u043E \u0442\u044B \u043E\u043F\u043E\u0437\u0434\u0430\u043B!</p><p>- \u041E \u043D\u0435\u0442! - \u0432\u043E\u0441\u043A\u043B\u0438\u043A\u043D\u0443\u043B \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441. - \u0427\u0442\u043E \u0442\u044B \u0441\u0434\u0435\u043B\u0430\u043B \u0441 \u0410\u0445\u0438\u043D\u0435\u0435\u0439?! \u041E\u043D\u0430 \u0432\u0435\u0434\u044C \u0443\u0436\u0435 \u043F\u043E\u043C\u043E\u0433\u043B\u0430 \u0442\u0435\u0431\u0435 \u0434\u043E\u0431\u044B\u0442\u044C \u043D\u0435\u0432\u0435\u0440\u043E\u044F\u0442\u043D\u043E \u0446\u0435\u043D\u043D\u044B\u0435 \u043F\u043E\u0434\u0442\u044F\u0436\u043A\u0438 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438! \u041E\u0442\u043F\u0443\u0441\u0442\u0438 \u0436\u0435 \u0435\u0435!</p><p>- \u041D\u0435\u0442, \u043D\u0435 \u043E\u0442\u043F\u0443\u0449\u0443, - \u043E\u0442\u0432\u0435\u0442\u0438\u043B \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441. - \u041E\u043D\u0430 \u043D\u0443\u0436\u043D\u0430 \u043C\u043D\u0435, \u0447\u0442\u043E\u0431\u044B \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043A\u0440\u0430\u0441\u0438\u0432\u043E\u0435 \u0444\u043E\u0442\u043E \u0432 \u043F\u043E\u0434\u0442\u044F\u0436\u043A\u0430\u0445 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438 \u043D\u0430 \u0444\u043E\u043D\u0435 \u0430\u0439\u0441\u0431\u0435\u0440\u0433\u0430! \u041E\u043D\u0430 \u0432\u0435\u0434\u044C \u0437\u0430\u043C\u0435\u0447\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0444\u043E\u0442\u043E\u0433\u0440\u0430\u0444! \u0423\u0436\u0435 \u0437\u0430\u0432\u0442\u0440\u0430 \u044D\u0442\u043E \u0444\u043E\u0442\u043E \u0432\u044B\u0439\u0434\u0435\u0442 \u043D\u0430 \u043F\u0435\u0440\u0432\u044B\u0445 \u043F\u043E\u043B\u043E\u0441\u0430\u0445 \u0432\u0441\u0435\u0445 \u043C\u0438\u0440\u043E\u0432\u044B\u0445 \u0433\u0430\u0437\u0435\u0442, \u0438 \u043C\u0438\u0440 \u0431\u0443\u0434\u0435\u0442 \u043F\u043E\u043A\u043E\u0440\u0435\u043D \u0438 \u043F\u0430\u0434\u0435\u0442 \u043D\u0438\u0446 \u043F\u0435\u0440\u0435\u0434 \u0432\u0435\u043B\u0438\u043A\u0438\u043C \u0438 \u043F\u0440\u0435\u043A\u0440\u0430\u0441\u043D\u044B\u043C \u0414\u043E\u043A\u0442\u043E\u0440\u043E\u043C \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u043E\u043C!</p><p>\u0418 \u043E\u043D \u043D\u0430\u0442\u0440\u0430\u0432\u0438\u043B \u043D\u0430 \u041F\u0443\u043F\u043A\u0430 \u0441\u0432\u043E\u044E \u0430\u0440\u043C\u0438\u044E \u043A\u0440\u043E\u0432\u043E\u0436\u0430\u0434\u043D\u044B\u0445 \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u043E\u0432.</p>"
}, {
  // 31 pinguin-battle
  "class": "pinguin-battle",
  text: "<p>\u0423\u0432\u043E\u0440\u0430\u0447\u0438\u0432\u0430\u0439\u0442\u0435\u0441\u044C \u043E\u0442 \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u043E\u0432 \u0414\u043E\u043A\u0442\u043E\u0440\u0430 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u0430 \u0438 \u0441\u043E\u0431\u0438\u0440\u0430\u0439\u0442\u0435 \u043F\u0430\u0434\u0430\u044E\u0449\u0438\u0435 \u0441\u043D\u0435\u0436\u0438\u043D\u043A\u0438.</p>",
  game: "antarctica"
}, {
  // 32 fly
  "class": "fly",
  title: "Победа!",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043F\u043E\u0431\u0435\u0434\u0438\u043B \u0432\u0441\u0435\u0445 \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u043E\u0432, \u043D\u043E \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u0443\u0436\u0435 \u043F\u043E\u0434\u043D\u0438\u043C\u0430\u043B\u0441\u044F \u043D\u0430 \u0433\u043E\u0440\u0443 \u0432\u043C\u0435\u0441\u0442\u0435 \u0441 \u0410\u0445\u0438\u043D\u0435\u0435\u0439, \u0447\u0442\u043E\u0431\u044B \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043A\u0440\u0430\u0441\u0438\u0432\u0443\u044E \u0444\u043E\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u044E.</p><p>\u0415\u043C\u0443 \u043D\u0438\u043A\u0430\u043A \u0431\u044B\u043B\u043E \u043D\u0435 \u0443\u0441\u043F\u0435\u0442\u044C!</p><p>\u041D\u043E \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0438 \u0438\u0441\u043A\u0430\u0442\u0435\u043B\u044C \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0431\u044B\u043B \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442 \u0442\u0435\u043C, \u0447\u0442\u043E \u043D\u0438\u043A\u043E\u0433\u0434\u0430 \u043D\u0435 \u0441\u0434\u0430\u0432\u0430\u043B\u0441\u044F! \u041E\u043D \u0441\u0445\u0432\u0430\u0442\u0438\u043B \u043F\u043E\u0432\u0435\u0440\u0436\u0435\u043D\u043D\u043E\u0433\u043E \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u0430, \u0441\u0435\u043B \u043D\u0430 \u043D\u0435\u0433\u043E \u0438 \u0437\u0430\u0441\u0442\u0430\u0432\u0438\u043B \u043B\u0435\u0442\u0435\u0442\u044C \u0432\u0441\u043B\u0435\u0434 \u0437\u0430 \u0437\u043B\u043E\u0434\u0435\u0435\u043C.</p>"
}, {
  // 33 photo
  "class": "photo",
  text: "<p>\u041F\u0440\u0438\u0437\u0435\u043C\u043B\u0438\u0432\u0448\u0438\u0441\u044C \u043F\u0440\u044F\u043C\u043E \u043F\u0435\u0440\u0435\u0434 \u0443\u0434\u0438\u0432\u043B\u0435\u043D\u043D\u044B\u043C \u0414\u043E\u043A\u0442\u043E\u0440\u043E\u043C \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441\u043E\u043C, \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0432\u044B\u0437\u044B\u0432\u0430\u044E\u0449\u0435 \u0441\u043A\u0430\u0437\u0430\u043B \u0435\u043C\u0443:</p><p>- \u042F \u043D\u0435 \u043F\u043E\u0437\u0432\u043E\u043B\u044E \u0442\u0435\u0431\u0435 \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043A\u0440\u0430\u0441\u0438\u0432\u0443\u044E \u0444\u043E\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u044E \u0432 \u043F\u043E\u0434\u0442\u044F\u0436\u043A\u0430\u0445 \u044F\u043F\u043E\u043D\u0441\u043A\u043E\u0433\u043E \u0431\u043E\u0433\u0430 \u0410\u043C\u044D-\u043D\u043E \u041C\u0438\u043D\u0430\u043A\u0430\u043D\u0443\u0441\u0438 \u043D\u043E \u041A\u0430\u043C\u0438 \u043D\u0430 \u0444\u043E\u043D\u0435 \u0430\u0439\u0441\u0431\u0435\u0440\u0433\u0430 \u0438 \u0432\u043E\u043F\u043B\u043E\u0442\u0438\u0442\u044C \u0432 \u0436\u0438\u0437\u043D\u044C \u044D\u0442\u043E\u0442 \u0443\u0436\u0430\u0441\u043D\u044B\u0439 \u043F\u043B\u0430\u043D \u043F\u043E \u0437\u0430\u0432\u043E\u0435\u0432\u0430\u043D\u0438\u044E \u043C\u0438\u0440\u0430!</p><p>- \u0425\u0430-\u0445\u0430, - \u043E\u0442\u0432\u0435\u0442\u0438\u043B \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441. - \u0418 \u043A\u0430\u043A \u0436\u0435 \u0442\u044B \u0441\u043C\u043E\u0436\u0435\u0448\u044C \u043C\u043D\u0435 \u043F\u043E\u043C\u0435\u0448\u0430\u0442\u044C?</p><p>\u0418 \u0442\u0443\u0442 \u043D\u0430\u0441\u0442\u0430\u043B \u0437\u0432\u0435\u0437\u0434\u043D\u044B\u0439 \u0447\u0430\u0441 \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u043E\u0440\u0430 \u041F\u0438\u0437\u0434\u0440\u0438\u043A\u0430, \u043F\u0440\u0435\u0434\u043B\u043E\u0436\u0438\u0432\u0448\u0435\u0433\u043E \u0441\u0432\u043E\u0435\u043C\u0443 \u0434\u0440\u0443\u0433\u0443 \u0437\u0430\u043C\u0435\u0447\u0430\u0442\u0435\u043B\u044C\u043D\u0443\u044E \u0438\u0434\u0435\u044E.</p><p>- \u0423 \u043C\u0435\u043D\u044F \u0435\u0441\u0442\u044C \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0430\u0442 \u043D\u0430 \u0442\u0435\u0431\u044F, \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441, - \u0440\u0430\u0441\u0441\u043C\u0435\u044F\u043B\u0441\u044F \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441. - \u0415\u0441\u043B\u0438 \u043C\u0438\u0440 \u0443\u0437\u043D\u0430\u0435\u0442 \u043E \u043D\u0435\u043C, \u0442\u0435\u0431\u0435 \u043D\u0435 \u043F\u043E\u043C\u043E\u0436\u0435\u0442 \u0434\u0430\u0436\u0435 \u0441\u0430\u043C\u0430\u044F \u043A\u0440\u0430\u0441\u0438\u0432\u0430\u044F \u0444\u043E\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u044F \u043D\u0430 \u0444\u043E\u043D\u0435 \u0430\u0439\u0441\u0431\u0435\u0440\u0433\u0430, \u0441\u0434\u0435\u043B\u0430\u043D\u043D\u0430\u044F \u043C\u043E\u0435\u0439 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u043E\u0439!</p>"
}, {
  // 34 win
  "class": "win",
  text: "<p>\u0421\u043A\u0430\u0437\u0430\u0442\u044C, \u0447\u0442\u043E \u0414\u043E\u043A\u0442\u043E\u0440 \u0417\u043B\u043E\u0431\u043D\u0438\u043A\u0443\u0441 \u0440\u0430\u0441\u0441\u0442\u0440\u043E\u0438\u043B\u0441\u044F, - \u043D\u0438\u0447\u0435\u0433\u043E \u043D\u0435 \u0441\u043A\u0430\u0437\u0430\u0442\u044C. \u041E\u043D \u0431\u044B\u043B \u0440\u0430\u0437\u0431\u0438\u0442, \u0440\u0430\u0437\u0434\u0430\u0432\u043B\u0435\u043D, \u0440\u0430\u0441\u0441\u0443\u0441\u043E\u043B\u0435\u043D!</p><p>- \u041F\u0440\u043E\u043A\u043B\u044F\u0442\u044B\u0439 \u041F\u0443\u043F\u043E\u043A, - \u0431\u0443\u0440\u043A\u043D\u0443\u043B \u043E\u043D, \u0431\u0440\u043E\u0441\u0438\u043B \u043D\u0430 \u0441\u043D\u0435\u0433 \u0444\u043E\u0442\u043E\u0430\u043F\u043F\u0430\u0440\u0430\u0442, \u0440\u0430\u0437\u0432\u0435\u0440\u043D\u0443\u043B\u0441\u044F \u0438 \u043F\u043E\u0431\u0440\u0435\u043B \u043F\u0440\u043E\u0447\u044C.</p>"
}, {
  // 35 to-america
  "class": "to-america",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0431\u0440\u043E\u0441\u0438\u043B\u0441\u044F \u043A \u0441\u0432\u043E\u0435\u0439 \u0432\u043E\u0437\u043B\u044E\u0431\u043B\u0435\u043D\u043D\u043E\u0439 \u0410\u0445\u0438\u043D\u0435\u0435, \u0437\u0430\u043A\u043B\u044E\u0447\u0438\u043B \u0435\u0435 \u0432 \u0436\u0430\u0440\u043A\u0438\u0435 \u043E\u0431\u044A\u044F\u0442\u0438\u044F \u0438 \u0441\u0442\u0440\u0430\u0441\u0442\u043D\u043E \u043F\u043E\u0446\u0435\u043B\u043E\u0432\u0430\u043B.</p><p>- \u0422\u044B \u0441\u043F\u0430\u0441 \u043C\u0435\u043D\u044F, \u043F\u0443\u043F\u0441\u0438\u043A! - \u0432\u043E\u0441\u043A\u043B\u0438\u043A\u043D\u0443\u043B\u0430 \u043E\u043D\u0430, \u0442\u0435\u0440\u044F\u044F \u0441\u043E\u0437\u043D\u0430\u043D\u0438\u0435 \u043D\u0430 \u0440\u0443\u043A\u0430\u0445 \u0443 \u0433\u0435\u0440\u043E\u044F.</p><p>\u041F\u0443\u043F\u043E\u043A \u0437\u0430\u043A\u0438\u043D\u0443\u043B \u0431\u0435\u0441\u0447\u0443\u0432\u0441\u0442\u0432\u0435\u043D\u043D\u0443\u044E \u0410\u0445\u0438\u043D\u0435\u044E \u043D\u0430 \u043F\u043B\u0435\u0447\u043E, \u043E\u0441\u0435\u0434\u043B\u0430\u043B \u043F\u0438\u043D\u0433\u0432\u0438\u043D\u0430 \u0438 \u043F\u043E\u043B\u0435\u0442\u0435\u043B \u043A \u0431\u0435\u0440\u0435\u0433\u0430\u043C \u042E\u0436\u043D\u043E\u0439 \u0410\u043C\u0435\u0440\u0438\u043A\u0438.</p>"
}, {
  // 36 america
  "class": "america",
  title: "Южная Америка, Патагония",
  text: "<p>\u0415\u0434\u0432\u0430 \u0434\u043E\u043B\u0435\u0442\u0435\u0432 \u0434\u043E \u044E\u0436\u043D\u043E\u0433\u043E \u043F\u043E\u0431\u0435\u0440\u0435\u0436\u044C\u044F \u042E\u0436\u043D\u043E\u0439 \u0410\u043C\u0435\u0440\u0438\u043A\u0438, \u043F\u0438\u043D\u0433\u0432\u0438\u043D \u0432\u0437\u0431\u0440\u044B\u043A\u043D\u0443\u043B, \u0441\u0431\u0440\u043E\u0441\u0438\u043B \u0441\u0435\u0434\u043E\u043A\u043E\u0432 \u0438 \u0433\u043E\u0440\u0434\u043E \u043F\u043E\u043B\u0435\u0442\u0435\u043B \u0434\u043E\u043C\u043E\u0439, \u0432 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0443.</p><p>\u041F\u0443\u043F\u043E\u043A \u043F\u043E\u0433\u0440\u043E\u0437\u0438\u043B \u043A\u0443\u043B\u0430\u043A\u043E\u043C \u0432\u0441\u043B\u0435\u0434 \u0443\u0434\u0430\u043B\u044F\u044E\u0449\u0435\u0439\u0441\u044F \u043F\u0442\u0438\u0446\u0435 \u0438 \u0433\u0440\u0443\u0441\u0442\u043D\u043E \u0432\u0437\u0434\u043E\u0445\u043D\u0443\u043B. \u041E\u043D \u0441\u043E\u0431\u0438\u0440\u0430\u043B\u0441\u044F \u0434\u043E\u0431\u0440\u0430\u0442\u044C\u0441\u044F \u0434\u043E \u0441\u0432\u043E\u0435\u0433\u043E \u0438\u043D\u0441\u0442\u0438\u0442\u0443\u0442\u0430 \u0432 \u041A\u043E\u043D\u043D\u0435\u043A\u0442\u0438\u043A\u0443\u0442\u0435, \u0430 \u0432\u043E\u0432\u0441\u0435 \u043D\u0435 \u0437\u0430\u0441\u0442\u0440\u044F\u0442\u044C \u0432 \u043F\u0443\u0441\u0442\u044B\u043D\u044F\u0445 \u041F\u0430\u0442\u0430\u0433\u043E\u043D\u0438\u0438.</p><p>\u041D\u043E \u0434\u0435\u043B\u0430\u0442\u044C \u043D\u0435\u0447\u0435\u0433\u043E, \u0437\u043D\u0430\u043C\u0435\u043D\u0438\u0442\u044B\u0439 \u043F\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u0438\u043A \u0438 \u0438\u0441\u043A\u0430\u0442\u0435\u043B\u044C \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0439 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043F\u043E\u043F\u0440\u0430\u0432\u0438\u043B \u043D\u0430 \u043F\u043B\u0435\u0447\u0435 \u0431\u0435\u0441\u0447\u0443\u0432\u0441\u0442\u0432\u0435\u043D\u043D\u0443\u044E \u0410\u0445\u0438\u043D\u0435\u044E \u0438 \u043F\u043E\u0448\u0430\u0433\u0430\u043B \u043D\u0430 \u0441\u0435\u0432\u0435\u0440.</p>"
}, {
  // 37 indian
  "class": "indian",
  title: "Центральная Америка, Гондурас",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0441\u043F\u043E\u043A\u043E\u0439\u043D\u043E \u0434\u043E\u0448\u0430\u0433\u0430\u043B \u0434\u043E \u0413\u043E\u043D\u0434\u0443\u0440\u0430\u0441\u0430, \u043D\u043E \u0442\u0443\u0442 \u0435\u0433\u043E \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u043B\u0430 \u0442\u043E\u043B\u043F\u0430 \u043D\u0435\u0434\u0440\u0443\u0436\u0435\u043B\u044E\u0431\u043D\u043E \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043D\u043D\u044B\u0445 \u0430\u0431\u043E\u0440\u0438\u0433\u0435\u043D\u043E\u0432.</p><p>\u041F\u0440\u0438\u0448\u043B\u043E\u0441\u044C \u0441\u043F\u0430\u0441\u0430\u0442\u044C\u0441\u044F \u0431\u0435\u0433\u0441\u0442\u0432\u043E\u043C!</p>"
}, {
  // 38 gonduras
  "class": "gonduras",
  task: "word",
  title: "Столица Гондураса?",
  text: "<p>\u0427\u0442\u043E\u0431\u044B \u0441\u043A\u0440\u044B\u0442\u044C\u0441\u044F \u043E\u0442 \u043F\u0440\u0435\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439, \u043D\u0430\u0437\u043E\u0432\u0438 \u0441\u0442\u043E\u043B\u0438\u0446\u0443 \u0413\u043E\u043D\u0434\u0443\u0440\u0430\u0441\u0430</p>",
  answer: "тегусигальпа"
}, {
  // 39 pyramid
  "class": "pyramid",
  text: "<p>\u0423\u0431\u0435\u0433\u0430\u044F \u043E\u0442 \u0432\u0440\u0430\u0436\u0434\u0435\u0431\u043D\u043E\u0433\u043E \u043F\u043B\u0435\u043C\u0435\u043D\u0438, \u041F\u0443\u043F\u043E\u043A \u0441\u043F\u0440\u044F\u0442\u0430\u043B\u0441\u044F \u0432 \u043E\u0433\u0440\u043E\u043C\u043D\u043E\u0439 \u043F\u0438\u0440\u0430\u043C\u0438\u0434\u0435 \u0438\u043D\u0434\u0435\u0439\u0446\u0435\u0432 \u041C\u0430\u0439\u044F, \u043A\u043E\u0442\u043E\u0440\u043E\u0439 \u0431\u044B\u043B\u043E \u0431\u043E\u043B\u044C\u0448\u0435 \u0442\u0440\u0435\u0445 \u0442\u044B\u0441\u044F\u0447 \u043B\u0435\u0442. </p><p>\u041F\u0443\u0442\u044C \u043D\u0430\u0437\u0430\u0434 \u0431\u044B\u043B \u043E\u0442\u0440\u0435\u0437\u0430\u043D \u0430\u0431\u043E\u0440\u0438\u0433\u0435\u043D\u0430\u043C\u0438, \u043F\u043E\u044D\u0442\u043E\u043C\u0443 \u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u043F\u043E\u043F\u0440\u0430\u0432\u0438\u043B \u043D\u0430 \u043F\u043B\u0435\u0447\u0435 \u0431\u0435\u0441\u0447\u0443\u0432\u0441\u0442\u0432\u0435\u043D\u043D\u0443\u044E \u0410\u0445\u0438\u043D\u0435\u044E \u0438 \u043F\u043E\u0448\u0430\u0433\u0430\u043B \u0432\u043F\u0435\u0440\u0435\u0434.</p>"
}, {
  // 40 maze
  "class": "maze",
  text: "<p>\u041E\u0447\u0435\u043D\u044C \u0441\u043A\u043E\u0440\u043E \u043E\u043D \u043F\u043E\u043D\u044F\u043B, \u0447\u0442\u043E \u0432\u043D\u0443\u0442\u0440\u0438 \u043F\u0438\u0440\u0430\u043C\u0438\u0434\u044B \u043B\u0435\u0436\u0438\u0442 \u043E\u0433\u0440\u043E\u043C\u043D\u044B\u0439 \u043B\u0430\u0431\u0438\u0440\u0438\u043D\u0442.</p><p>\u041F\u0440\u043E\u0432\u0435\u0434\u0438 \u041F\u0443\u043F\u043A\u0430 \u0414\u0436\u043E\u043D\u0441\u0430 \u043F\u043E \u043B\u0430\u0431\u0438\u0440\u0438\u043D\u0442\u0443 \u043A\u0430\u043A \u043C\u043E\u0436\u043D\u043E \u0431\u044B\u0441\u0442\u0440\u0435\u0435, \u0438\u0437\u0431\u0435\u0433\u0430\u044F \u0433\u0438\u0433\u0430\u043D\u0442\u0441\u043A\u0438\u0445 \u043A\u0440\u044B\u0441.</p>",
  game: "america"
}, {
  // 41 out
  "class": "out",
  title: "Выход найден!",
  text: "<p>\u041F\u0443\u043F\u043E\u043A \u0414\u0436\u043E\u043D\u0441 \u0432\u044B\u0448\u0435\u043B \u0438\u0437 \u043B\u0430\u0431\u0438\u0440\u0438\u043D\u0442\u0430 \u0430\u0446\u0442\u0435\u043A\u043E\u0432 \u043F\u0440\u044F\u043C\u043E \u043F\u0435\u0440\u0435\u0434 \u043A\u0430\u043C\u043F\u0443\u0441\u043E\u043C \u0441\u0432\u043E\u0435\u0433\u043E \u0438\u043D\u0441\u0442\u0438\u0442\u0443\u0442\u0430.</p><p>\u0410\u0445\u0438\u043D\u0435\u044F \u043D\u0430 \u0435\u0433\u043E \u043F\u043B\u0435\u0447\u0435 \u043D\u0430\u043A\u043E\u043D\u0435\u0446-\u0442\u043E \u0437\u0430\u0448\u0435\u0432\u0435\u043B\u0438\u043B\u0430\u0441\u044C \u0438 \u043F\u0440\u0438\u0448\u043B\u0430 \u0432 \u0441\u0435\u0431\u044F.</p><p>- \u041E, \u043C\u043E\u0439 \u0433\u0435\u0440\u043E\u0439! - \u043F\u0430\u0442\u0435\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043F\u0440\u043E\u0448\u0435\u043F\u0442\u0430\u043B\u0430 \u043E\u043D\u0430 \u0438 \u0441\u043D\u043E\u0432\u0430 \u0443\u043F\u0430\u043B\u0430 \u0432 \u043E\u0431\u043C\u043E\u0440\u043E\u043A \u043E\u0442 \u0440\u0430\u0434\u043E\u0441\u0442\u0438.</p>"
}];
/* harmony default export */ __webpack_exports__["default"] = (screens);

/***/ }),

/***/ "./src/utils/init.game.js":
/*!********************************!*\
  !*** ./src/utils/init.game.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _europe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../europe */ "./europe/index.js");
/* harmony import */ var _africa__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../africa */ "./africa/index.js");
/* harmony import */ var _asia__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../asia */ "./asia/index.js");
/* harmony import */ var _australia__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../australia */ "./australia/index.js");
/* harmony import */ var _antarctica__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../antarctica */ "./antarctica/index.js");
/* harmony import */ var _america__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../america */ "./america/index.js");







var createPlayground = function createPlayground(gameName) {
  var el = document.createElement('div');
  el.classList.add("game-".concat(gameName));
  el.style.position = "relative";
  return el;
};

var points = 0;

var initGame = function initGame(gameName, callback) {
  var playground = createPlayground(gameName);
  document.body.appendChild(playground);
  var game;

  switch (gameName) {
    case "asia":
      game = new _asia__WEBPACK_IMPORTED_MODULE_2__["default"](playground);
      break;

    case "europe":
      game = new _europe__WEBPACK_IMPORTED_MODULE_0__["default"](playground);
      break;

    case "africa":
      game = new _africa__WEBPACK_IMPORTED_MODULE_1__["default"](playground);
      break;

    case "australia":
      game = new _australia__WEBPACK_IMPORTED_MODULE_3__["default"](playground);
      break;

    case "antarctica":
      game = new _antarctica__WEBPACK_IMPORTED_MODULE_4__["default"](playground);
      break;

    case "america":
      game = new _america__WEBPACK_IMPORTED_MODULE_5__["default"](playground);
      break;
  }

  if (game) {
    game.once("win", function (gamePoints) {
      points += gamePoints;
      game = null;
      playground.remove();
      callback();
    });
  }
};

/* harmony default export */ __webpack_exports__["default"] = (initGame);

/***/ }),

/***/ "./src/utils/update.screen.js":
/*!************************************!*\
  !*** ./src/utils/update.screen.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var hide = function hide(el) {
  el.style.display = "none";
};

var show = function show(el) {
  el.style.display = "";
};

var updateScreen = function () {
  var screen = document.querySelector(".game-screen");
  var pic = screen.querySelector(".screen__pic");
  var img = pic.querySelector(".screen__img");
  var title = screen.querySelector(".screen__title");
  var text = screen.querySelector(".screen__text");
  var next = screen.querySelector(".screen__next");
  var nextText = next.querySelector("b");

  var reset = function reset() {
    show(pic);
    show(img);
    show(title);
    show(text);
    pic.removeAttribute("data-map");
    screen.removeAttribute("data-class");
  };

  return function (data, nextCallback) {
    if (!data) {
      hide(screen);
      return;
    }

    reset();
    screen.setAttribute("data-class", data["class"]);

    if (data.img) {
      img.src = data.img;
    } else {
      hide(img);
    }

    if (data.map) {
      pic.setAttribute("data-map", data.map);
    } else if (!data.img) {
      hide(pic);
    }

    if (data.title) {
      title.innerHTML = data.title;
    } else {
      hide(title);
    }

    if (data.text) {
      text.innerHTML = data.text;
    } else {
      hide(text);
    }

    if (data.next) {
      nextText.textContent = data.next;
    } else {
      nextText.textContent = "Дальше";
    }

    next.onclick = function () {
      return nextCallback();
    };

    show(screen);
  };
}();

/* harmony default export */ __webpack_exports__["default"] = (updateScreen);

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vYWZyaWNhL2luZGV4LmNzcz9lMjM3Iiwid2VicGFjazovLy8uL2FmcmljYS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hZnJpY2EvbWFwL2luZGV4LmNzcz84YmYzIiwid2VicGFjazovLy8uL2FmcmljYS9tYXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vYWZyaWNhL21hcC9tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vYWZyaWNhL3BsYXllci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hZnJpY2EvdHJpYmUvaW5kZXguY3NzPzZiZmQiLCJ3ZWJwYWNrOi8vLy4vYWZyaWNhL3RyaWJlL2luZGV4LmpzIiwid2VicGFjazovLy8uL2FtZXJpY2EvaW5kZXguY3NzP2I1NjIiLCJ3ZWJwYWNrOi8vLy4vYW1lcmljYS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hbnRhcmN0aWNhL2ZhbGxlci9mYWxsZXIuanMiLCJ3ZWJwYWNrOi8vLy4vYW50YXJjdGljYS9mYWxsZXIvZmxvdy5qcyIsIndlYnBhY2s6Ly8vLi9hbnRhcmN0aWNhL2ZhbGxlci9wZW5ndWluLmNzcz84MDg5Iiwid2VicGFjazovLy8uL2FudGFyY3RpY2EvZmFsbGVyL3Blbmd1aW4uanMiLCJ3ZWJwYWNrOi8vLy4vYW50YXJjdGljYS9mYWxsZXIvc25vd2ZsYWtlLmNzcz9lYzIyIiwid2VicGFjazovLy8uL2FudGFyY3RpY2EvZmFsbGVyL3Nub3dmbGFrZS5qcyIsIndlYnBhY2s6Ly8vLi9hbnRhcmN0aWNhL2hlcm8vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vYW50YXJjdGljYS9pbmRleC5jc3M/NDVlNyIsIndlYnBhY2s6Ly8vLi9hbnRhcmN0aWNhL2luZGV4LmpzIiwid2VicGFjazovLy8uL2FzaWEvaW5kZXguY3NzPzJhN2QiLCJ3ZWJwYWNrOi8vLy4vYXNpYS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hc2lhL3BsYXllci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hc2lhL3RyYWNrL2luZGV4LmNzcz81NzMyIiwid2VicGFjazovLy8uL2FzaWEvdHJhY2svaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vYXNpYS90cmFmZmljL2Nhci5qcyIsIndlYnBhY2s6Ly8vLi9hc2lhL3RyYWZmaWMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vYXVzdHJhbGlhL2F0dGFjay1jb250cm9sbGVyLmpzIiwid2VicGFjazovLy8uL2F1c3RyYWxpYS9lbmVteS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hdXN0cmFsaWEvaW5kZXguY3NzP2ZkODgiLCJ3ZWJwYWNrOi8vLy4vYXVzdHJhbGlhL2luZGV4LmpzIiwid2VicGFjazovLy8uL2F1c3RyYWxpYS9saW5lL2luZGV4LmpzIiwid2VicGFjazovLy8uL2F1c3RyYWxpYS9saW5lL3Nwb3QuanMiLCJ3ZWJwYWNrOi8vLy4vYXVzdHJhbGlhL3BsYW50L2JvYXJkLmpzIiwid2VicGFjazovLy8uL2F1c3RyYWxpYS9wbGFudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hdXN0cmFsaWEvcGxhbnQvcGxhbnQuYmFzZS5qcyIsIndlYnBhY2s6Ly8vLi9hdXN0cmFsaWEvcGxhbnQvcGxhbnQubW9uZXkuanMiLCJ3ZWJwYWNrOi8vLy4vYXVzdHJhbGlhL3BsYW50L3BsYW50LnBvd2VyLmpzIiwid2VicGFjazovLy8uL2F1c3RyYWxpYS9zZXQtY29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly8vLi9ldXJvcGUvY2FyZHMuanMiLCJ3ZWJwYWNrOi8vLy4vZXVyb3BlL2luZGV4LmNzcz8xYjVhIiwid2VicGFjazovLy8uL2V1cm9wZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9nYW1lL2dhbWUtcGxheWVyL2tleWJvYXJkLW1vdmVyLmpzIiwid2VicGFjazovLy8uL2dhbWUvZ2FtZS1wbGF5ZXIvbW92ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vZ2FtZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9nYW1lL21vZHVsZXMvZ2FtZS5maWVsZC5jc3M/ZDU0MyIsIndlYnBhY2s6Ly8vLi9nYW1lL21vZHVsZXMvZ2FtZS5maWVsZC5qcyIsIndlYnBhY2s6Ly8vLi9nYW1lL21vZHVsZXMvZ2FtZS50YWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9nYW1lL21vZHVsZXMvaW50ZXJzZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vZ2FtZS9ub2RlX21vZHVsZXMvZXZlbnRzLWRpc3BhdGNoL2luZGV4LmpzIiwid2VicGFjazovLy8uL2dhbWUvbm9kZV9tb2R1bGVzL2xpc3Rlbi1rZXlib2FyZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9nYW1lL3BsYXllci5qcyIsIndlYnBhY2s6Ly8vLi9hZnJpY2EvaW5kZXguY3NzIiwid2VicGFjazovLy8uL2FmcmljYS9tYXAvaW5kZXguY3NzIiwid2VicGFjazovLy8uL2FmcmljYS90cmliZS9pbmRleC5jc3MiLCJ3ZWJwYWNrOi8vLy4vYW1lcmljYS9pbmRleC5jc3MiLCJ3ZWJwYWNrOi8vLy4vYW50YXJjdGljYS9mYWxsZXIvcGVuZ3Vpbi5jc3MiLCJ3ZWJwYWNrOi8vLy4vYW50YXJjdGljYS9mYWxsZXIvc25vd2ZsYWtlLmNzcyIsIndlYnBhY2s6Ly8vLi9hbnRhcmN0aWNhL2luZGV4LmNzcyIsIndlYnBhY2s6Ly8vLi9hc2lhL2luZGV4LmNzcyIsIndlYnBhY2s6Ly8vLi9hc2lhL3RyYWNrL2luZGV4LmNzcyIsIndlYnBhY2s6Ly8vLi9hdXN0cmFsaWEvaW5kZXguY3NzIiwid2VicGFjazovLy8uL2V1cm9wZS9pbmRleC5jc3MiLCJ3ZWJwYWNrOi8vLy4vZ2FtZS9tb2R1bGVzL2dhbWUuZmllbGQuY3NzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ldmVudHMtZGlzcGF0Y2gvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2dldC1yYW5kb20taW50ZWdlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguY3NzPzVlMGMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JlZW5zLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9pbml0LmdhbWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VwZGF0ZS5zY3JlZW4uanMiXSwibmFtZXMiOlsiQWZyaWNhR2FtZSIsImVsZW1lbnQiLCJjb25maWciLCJEaXNwYXRjaGVyIiwiX3BvaW50cyIsImludGVyc2VjdG9yIiwiZ2FtZSIsInRhYmxlIiwibmFtZSIsInZhbHVlIiwiZmllbGQiLCJoZXJvIiwiUGxheWVyIiwiYXBwZW5kQ2hpbGQiLCJvbiIsImJvdW5kYXJ5IiwiX29uSGVyb0JvdW5kYXJ5IiwibWFwIiwiTWFwIiwiaW5pdCIsInRyaWJlIiwiVHJpYmUiLCJmaW5pc2giLCJmaW5pc2hXYXRjaGVyIiwid2F0Y2giLCJkYXRhIiwid2luIiwic3RvcFdhdGNoZXIiLCJsb3NlIiwiZGlyZWN0aW9uIiwic3BlZWQiLCJtb3ZlIiwiX3NldEhlcm9TdGFydFBvc2l0aW9uIiwiX3NldFRyaWJlU3RhcnRQb3NpdGlvbiIsInN0YXJ0IiwidHJpZ2dlciIsInBvaW50cyIsImRlZmF1bHRQb2ludHMiLCJyZXNldCIsInBhdXNlIiwib25Mb3NlIiwicG9zaXRpb24iLCJoZXJvU3RhcnRQb3NpdGlvbiIsImxlZnQiLCJ0b3AiLCJ0cmliZVN0YXJ0UG9zaXRpb24iLCJtYXBCb3VuZGFyeSIsIm1vdmVyIiwibW92ZXJTdGFydFBvc2l0aW9uIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibW92ZXJOZXh0UG9zaXRpb24iLCJib3R0b20iLCJyaWdodCIsInVwIiwiZG93biIsIm1hcFBvc2l0aW9uIiwibWFwQ29vcmRpbmF0ZXMiLCJoYXNPYmplY3QiLCJwYXJzZUludCIsInVwZGF0ZSIsInBvaW50U2l6ZSIsIm9iamVjdHMiLCJyZW5kZXIiLCJpbml0aWFsTGVmdCIsIm1pbkxlZnQiLCJ3aWR0aCIsImVsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJ5Iiwicm93cyIsImxlbmd0aCIsInB1c2giLCJ4IiwiY29scyIsInBvaW50IiwiZHJhd1BvaW50Iiwic3R5bGUiLCJoZWlnaHQiLCJyb3ciLCJjb2wiLCJzeW1ib2wiLCJvYmplY3QiLCJsZWdlbmQiLCJjbGFzc0xpc3QiLCJhZGQiLCJfaGVyb1N0YXJ0UG9zaXRpb24iLCJjb2luIiwicmVtb3ZlIiwiX3RyaWJlU3RhcnRQb3NpdGlvbiIsIm5ld1Bvc2l0aW9uIiwiZm9yRWFjaCIsImNvb3JkcyIsInBvaW50Q29vcmRzIiwiaXNNb3JlTGVmdCIsImlzTW9yZVJpZ2h0IiwiaXNNb3JlVXAiLCJpc01vcmVEb3duIiwiTnVtYmVyIiwiZGlmZiIsIm9mZnNldFdpZHRoIiwianVtcFRpbWVyIiwianVtcEhlaWdodCIsInBsYXllciIsImNoZWNrVGltZXIiLCJzZXRJbnRlcnZhbCIsImp1bXBpbmciLCJjYW5Nb3ZlIiwic3RhcnRKdW1wIiwianVtcFN0YXJ0IiwibWF4SGVpZ2h0IiwiY2xlYXJJbnRlcnZhbCIsIl9wYXVzZSIsIl9kaXJlY3Rpb24iLCJCb29sZWFuIiwiX21vdmVUaW1lciIsInRvUmlnaHQiLCJ0b0xlZnQiLCJBbWVyaWNhR2FtZSIsInN0ZXAiLCJjdXJyZW50UG9zaXRpb24iLCJ3YWxscyIsIiRtYXplIiwiX2NyZWF0ZU1hemUiLCJtYXplIiwiX2ZpbGxNYXplIiwiYW1hemUiLCJyYW5kb21XYWxsIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiaG9zdCIsIm9wcG9zaXRlIiwidmFsaWQiLCJzcGxpY2UiLCJpbmRleE9mIiwiZ2V0RWxlbWVudEJ5SWQiLCJjbGFzc05hbWUiLCJib2R5Iiwib25rZXlkb3duIiwiZSIsIl9vbktleWRvd24iLCJrZXlDb2RlIiwiYSIsImIiLCJhZGRCbG9ja1dhbGxzIiwic2V0QXR0cmlidXRlIiwid2luZG93IiwiRmFsbGVyIiwiYm90dG9tT2Zmc2V0IiwidGltZXIiLCJ0b0Rvd24iLCJGbG93IiwiZWxlbWVudHMiLCJtaW5UaW1lb3V0IiwibWF4VGltZW91dCIsImZsb3dFbGVtZW50Iiwid2F0Y2hlciIsInNldFRpbWVvdXQiLCJfZ2VuZXJhdGVFbGVtZW50IiwiY2xlYXJUaW1lb3V0IiwiUGVuZ3VpbiIsIlNub3dmbGFrZSIsIkhlcm8iLCJBbnRhcmN0aWNhR2FtZSIsInN0YXJ0TGl2ZXMiLCJsaXZlcyIsInBvaW50c1RvV2luIiwiX2xpdmVzIiwiZ3JvdW5kIiwic25vd2ZhbGwiLCJwZW5ndWlucyIsImxvc2VMaWZlIiwibWF4Iiwic3RvcCIsIkFzaWFHYW1lIiwiX2Rpc3RhbmNlIiwiZGlzdGFuY2UiLCJUcmFjayIsInRyYWNrIiwidHJhZmZpYyIsIlRyYWZmaWMiLCJvZmZzZXRIZWlnaHQiLCJzdGFydE9mZnNldCIsImluaXRpYWxCb3R0b20iLCJtaW5Cb3R0b20iLCJfc2V0UG9zaXRpb24iLCJjb3VudGVyIiwic2lnblZhbHVlIiwic2lnblBvc2l0aW9uIiwic2lnbkVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsIl9vbkNoZWNrTWFyayIsIm1hcmtWYWx1ZSIsImNhciIsInF1ZXJ5U2VsZWN0b3IiLCJDYXIiLCJnZXRSYW5kb21TcGVlZCIsImdldFJhbmRvbUNvbG9yIiwicmVtb3ZlZCIsInBhcnNlRmxvYXQiLCJ2YXJpYW50cyIsIm1pblNwZWVkIiwibWF4U3BlZWQiLCJnZXRSYW5kb20iLCJPYmplY3QiLCJhc3NpZ24iLCJtaW5EZWxheSIsIm1heERlbGF5IiwibWF4Q2FycyIsIm1pbkNhclNwZWVkIiwibWF4Q2FyU3BlZWQiLCJjYXJzIiwiZmxvd1RpbWVyIiwiZ2VuZXJhdGlvblRpbWVyIiwic3RhcnRGbG93Iiwic3RhcnRNb3ZpbmciLCJmaWx0ZXIiLCJmaW5pc2hCb3R0b21Qb3NpdGlvbiIsIml0ZXJhdGlvbiIsImRlbGF5IiwiY3JlYXRlQ2FyIiwic3RhcnRCb3R0b21Qb3NpdGlvbiIsInN0YXJ0TGVmdFBvc2l0aW9uIiwiYWRkQ2FyIiwiX29uQ29sbGlzaW9uIiwiYXR0YWNrcyIsImludGVydmFsIiwiY291bnQiLCJBdHRhY2tDb250cm9sbGVyIiwiaW5kZXgiLCJzdGFydEF0dGFja1RpbWVyIiwiYXR0YWNrIiwiYXR0YWNrZWQiLCJzdGFydEF0dGFjayIsImF0dGFja0ludGVydmFsIiwibGluZUluZGV4IiwibGluZSIsImxpbmVzIiwiZW5lbXkiLCJFbmVteSIsImVuZW1pZXMiLCJlbmVteUludGVydmFsIiwiX2NvdW50IiwibGlmZXMiLCJfbGlmZXMiLCJvbGRMaWZlcyIsIkF1c3RyYWxpYUdhbWUiLCJfc3RhcnRNb25leSIsIm1vbmV5IiwiX21vbmV5IiwiaSIsIkxpbmUiLCJwbGFudHNCb2FyZCIsIkJvYXJkIiwic2V0Q29udHJvbGxlciIsIlNldENvbnRyb2xsZXIiLCJhdHRhY2tDb250cm9sbGVyIiwiX2hhc0VuZW1pZXMiLCJtb25pdG9yZWQiLCJzb21lIiwiX2F0dGFja2VkIiwic3BvdHMiLCJfb25BdHRhY2siLCJidWxsZXRzIiwic3BvdCIsIlNwb3QiLCJhZGRFdmVudExpc3RlbmVyIiwiYWN0aXZlIiwiX29uU2VsZWN0U3BvdCIsIl9ydW4iLCJfc3RhcnRDaGVjayIsIl9zdG9wQ2hlY2siLCJwbGFudCIsImJ1bGxldCIsImFjdGl2YXRlIiwiY3ljbGVUaW1lciIsIm9mZnNldExlZnQiLCJlbmVteVJlY3QiLCJidWxsZXRSZWN0Iiwic2hvdCIsImtpbGwiLCJwbGFudHMiLCJwbGFudFJlY3QiLCJ2aWV3IiwiX2FjdGl2ZSIsIl9wbGFudCIsIk1vbmV5IiwiQmFzZSIsIlBvd2VyIiwicHJldmlldyIsImdldFByZXZpZXciLCJjb25zb2xlIiwibG9nIiwiX29uU2VsZWN0Iiwic2VsZWN0ZWQiLCJ0b2dnbGUiLCJfc2VsZWN0ZWQiLCJwbGFudENsYXNzIiwiUGxhbnQiLCJjb25zdHJ1Y3RvciIsInBsYW50TmFtZSIsImV4ZWN1dGVkIiwiZXhlY3V0ZSIsInN0b3BwZWQiLCJleGVjdXRlVGltZXIiLCJfdmlldyIsInJlbmRlclZpZXciLCJwcmljZSIsIlBsYW50QmFzZSIsIl9pdGVyYXRlIiwiX2NyZWF0ZUJ1bGxldCIsIl9tb3ZlQnVsbGV0IiwidGltZW91dCIsImV4ZWN1dGVJbnRlcnZhbCIsInBhcmVudEVsZW1lbnQiLCJQbGFudE1vbmV5IiwibW9uZXlUaW1lciIsImJnIiwicmVhZHkiLCJfc3RhcnRUaW1lciIsInN0YXJ0VGltZSIsIkRhdGUiLCJub3ciLCJ1cGRhdGVUaW1lciIsInBlcmNlbnQiLCJfcmVhZHkiLCJyZW1vdmVBdHRyaWJ1dGUiLCJQbGFudFBvd2VyIiwiX29uU2VsZWN0UGxhbnQiLCJkZWFjdGl2YXRlIiwic2VsZWN0ZWRQbGFudCIsIndhcm4iLCJjYXJkcyIsInRleHQiLCJpbWFnZXMiLCJpbWciLCJjbGlja3MiLCJFdXJvcGVHYW1lIiwiY3JlYXRlUmFuZG9tTWFwIiwicmVuZGVyTWFwIiwiaW5Qcm9jZXNzIiwiaW1hZ2UiLCJjcmVhdGVJbWFnZSIsIndyYXBwZXIiLCJkaXNwbGF5IiwiaW1nV3JhcHBlciIsImJ1dHRvbiIsInR5cGUiLCJjb21iaW5hdGlvbnMiLCJjYXJkIiwiY2VsbCIsIiRjYXJkIiwic3RhdGUiLCJvbkNhcmRDbGljayIsInNyYyIsImlubmVySFRNTCIsIm9uY2xpY2siLCJzaG93SW1hZ2UiLCJLZXlib2FyZE1vdmVyIiwicGVyaW9kIiwibGlzdGVuZXIiLCJLZXlib2FyZExpc3RlbmVyIiwidG9VcCIsIk1vdmVyIiwiX3NwZWVkIiwibW92ZXJSZWN0IiwiZmllbGRSZWN0IiwiY3JlYXRlTWFzayIsImNyZWF0ZUZpZWxkIiwiR2FtZUZpZWxkIiwiY2xpY2tDYWxsYmFjayIsIm1hc2siLCJjYWxsYmFjayIsIkdhbWVUYWJsZSIsInBhcmFtcyIsIm5vZGVzIiwicGFyYW1OYW1lIiwicGFyYW0iLCJub2RlIiwiSW50ZXJzZWN0b3IiLCJvYmoxIiwib2JqMiIsIm9mZnNldCIsImNvb3JkczEiLCJjb29yZHMyIiwicGxhY2VzIiwiY2hlY2siLCJldmVudHMiLCJjb2xsaXNpb24iLCJjYWxsYmFja3MiLCJvbmNlIiwib2ZmIiwiZXZlbnROYW1lIiwiY2IiLCJjYnMiLCJhY3Rpb25zIiwic2V0TGlzdGVuZXJzIiwidGltZXJJbnRlcnZhbCIsImNvZGUiLCJhY3Rpb24iLCJjb2RlcyIsInN0YXJ0ZWQiLCJsYXVuY2giLCJtb2R1bGUiLCJleHBvcnRzIiwidXNlU291cmNlTWFwIiwibGlzdCIsInRvU3RyaW5nIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwiam9pbiIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImNzc01hcHBpbmciLCJidG9hIiwic291cmNlTWFwcGluZyIsInRvQ29tbWVudCIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsImNvbmNhdCIsInNvdXJjZU1hcCIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRlZmF1bHRNYXhWYWx1ZSIsImRlZmF1bHRNaW5WYWx1ZSIsInR5cGVFcnJvciIsIm1pbiIsIkVycm9yIiwiY3NzIiwibG9jYXRpb24iLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJyZXBsYWNlIiwiZml4ZWRDc3MiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwidW5xdW90ZWRPcmlnVXJsIiwidHJpbSIsIm8iLCIkMSIsInRlc3QiLCJuZXdVcmwiLCJjdXJyZW50U2NyZWVuIiwic2hvd1NjcmVlbiIsInNjcmVlbiIsInNjcmVlbnMiLCJ1cGRhdGVTY3JlZW4iLCJpbml0R2FtZSIsInRpdGxlIiwidGFzayIsImFuc3dlciIsImV4aXQiLCJtZXNzYWdlIiwiYmxvY2tTdHlsZSIsImNyZWF0ZVBsYXlncm91bmQiLCJnYW1lTmFtZSIsInBsYXlncm91bmQiLCJnYW1lUG9pbnRzIiwiaGlkZSIsInNob3ciLCJwaWMiLCJuZXh0IiwibmV4dFRleHQiLCJuZXh0Q2FsbGJhY2siXSwibWFwcGluZ3MiOiI7UUFBQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7UUFDQTs7O1FBR0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLDBDQUEwQyxnQ0FBZ0M7UUFDMUU7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSx3REFBd0Qsa0JBQWtCO1FBQzFFO1FBQ0EsaURBQWlELGNBQWM7UUFDL0Q7O1FBRUE7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBLHlDQUF5QyxpQ0FBaUM7UUFDMUUsZ0hBQWdILG1CQUFtQixFQUFFO1FBQ3JJO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMkJBQTJCLDBCQUEwQixFQUFFO1FBQ3ZELGlDQUFpQyxlQUFlO1FBQ2hEO1FBQ0E7UUFDQTs7UUFFQTtRQUNBLHNEQUFzRCwrREFBK0Q7O1FBRXJIO1FBQ0E7OztRQUdBO1FBQ0E7Ozs7Ozs7Ozs7Ozs7QUNqRkEsY0FBYyxtQkFBTyxDQUFDLGlIQUE2RDs7QUFFbkYsNENBQTRDLFFBQVM7O0FBRXJEO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLG1HQUFnRDs7QUFFckU7O0FBRUEsR0FBRyxLQUFVLEVBQUUsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNuQmY7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztJQUVNQSxVOzs7QUFDSixzQkFBWUMsT0FBWixFQUFrQztBQUFBOztBQUFBLFFBQWJDLE1BQWEsdUVBQUosRUFBSTs7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Q0xVLFVBQUksQ0FBQ1YsS0FBRCxDQUFKO0FBQ0Q7O0FBRUQsUUFBSWxiLElBQUksQ0FBQ3NULElBQVQsRUFBZTtBQUNiQSxVQUFJLENBQUNzQixTQUFMLEdBQWlCNVUsSUFBSSxDQUFDc1QsSUFBdEI7QUFDRCxLQUZELE1BRU87QUFDTHNJLFVBQUksQ0FBQ3RJLElBQUQsQ0FBSjtBQUNEOztBQUVELFFBQUl0VCxJQUFJLENBQUMrYixJQUFULEVBQWU7QUFDYkMsY0FBUSxDQUFDelIsV0FBVCxHQUF1QnZLLElBQUksQ0FBQytiLElBQTVCO0FBQ0QsS0FGRCxNQUVPO0FBQ0xDLGNBQVEsQ0FBQ3pSLFdBQVQsR0FBdUIsUUFBdkI7QUFDRDs7QUFFRHdSLFFBQUksQ0FBQ2xILE9BQUwsR0FBZTtBQUFBLGFBQU1vSCxZQUFZLEVBQWxCO0FBQUEsS0FBZjs7QUFFQUosUUFBSSxDQUFDZixNQUFELENBQUo7QUFDRCxHQTNDRDtBQTRDRCxDQS9Ea0IsRUFBbkI7O0FBaUVlRSwyRUFBZixFIiwiZmlsZSI6ImluZGV4Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL2luZGV4LmpzXCIpO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0ICogYXMgZ2FtZSBmcm9tIFwiLi4vZ2FtZVwiO1xyXG5cclxuaW1wb3J0IFBsYXllciBmcm9tIFwiLi9wbGF5ZXJcIjtcclxuaW1wb3J0IE1hcCBmcm9tIFwiLi9tYXBcIjtcclxuaW1wb3J0IFRyaWJlIGZyb20gXCIuL3RyaWJlXCI7XHJcblxyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgRGlzcGF0Y2hlciBmcm9tIFwiZXZlbnRzLWRpc3BhdGNoXCI7XHJcblxyXG5jbGFzcyBBZnJpY2FHYW1lIHtcclxuICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjb25maWcgPSB7fSkge1xyXG4gICAgbmV3IERpc3BhdGNoZXIodGhpcyk7XHJcblxyXG4gICAgdGhpcy5fcG9pbnRzID0gMDtcclxuXHJcbiAgICB0aGlzLmludGVyc2VjdG9yID0gbmV3IGdhbWUuSW50ZXJzZWN0b3IoKTtcclxuXHJcbiAgICAvKiog0KLQsNCx0LvQuNGG0LAg0YDQtdC30YPQu9GM0YLQsNGC0L7QsiAqL1xyXG4gICAgdGhpcy50YWJsZSA9IGdhbWUuR2FtZVRhYmxlKHtcclxuICAgICAgXCJwb2ludHNcIjoge1xyXG4gICAgICAgIG5hbWU6IFwi0JDQu9C80LDQt9GLXCIsXHJcbiAgICAgICAgdmFsdWU6IDBcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLyoqINCY0LPRgNC+0LLQvtC1INC/0L7Qu9C1ICovXHJcbiAgICB0aGlzLmZpZWxkID0gZ2FtZS5HYW1lRmllbGQoZWxlbWVudCwgdGhpcy50YWJsZS5lbGVtZW50KTtcclxuXHJcbiAgICAvKiog0JPQtdGA0L7QuSAqL1xyXG4gICAgdGhpcy5oZXJvID0gbmV3IFBsYXllcih0aGlzKTtcclxuICAgIHRoaXMuZmllbGQuYXBwZW5kQ2hpbGQodGhpcy5oZXJvLmVsZW1lbnQpO1xyXG4gICAgdGhpcy5oZXJvLm9uKCdib3VuZGFyeScsIChib3VuZGFyeSkgPT4gdGhpcy5fb25IZXJvQm91bmRhcnkoYm91bmRhcnkpKTtcclxuXHJcbiAgICAvKiog0JrQsNGA0YLQsCDQv9C70LDRgtGE0L7RgNC8ICovXHJcbiAgICB0aGlzLm1hcCA9IG5ldyBNYXAodGhpcyk7XHJcbiAgICB0aGlzLm1hcC5pbml0KCk7XHJcbiAgICB0aGlzLmZpZWxkLmFwcGVuZENoaWxkKHRoaXMubWFwLmVsZW1lbnQpO1xyXG5cclxuICAgIC8qKiDQktGA0LDQttC10YHQutC+0LUg0L/Qu9C10LzRjyAqL1xyXG4gICAgdGhpcy50cmliZSA9IG5ldyBUcmliZSh0aGlzKTtcclxuICAgIHRoaXMuZmllbGQuYXBwZW5kQ2hpbGQodGhpcy50cmliZS5lbGVtZW50KTtcclxuXHJcbiAgICAvKiog0J/QtdGA0LXRgdC10YfQtdC90LjQtSDRhNC40L3QuNGI0LAgKi9cclxuICAgIGxldCBmaW5pc2ggPSB0aGlzLm1hcC5maW5pc2g7XHJcbiAgICBsZXQgZmluaXNoV2F0Y2hlciA9IHRoaXMuaW50ZXJzZWN0b3Iud2F0Y2goZmluaXNoLCB0aGlzLmhlcm8uZWxlbWVudCk7XHJcbiAgICAgZmluaXNoLm9uKCdpbnRlcnNlY3Rvci5ldmVudHMuY29sbGlzaW9uJywgZGF0YSA9PiB7XHJcbiAgICAgIHRoaXMud2luKCk7XHJcbiAgICAgIHRoaXMuaW50ZXJzZWN0b3Iuc3RvcFdhdGNoZXIoZmluaXNoV2F0Y2hlcik7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKiog0KHRgtC+0LvQutC90L7QstC10L3QuNC1INGBINC/0LvQtdC80LXQvdC10LwgKi9cclxuICAgIHRoaXMuaW50ZXJzZWN0b3Iud2F0Y2godGhpcy50cmliZS5lbGVtZW50LCB0aGlzLmhlcm8uZWxlbWVudCk7XHJcbiAgICB0aGlzLnRyaWJlLmVsZW1lbnQub24oJ2ludGVyc2VjdG9yLmV2ZW50cy5jb2xsaXNpb24nLCBkYXRhID0+IHtcclxuICAgICAgdGhpcy5sb3NlKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKiog0JTQstC40LbQtdC90LjQtSDQv9C70LXQvNC10L3QuCDQv9GA0Lgg0LTQstC40LbQtdC90LjQuCDQutCw0YDRgtGLICovXHJcbiAgICB0aGlzLm1hcC5vbignbW92ZScsICh7ZGlyZWN0aW9uLCBzcGVlZH0pID0+IHtcclxuICAgICAgdGhpcy50cmliZS5tb3ZlKGRpcmVjdGlvbiwgc3BlZWQpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fc2V0SGVyb1N0YXJ0UG9zaXRpb24oKTtcclxuICAgIHRoaXMuX3NldFRyaWJlU3RhcnRQb3NpdGlvbigpO1xyXG5cclxuICAgIHRoaXMuc3RhcnQoKTtcclxuICB9XHJcblxyXG4gIGdldCBwb2ludHMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcG9pbnRzO1xyXG4gIH1cclxuXHJcbiAgc2V0IHBvaW50cyh2YWx1ZSkge1xyXG4gICAgdGhpcy5fcG9pbnRzID0gcGFyc2VJbnQodmFsdWUpIHx8IDA7XHJcbiAgICB0aGlzLnRhYmxlLnVwZGF0ZSh7XHJcbiAgICAgIFwicG9pbnRzXCI6IHRoaXMuX3BvaW50c1xyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIHdpbigpIHtcclxuICAgIHRoaXMudHJpZ2dlcihcIndpblwiKTtcclxuICB9XHJcblxyXG4gIGxvc2UoKSB7XHJcbiAgICB0aGlzLl9zZXRIZXJvU3RhcnRQb3NpdGlvbigpO1xyXG4gICAgdGhpcy5fc2V0VHJpYmVTdGFydFBvc2l0aW9uKCk7XHJcbiAgICB0aGlzLnBvaW50cyA9IHRoaXMuZGVmYXVsdFBvaW50cztcclxuICAgIHRoaXMudHJpYmUucmVzZXQoKTtcclxuICAgIHRoaXMubWFwLnJlc2V0KCk7XHJcbiAgICB0aGlzLmhlcm8ucGF1c2UgPSB0cnVlO1xyXG4gICAgdGhpcy50cmliZS5wYXVzZSA9IHRydWU7XHJcblxyXG4gICAgdGhpcy5maWVsZC5vbkxvc2UoKCkgPT4gdGhpcy5zdGFydCgpKTtcclxuICB9XHJcblxyXG5cclxuICBzdGFydCgpIHtcclxuICAgIHRoaXMuaGVyby5wYXVzZSA9IGZhbHNlO1xyXG4gICAgdGhpcy50cmliZS5wYXVzZSA9IGZhbHNlO1xyXG4gICAgdGhpcy5tYXAuc3RhcnQoKTtcclxuICB9XHJcblxyXG4gIF9zZXRIZXJvU3RhcnRQb3NpdGlvbigpIHtcclxuICAgIGxldCBwb3NpdGlvbiA9IHRoaXMubWFwLmhlcm9TdGFydFBvc2l0aW9uO1xyXG5cclxuICAgIHRoaXMuaGVyby5sZWZ0ID0gcG9zaXRpb24ubGVmdDtcclxuICAgIHRoaXMuaGVyby50b3AgPSBwb3NpdGlvbi50b3A7XHJcbiAgfVxyXG5cclxuICBfc2V0VHJpYmVTdGFydFBvc2l0aW9uKCkge1xyXG4gICAgbGV0IHBvc2l0aW9uID0gdGhpcy5tYXAudHJpYmVTdGFydFBvc2l0aW9uO1xyXG5cclxuICAgIHRoaXMudHJpYmUubGVmdCA9IHBvc2l0aW9uLmxlZnQ7XHJcbiAgICB0aGlzLnRyaWJlLnRvcCA9IHBvc2l0aW9uLnRvcDtcclxuICB9XHJcblxyXG4gIF9vbkhlcm9Cb3VuZGFyeShib3VuZGFyeSkge1xyXG4gICAgaWYgKHRoaXMuaGVyby5tYXBCb3VuZGFyeSkgcmV0dXJuO1xyXG4gICAgdGhpcy5tYXAubW92ZShib3VuZGFyeSwgdGhpcy5oZXJvKTtcclxuICB9XHJcblxyXG4gIGNhbk1vdmUobW92ZXIsIGRpcmVjdGlvbikge1xyXG4gICAgbGV0IG1vdmVyU3RhcnRQb3NpdGlvbiA9IG1vdmVyLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICBsZXQgbW92ZXJOZXh0UG9zaXRpb24gPSB7XHJcbiAgICAgIHRvcDogbW92ZXJTdGFydFBvc2l0aW9uLnRvcCxcclxuICAgICAgYm90dG9tOiBtb3ZlclN0YXJ0UG9zaXRpb24uYm90dG9tLFxyXG4gICAgICBsZWZ0OiBtb3ZlclN0YXJ0UG9zaXRpb24ubGVmdCxcclxuICAgICAgcmlnaHQ6IG1vdmVyU3RhcnRQb3NpdGlvbi5yaWdodCxcclxuICAgIH07XHJcblxyXG4gICAgc3dpdGNoKGRpcmVjdGlvbikge1xyXG4gICAgICBjYXNlIFwidXBcIjpcclxuICAgICAgICBtb3Zlck5leHRQb3NpdGlvbi50b3AgLT0gbW92ZXIuc3BlZWQudXA7XHJcbiAgICAgICAgbW92ZXJOZXh0UG9zaXRpb24uYm90dG9tIC09IG1vdmVyLnNwZWVkLnVwO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFwiZG93blwiOlxyXG4gICAgICAgIG1vdmVyTmV4dFBvc2l0aW9uLnRvcCArPSBtb3Zlci5zcGVlZC5kb3duO1xyXG4gICAgICAgIG1vdmVyTmV4dFBvc2l0aW9uLmJvdHRvbSArPSBtb3Zlci5zcGVlZC5kb3duO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFwibGVmdFwiOlxyXG4gICAgICAgIG1vdmVyTmV4dFBvc2l0aW9uLmxlZnQgLT0gbW92ZXIuc3BlZWQubGVmdDtcclxuICAgICAgICBtb3Zlck5leHRQb3NpdGlvbi5yaWdodCAtPSBtb3Zlci5zcGVlZC5sZWZ0O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFwicmlnaHRcIjpcclxuICAgICAgICBtb3Zlck5leHRQb3NpdGlvbi5sZWZ0ICs9IG1vdmVyLnNwZWVkLnJpZ2h0O1xyXG4gICAgICAgIG1vdmVyTmV4dFBvc2l0aW9uLnJpZ2h0ICs9IG1vdmVyLnNwZWVkLnJpZ2h0O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBtYXBQb3NpdGlvbiA9IHRoaXMubWFwLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG4gICAgbGV0IG1hcENvb3JkaW5hdGVzID0ge1xyXG4gICAgICBsZWZ0OiBtb3Zlck5leHRQb3NpdGlvbi5sZWZ0IC0gbWFwUG9zaXRpb24ubGVmdCxcclxuICAgICAgcmlnaHQ6IG1vdmVyTmV4dFBvc2l0aW9uLnJpZ2h0IC0gbWFwUG9zaXRpb24ubGVmdCxcclxuICAgICAgdG9wOiBtb3Zlck5leHRQb3NpdGlvbi50b3AgLSBtYXBQb3NpdGlvbi50b3AsXHJcbiAgICAgIGJvdHRvbTogbW92ZXJOZXh0UG9zaXRpb24uYm90dG9tIC0gbWFwUG9zaXRpb24udG9wLFxyXG4gICAgfTtcclxuXHJcbiAgICBsZXQgaGFzT2JqZWN0ID0gdGhpcy5tYXAuaGFzT2JqZWN0KG1hcENvb3JkaW5hdGVzKTtcclxuXHJcbiAgICByZXR1cm4gIWhhc09iamVjdDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFmcmljYUdhbWU7XHJcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9pbmRleC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCB7IG1hcCwgbGVnZW5kIH0gZnJvbSAnLi9tYXAnO1xyXG5pbXBvcnQgRGlzcGF0Y2hlciBmcm9tICdldmVudHMtZGlzcGF0Y2gnO1xyXG5cclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuXHJcbmNsYXNzIE1hcCB7XHJcbiAgY29uc3RydWN0b3IoZ2FtZSkge1xyXG4gICAgbmV3IERpc3BhdGNoZXIodGhpcyk7XHJcblxyXG4gICAgdGhpcy5wb2ludFNpemUgPSA1MDtcclxuICAgIHRoaXMub2JqZWN0cyA9IFtdO1xyXG5cclxuICAgIHRoaXMubWFwID0gW107XHJcblxyXG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcclxuICAgIHRoaXMuZWxlbWVudCA9IHRoaXMucmVuZGVyKCk7XHJcbiAgfVxyXG5cclxuICBnZXQgd2lkdGgoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5wb2ludFNpemUgKiBtYXBbMF0ubGVuZ3RoO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGhlaWdodCgpIHtcclxuICAgIHJldHVybiB0aGlzLnBvaW50U2l6ZSAqIG1hcC5sZW5ndGg7XHJcbiAgfVxyXG5cclxuICBnZXQgbGVmdCgpIHtcclxuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCkgfHwgMDtcclxuICB9XHJcblxyXG4gIHNldCBsZWZ0KHZhbHVlKSB7XHJcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCA9IE51bWJlcih2YWx1ZSkgKyAncHgnO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGhlcm9TdGFydFBvc2l0aW9uKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2hlcm9TdGFydFBvc2l0aW9uO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRyaWJlU3RhcnRQb3NpdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLl90cmliZVN0YXJ0UG9zaXRpb247XHJcbiAgfVxyXG5cclxuICBpbml0KCkge1xyXG4gICAgdGhpcy5pbml0aWFsTGVmdCA9IHRoaXMubGVmdDtcclxuICAgIHRoaXMubWluTGVmdCA9IC0xICogKHRoaXMud2lkdGgpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgbGV0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBlbC5pZCA9ICdtYXAnO1xyXG5cclxuICAgIGZvciAobGV0IHkgPSAwLCByb3dzID0gbWFwLmxlbmd0aDsgeSA8IHJvd3M7IHkrKykge1xyXG4gICAgICB0aGlzLm1hcC5wdXNoKFtdKTtcclxuICAgICAgZm9yIChsZXQgeCA9IDAsIGNvbHMgPSBtYXBbMF0ubGVuZ3RoOyB4IDwgY29sczsgeCsrKSB7XHJcbiAgICAgICAgbGV0IHBvaW50ID0gdGhpcy5kcmF3UG9pbnQoeSwgeCk7XHJcbiAgICAgICAgaWYgKHBvaW50KSB7XHJcbiAgICAgICAgICBlbC5hcHBlbmRDaGlsZChwb2ludC5lbGVtZW50KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMubWFwW3ldW3hdID0gcG9pbnQgfHwgbnVsbDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGVsLnN0eWxlLndpZHRoID0gbWFwWzBdLmxlbmd0aCAqIHRoaXMucG9pbnRTaXplICsgXCJweFwiO1xyXG4gICAgZWwuc3R5bGUuaGVpZ2h0ID0gbWFwLmxlbmd0aCAqIHRoaXMucG9pbnRTaXplICsgXCJweFwiO1xyXG5cclxuICAgIHJldHVybiBlbDtcclxuICB9XHJcblxyXG4gIGRyYXdQb2ludChyb3csIGNvbCkge1xyXG4gICAgbGV0IHN5bWJvbCA9IG1hcFtyb3ddW2NvbF07XHJcbiAgICBsZXQgb2JqZWN0ID0gbGVnZW5kW3N5bWJvbF07XHJcblxyXG4gICAgaWYgKCFvYmplY3QpIHJldHVybjtcclxuXHJcbiAgICBzd2l0Y2gob2JqZWN0KSB7XHJcbiAgICAgIGNhc2UgXCJncm91bmRcIjpcclxuICAgICAgY2FzZSBcInBsYXRmb3JtXCI6XHJcbiAgICAgICAgICBsZXQgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgIGVsLnN0eWxlLndpZHRoID0gdGhpcy5wb2ludFNpemUgKyAncHgnO1xyXG4gICAgICAgICAgZWwuc3R5bGUuaGVpZ2h0ID0gdGhpcy5wb2ludFNpemUgKyAncHgnO1xyXG4gICAgICAgICAgZWwuY2xhc3NMaXN0LmFkZChvYmplY3QpO1xyXG4gICAgICAgICAgZWwuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XHJcbiAgICAgICAgICBlbC5zdHlsZS50b3AgPSB0aGlzLnBvaW50U2l6ZSAqIHJvdyArICdweCc7XHJcbiAgICAgICAgICBlbC5zdHlsZS5sZWZ0ID0gdGhpcy5wb2ludFNpemUgKiBjb2wgKyAncHgnO1xyXG5cclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG9iamVjdDogb2JqZWN0LCBcclxuICAgICAgICAgICAgZWxlbWVudDogZWxcclxuICAgICAgICAgIH07XHJcbiAgICAgIGNhc2UgXCJoZXJvXCI6IFxyXG4gICAgICAgICAgdGhpcy5faGVyb1N0YXJ0UG9zaXRpb24gPSB7IHRvcDogdGhpcy5wb2ludFNpemUgKiByb3csICBsZWZ0OiB0aGlzLnBvaW50U2l6ZSAqIGNvbCB9O1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgXCJjb2luXCI6XHJcbiAgICAgICAgICBsZXQgY29pbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgY29pbi5zdHlsZS53aWR0aCA9IHRoaXMucG9pbnRTaXplICsgJ3B4JztcclxuICAgICAgICAgIGNvaW4uc3R5bGUuaGVpZ2h0ID0gdGhpcy5wb2ludFNpemUgKyAncHgnO1xyXG4gICAgICAgICAgY29pbi5jbGFzc0xpc3QuYWRkKG9iamVjdCk7XHJcbiAgICAgICAgICBjb2luLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xyXG4gICAgICAgICAgY29pbi5zdHlsZS50b3AgPSB0aGlzLnBvaW50U2l6ZSAqIHJvdyArICdweCc7XHJcbiAgICAgICAgICBjb2luLnN0eWxlLmxlZnQgPSB0aGlzLnBvaW50U2l6ZSAqIGNvbCArICdweCc7XHJcbiAgICAgICAgICB0aGlzLmdhbWUuaW50ZXJzZWN0b3Iud2F0Y2goY29pbiwgdGhpcy5nYW1lLmhlcm8uZWxlbWVudCk7XHJcbiAgICAgICAgICBjb2luLm9uKCdpbnRlcnNlY3Rvci5ldmVudHMuY29sbGlzaW9uJywgZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5wb2ludHMgPSB0aGlzLmdhbWUucG9pbnRzICsgMTtcclxuICAgICAgICAgICAgY29pbi5yZW1vdmUoKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBvYmplY3Q6IG9iamVjdCwgXHJcbiAgICAgICAgICAgIGVsZW1lbnQ6IGNvaW5cclxuICAgICAgICAgIH07XHJcbiAgICAgIGNhc2UgXCJ0cmliZVwiOlxyXG4gICAgICAgICAgdGhpcy5fdHJpYmVTdGFydFBvc2l0aW9uID0geyB0b3A6IHRoaXMucG9pbnRTaXplICogcm93LCAgbGVmdDogdGhpcy5wb2ludFNpemUgKiBjb2wgfTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICBcclxuICAgICAgY2FzZSBcImV4aXRcIjpcclxuICAgICAgICAgIGxldCBmaW5pc2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgIGZpbmlzaC5zdHlsZS53aWR0aCA9IHRoaXMucG9pbnRTaXplICsgJ3B4JztcclxuICAgICAgICAgIGZpbmlzaC5zdHlsZS5oZWlnaHQgPSB0aGlzLnBvaW50U2l6ZSArICdweCc7XHJcbiAgICAgICAgICBmaW5pc2guY2xhc3NMaXN0LmFkZChcImZpbmlzaFwiKTtcclxuICAgICAgICAgIGZpbmlzaC5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgZmluaXNoLnN0eWxlLnRvcCA9IHRoaXMucG9pbnRTaXplICogcm93ICsgJ3B4JztcclxuICAgICAgICAgIGZpbmlzaC5zdHlsZS5sZWZ0ID0gdGhpcy5wb2ludFNpemUgKiBjb2wgKyAncHgnO1xyXG5cclxuICAgICAgICAgIHRoaXMuZmluaXNoID0gZmluaXNoO1xyXG5cclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG9iamVjdDogXCJleGl0XCIsIFxyXG4gICAgICAgICAgICBlbGVtZW50OiBmaW5pc2hcclxuICAgICAgICAgIH07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGFydCgpIHtcclxuICAgIHRoaXMucGF1c2UgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIG1vdmUoZGlyZWN0aW9uLCBoZXJvKSB7XHJcbiAgICBcclxuICAgIGlmICh0aGlzLnBhdXNlKSByZXR1cm47XHJcblxyXG4gICAgbGV0IG5ld1Bvc2l0aW9uLCBzcGVlZDtcclxuICAgIGlmIChkaXJlY3Rpb24gPT09IFwibGVmdFwiKSB7XHJcbiAgICAgIHNwZWVkID0gaGVyby5zcGVlZC5sZWZ0IC8gMjtcclxuICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSBcInJpZ2h0XCIpIHtcclxuICAgICAgc3BlZWQgPSAtMSAqIGhlcm8uc3BlZWQucmlnaHQgLyAyO1xyXG4gICAgfVxyXG5cclxuICAgIG5ld1Bvc2l0aW9uID0gdGhpcy5sZWZ0ICsgc3BlZWQ7XHJcbiAgICBcclxuICAgIGlmIChuZXdQb3NpdGlvbiA+IHRoaXMuaW5pdGlhbExlZnQpIHJldHVybjtcclxuICAgIGlmIChuZXdQb3NpdGlvbiA8IHRoaXMubWluTGVmdCkgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMubGVmdCA9IG5ld1Bvc2l0aW9uO1xyXG4gICAgdGhpcy50cmlnZ2VyKCdtb3ZlJywgeyBkaXJlY3Rpb24sIHNwZWVkIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLmxlZnQgPSB0aGlzLmluaXRpYWxMZWZ0O1xyXG4gICAgdGhpcy5tYXAuZm9yRWFjaChyb3cgPT4ge1xyXG4gICAgICByb3cuZm9yRWFjaChwb2ludCA9PiB7XHJcbiAgICAgICAgaWYgKHBvaW50ICYmIHBvaW50Lm9iamVjdCA9PSAnY29pbicpIHtcclxuICAgICAgICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChwb2ludC5lbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgaGFzT2JqZWN0KGNvb3Jkcykge1xyXG4gICAgZm9yIChsZXQgeSA9IDAsIHJvd3MgPSB0aGlzLm1hcC5sZW5ndGg7IHkgPCByb3dzOyB5KyspIHtcclxuICAgICAgZm9yIChsZXQgeCA9IDAsIGNvbHMgPSB0aGlzLm1hcFswXS5sZW5ndGg7IHggPCBjb2xzOyB4KyspIHtcclxuXHJcbiAgICAgICAgbGV0IHBvaW50ID0gdGhpcy5tYXBbeV1beF07XHJcbiAgICAgICAgaWYgKCFwb2ludCkgY29udGludWU7XHJcblxyXG4gICAgICAgIGlmIChwb2ludC5vYmplY3QgIT09ICdwbGF0Zm9ybScgJiYgcG9pbnQub2JqZWN0ICE9PSAnZ3JvdW5kJykgY29udGludWU7XHJcblxyXG4gICAgICAgIGxldCBwb2ludENvb3JkcyA9IHtcclxuICAgICAgICAgIGxlZnQ6IHRoaXMucG9pbnRTaXplICogeCxcclxuICAgICAgICAgIHJpZ2h0OiB0aGlzLnBvaW50U2l6ZSAqIHggKyB0aGlzLnBvaW50U2l6ZSxcclxuICAgICAgICAgIHRvcDogdGhpcy5wb2ludFNpemUgKiB5LFxyXG4gICAgICAgICAgYm90dG9tOiB0aGlzLnBvaW50U2l6ZSAqIHkgKyB0aGlzLnBvaW50U2l6ZVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGxldCBpc01vcmVMZWZ0ID0gY29vcmRzLnJpZ2h0IDw9IHBvaW50Q29vcmRzLmxlZnQ7XHJcbiAgICAgICAgbGV0IGlzTW9yZVJpZ2h0ID0gY29vcmRzLmxlZnQgPj0gcG9pbnRDb29yZHMucmlnaHQ7XHJcbiAgICAgICAgbGV0IGlzTW9yZVVwID0gY29vcmRzLmJvdHRvbSA8PSBwb2ludENvb3Jkcy50b3A7XHJcbiAgICAgICAgbGV0IGlzTW9yZURvd24gPSBjb29yZHMudG9wID49IHBvaW50Q29vcmRzLmJvdHRvbTtcclxuXHJcbiAgICAgICAgaWYgKGlzTW9yZUxlZnQgfHwgaXNNb3JlUmlnaHQgfHwgaXNNb3JlVXAgfHwgaXNNb3JlRG93bikgY29udGludWU7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59IFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTWFwOyIsImxldCBtYXAgPSBbXHJcbiAgXCIuLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi5cIixcclxuICBcIi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLiouLi4uKi4uLi4uLi4uLi4uLi4uLi4uLlwiLFxyXG4gIFwiLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uPS4uLj09PS4uLi4uLi4uLi4uLi4uLi4uXCIsXHJcbiAgXCIuLi4uLi4uLi4uLi4uLi4uKi4uLi4uLi4uLi4uKi4uLi4uLi4uLi4uLi4uLi49Li4uLi4uKi4uLi4uLiouLi4uLi4uLi4uLi5cIixcclxuICBcIi4uLi4uKi4uLi4uLi4uLj09Li4uLi4qLi4uPT09Li4uLiouLi4uLiouLj0uLi4uLi4uLi49eC4uLj09PS4uLi4uLi4uLi4qLlwiLFxyXG4gIFwiLi4uLj09Li4uLi49PS4uLi4uLi4uLj09Li4uLi4uLi4uPS4uLi4uPS4uLi4uLi4uLi4uLj09PS4uLi4uLi4uPS4uLi4uLj0uXCIsXHJcbiAgXCIrLi4tLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi5cIixcclxuICBcIiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1wiLFxyXG5dO1xyXG5cclxuY29uc3QgbGVnZW5kID0ge1xyXG4gIFwiLlwiOiBudWxsLFxyXG4gIFwiI1wiOiBcImdyb3VuZFwiLFxyXG4gIFwiPVwiOiBcInBsYXRmb3JtXCIsXHJcbiAgXCIqXCI6IFwiY29pblwiLFxyXG4gIFwiK1wiOiBcImhlcm9cIixcclxuICBcIi1cIjogXCJ0cmliZVwiLFxyXG4gIFwieFwiOiBcImV4aXRcIlxyXG59O1xyXG5cclxuZXhwb3J0IHsgbWFwLCBsZWdlbmQgfTsiLCJpbXBvcnQgKiBhcyBwbGF5ZXIgZnJvbSBcIi4uLy4uL2dhbWUvcGxheWVyXCI7XHJcblxyXG5jbGFzcyBQbGF5ZXIgZXh0ZW5kcyBwbGF5ZXIuTW92ZXIge1xyXG4gIGNvbnN0cnVjdG9yKGdhbWUpIHtcclxuICAgIGxldCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBlbGVtZW50LmlkID0gXCJoZXJvXCI7XHJcblxyXG4gICAgc3VwZXIoZWxlbWVudCwge1xyXG4gICAgICBzcGVlZDogeyB1cDogNCwgZG93bjogNCwgbGVmdDogNCwgcmlnaHQ6IDQgfSxcclxuXHJcbiAgICAgIGZpZWxkOiBnYW1lLmZpZWxkLFxyXG5cclxuICAgICAgZGlmZjogeyBcclxuICAgICAgICBsZWZ0OiAwLCBcclxuICAgICAgICByaWdodDogZ2FtZS5maWVsZC5vZmZzZXRXaWR0aCAvIDIsIFxyXG4gICAgICAgIHRvcDogMCwgXHJcbiAgICAgICAgYm90dG9tOiAwIFxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLmp1bXBUaW1lcjtcclxuICAgIHRoaXMuanVtcEhlaWdodCA9IDE0MDtcclxuXHJcbiAgICB0aGlzLmdhbWUgPSBnYW1lO1xyXG4gICAgbmV3IHBsYXllci5LZXlib2FyZE1vdmVyKHRoaXMsIDEwKTtcclxuXHJcbiAgICB0aGlzLmNoZWNrVGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgIGlmICh0aGlzLmp1bXBpbmcpIHJldHVybjtcclxuICAgICAgaWYgKHRoaXMuY2FuTW92ZShcImRvd25cIikpIHtcclxuICAgICAgICB0aGlzLnRvcCA9IHRoaXMudG9wICsgdGhpcy5zcGVlZC5kb3duO1xyXG4gICAgICB9XHJcbiAgICB9LCAxMCk7XHJcbiAgfVxyXG5cclxuICBjYW5Nb3ZlKGRpcmVjdGlvbikge1xyXG4gICAgXHJcbiAgICBpZiAoIXRoaXMuZ2FtZS5jYW5Nb3ZlKHRoaXMsIGRpcmVjdGlvbikpIHtcclxuICAgICAgdGhpcy5tYXBCb3VuZGFyeSA9IHRydWU7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHRoaXMubWFwQm91bmRhcnkgPSBmYWxzZTtcclxuICAgIHJldHVybiBzdXBlci5jYW5Nb3ZlKGRpcmVjdGlvbik7XHJcbiAgfVxyXG5cclxuICB0b1VwKCkge1xyXG4gICAgaWYgKHRoaXMucGF1c2UpIHJldHVybjtcclxuICAgIGlmICh0aGlzLmNhbk1vdmUoXCJ1cFwiKSkge1xyXG4gICAgICB0aGlzLnN0YXJ0SnVtcCgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy50cmlnZ2VyKFwiYm91bmRhcnlcIiwgXCJ1cFwiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXJ0SnVtcCgpIHtcclxuICAgIGlmICh0aGlzLmp1bXBpbmcpIHJldHVybjtcclxuICAgIHRoaXMuanVtcGluZyA9IHRydWU7XHJcbiAgICBsZXQganVtcFN0YXJ0ID0gdGhpcy50b3A7XHJcbiAgICB0aGlzLmp1bXBUaW1lciA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgbGV0IGNhbk1vdmUgPSB0aGlzLmNhbk1vdmUoXCJ1cFwiKTtcclxuICAgICAgbGV0IG1heEhlaWdodCA9IHRoaXMudG9wIDw9IGp1bXBTdGFydCAtIHRoaXMuanVtcEhlaWdodDtcclxuICAgICAgaWYgKCFjYW5Nb3ZlIHx8IG1heEhlaWdodCkge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5qdW1wVGltZXIpO1xyXG4gICAgICAgIHRoaXMuanVtcFRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICAgICAgaWYgKCF0aGlzLmNhbk1vdmUoXCJkb3duXCIpKSB7XHJcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5qdW1wVGltZXIpO1xyXG4gICAgICAgICAgICB0aGlzLmp1bXBpbmcgPSBmYWxzZTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudG9wID0gdGhpcy50b3AgKyB0aGlzLnNwZWVkLmRvd247XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMTApO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMudG9wID0gdGhpcy50b3AgLSB0aGlzLnNwZWVkLnVwO1xyXG4gICAgICB9XHJcbiAgICB9LCAxMCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQbGF5ZXI7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuXHJcbmltcG9ydCAqIGFzIHBsYXllciBmcm9tIFwiLi4vLi4vZ2FtZS9wbGF5ZXJcIjtcclxuXHJcbmNsYXNzIFRyaWJlIGV4dGVuZHMgcGxheWVyLk1vdmVyIHtcclxuICBjb25zdHJ1Y3RvcihnYW1lKSB7XHJcbiAgICBcclxuICAgIGxldCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZWwuaWQgPSAndHJpYmUnO1xyXG5cclxuICAgIHN1cGVyKGVsLCB7XHJcbiAgICAgIHNwZWVkOiB7IHVwOiAwLCBkb3duOiAwLCBsZWZ0OiAxLCByaWdodDogMSB9LFxyXG5cclxuICAgICAgZmllbGQ6IGdhbWUuZmllbGQsXHJcblxyXG4gICAgICBkaWZmOiB7IFxyXG4gICAgICAgIGxlZnQ6IDAsIFxyXG4gICAgICAgIHJpZ2h0OiAwLCBcclxuICAgICAgICB0b3A6IDAsIFxyXG4gICAgICAgIGJvdHRvbTogMCBcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5uYW1lID0gXCJ0cmliZVwiXHJcblxyXG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcclxuICAgIHRoaXMuX3BhdXNlID0gdHJ1ZTtcclxuICAgIHRoaXMuX2RpcmVjdGlvbiA9ICdyaWdodCc7XHJcblxyXG4gICAgdGhpcy5vbignYm91bmRhcnknLCAoYm91bmRhcnkpID0+IHtcclxuICAgICAgaWYgKGJvdW5kYXJ5ID09PSAncmlnaHQnKSB0aGlzLmRpcmVjdGlvbiA9ICdsZWZ0JztcclxuICAgICAgZWxzZSB0aGlzLmRpcmVjdGlvbiA9ICdyaWdodCc7XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLl9kaXJlY3Rpb24gPSAncmlnaHQnO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGRpcmVjdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLl9kaXJlY3Rpb247XHJcbiAgfVxyXG5cclxuICBzZXQgZGlyZWN0aW9uKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9kaXJlY3Rpb24gPSB2YWx1ZTtcclxuICAgIGlmICh0aGlzLl9kaXJlY3Rpb24gPT09ICdsZWZ0JykgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3JldmVydCcpO1xyXG4gICAgZWxzZSB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncmV2ZXJ0Jyk7XHJcbiAgfVxyXG5cclxuICBnZXQgbGVmdCgpIHtcclxuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCkgfHwgMDtcclxuICB9XHJcblxyXG4gIHNldCBsZWZ0KHZhbHVlKSB7XHJcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCA9IE51bWJlcih2YWx1ZSkgKyAncHgnO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRvcCgpIHtcclxuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmVsZW1lbnQuc3R5bGUudG9wKSB8fCAwO1xyXG4gIH1cclxuXHJcbiAgc2V0IHRvcCh2YWx1ZSkge1xyXG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLnRvcCA9IE51bWJlcih2YWx1ZSkgKyAncHgnO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHBhdXNlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3BhdXNlO1xyXG4gIH1cclxuXHJcbiAgc2V0IHBhdXNlKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9wYXVzZSA9IEJvb2xlYW4odmFsdWUpO1xyXG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLl9tb3ZlVGltZXIpO1xyXG4gICAgaWYgKCF0aGlzLl9wYXVzZSkge1xyXG4gICAgICB0aGlzLl9tb3ZlVGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKHRoaXMuZGlyZWN0aW9uID09ICdyaWdodCcpIHtcclxuICAgICAgICAgIHRoaXMudG9SaWdodCgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLnRvTGVmdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSwgMTApXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXNldCgpIHtcclxuICAgIHRoaXMucGF1c2UgPSB0cnVlO1xyXG4gICAgdGhpcy5kaXJlY3Rpb24gPSAncmlnaHQnO1xyXG4gIH1cclxuXHJcbiAgbW92ZShkaXJlY3Rpb24sIHNwZWVkKSB7XHJcbiAgICB0aGlzLmxlZnQgPSB0aGlzLmxlZnQgKyBzcGVlZDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRyaWJlOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9pbmRleC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCAqIGFzIGdhbWUgZnJvbSBcIi4uL2dhbWVcIjtcclxuXHJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuXHJcbmNsYXNzIEFtZXJpY2FHYW1lIHtcclxuICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjb25maWcgPSB7fSkge1xyXG4gICAgbmV3IERpc3BhdGNoZXIodGhpcyk7XHJcblxyXG4gICAgdGhpcy5fcG9pbnRzID0gMDtcclxuXHJcbiAgICB0aGlzLmludGVyc2VjdG9yID0gbmV3IGdhbWUuSW50ZXJzZWN0b3IoKTtcclxuXHJcbiAgICAvKiog0KLQsNCx0LvQuNGG0LAg0YDQtdC30YPQu9GM0YLQsNGC0L7QsiAqL1xyXG4gICAgdGhpcy50YWJsZSA9IGdhbWUuR2FtZVRhYmxlKHtcclxuICAgICAgXCJ0aW1lXCI6IHtcclxuICAgICAgICBuYW1lOiBcItCS0YDQtdC80Y9cIixcclxuICAgICAgICB2YWx1ZTogMFxyXG4gICAgICB9LFxyXG4gICAgICBcImxpdmVzXCI6IHtcclxuICAgICAgICBuYW1lOiBcItCW0LjQt9C90LhcIixcclxuICAgICAgICB2YWx1ZTogM1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKiog0JjQs9GA0L7QstC+0LUg0L/QvtC70LUgKi9cclxuICAgIHRoaXMuZmllbGQgPSBnYW1lLkdhbWVGaWVsZChlbGVtZW50LCB0aGlzLnRhYmxlLmVsZW1lbnQpO1xyXG5cclxuICAgIHRoaXMud2lkdGggPSA1MDtcclxuICAgIHRoaXMuaGVpZ2h0ID0gMjA7XHJcbiAgICB0aGlzLnN0ZXAgPSAyMDtcclxuICAgIHRoaXMuY3VycmVudFBvc2l0aW9uID0gWzAsIDBdO1xyXG4gICAgdGhpcy53YWxscyA9IFtdO1xyXG5cclxuICAgIHRoaXMuJG1hemUgPSB0aGlzLl9jcmVhdGVNYXplKCk7XHJcbiAgICB0aGlzLm1hemUgPSB0aGlzLl9maWxsTWF6ZSgpO1xyXG4gICAgdGhpcy5hbWF6ZSh0aGlzLmN1cnJlbnRQb3NpdGlvblswXSwgdGhpcy5jdXJyZW50UG9zaXRpb25bMV0sIHRydWUpO1xyXG5cclxuICAgIHdoaWxlICh0aGlzLndhbGxzLmxlbmd0aCAhPSAwKSB7XHJcbiAgICAgIHZhciByYW5kb21XYWxsID0gdGhpcy53YWxsc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLndhbGxzLmxlbmd0aCldLFxyXG4gICAgICAgIGhvc3QgPSByYW5kb21XYWxsWzJdLFxyXG4gICAgICAgIG9wcG9zaXRlID0gWyhob3N0WzBdICsgKHJhbmRvbVdhbGxbMF0gLSBob3N0WzBdKSAqIDIpLCAoaG9zdFsxXSArIChyYW5kb21XYWxsWzFdIC0gaG9zdFsxXSkgKiAyKV07XHJcblxyXG4gICAgICBpZiAodGhpcy52YWxpZChvcHBvc2l0ZVswXSwgb3Bwb3NpdGVbMV0pKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubWF6ZVtvcHBvc2l0ZVswXV1bb3Bwb3NpdGVbMV1dID09ICdtYXplJykge1xyXG4gICAgICAgICAgdGhpcy53YWxscy5zcGxpY2UodGhpcy53YWxscy5pbmRleE9mKHJhbmRvbVdhbGwpLCAxKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5hbWF6ZShyYW5kb21XYWxsWzBdLCByYW5kb21XYWxsWzFdLCBmYWxzZSksIHRoaXMuYW1hemUob3Bwb3NpdGVbMF0sIG9wcG9zaXRlWzFdLCB0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy53YWxscy5zcGxpY2UodGhpcy53YWxscy5pbmRleE9mKHJhbmRvbVdhbGwpLCAxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCcwLTAnKS5jbGFzc05hbWUgPSAnYmxvY2sgbWUnO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoKHRoaXMuaGVpZ2h0IC0gMikgKyAnLScgKyAodGhpcy53aWR0aCAtIDIpKS5jbGFzc05hbWUgPSAnYmxvY2sgZmluaXNoJztcclxuICAgIGRvY3VtZW50LmJvZHkub25rZXlkb3duID0gKGUpID0+IHtcclxuICAgICAgdGhpcy5fb25LZXlkb3duKGUpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfY3JlYXRlTWF6ZSgpIHtcclxuICAgIGxldCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBlbC5zdHlsZS53aWR0aCA9IHRoaXMud2lkdGggKiB0aGlzLnN0ZXAgKyAncHgnO1xyXG4gICAgZWwuc3R5bGUuaGVpZ2h0ID0gdGhpcy5oZWlnaHQgKiB0aGlzLnN0ZXAgKyAncHgnO1xyXG4gICAgXHJcbiAgICB0aGlzLmZpZWxkLmFwcGVuZENoaWxkKGVsKTtcclxuICAgIHJldHVybiBlbDtcclxuICB9XHJcblxyXG4gIF9vbktleWRvd24oZSkge1xyXG4gICAgdmFyIG5ld1Bvc2l0aW9uID0gW3RoaXMuY3VycmVudFBvc2l0aW9uWzBdICsgKChlLmtleUNvZGUgLSAzOSkgJSAyKSwgdGhpcy5jdXJyZW50UG9zaXRpb25bMV0gKyAoKGUua2V5Q29kZSAtIDM4KSAlIDIpXTtcclxuICAgIGlmICh0aGlzLnZhbGlkKG5ld1Bvc2l0aW9uWzBdLCBuZXdQb3NpdGlvblsxXSkgJiYgdGhpcy5tYXplW25ld1Bvc2l0aW9uWzBdXVtuZXdQb3NpdGlvblsxXV0gIT0gJ3dhbGwnKSB7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuY3VycmVudFBvc2l0aW9uWzBdICsgJy0nICsgdGhpcy5jdXJyZW50UG9zaXRpb25bMV0pLmNsYXNzTmFtZSA9ICdibG9jayc7XHJcbiAgICAgIHRoaXMuY3VycmVudFBvc2l0aW9uID0gbmV3UG9zaXRpb247XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuY3VycmVudFBvc2l0aW9uWzBdICsgJy0nICsgdGhpcy5jdXJyZW50UG9zaXRpb25bMV0pLmNsYXNzTmFtZSA9ICdibG9jayBtZSc7XHJcbiAgICAgIGlmICh0aGlzLmN1cnJlbnRQb3NpdGlvblswXSA9PSB0aGlzLmhlaWdodCAtIDIgJiYgdGhpcy5jdXJyZW50UG9zaXRpb25bMV0gPT0gdGhpcy53aWR0aCAtIDIpICB7XHJcbiAgICAgICAgdGhpcy53aW4oKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdmFsaWQoYSwgYikge1xyXG4gICAgcmV0dXJuIChhIDwgdGhpcy5oZWlnaHQgJiYgYSA+PSAwICYmIGIgPCB0aGlzLndpZHRoICYmIGIgPj0gMCkgPyB0cnVlIDogZmFsc2U7XHJcbiAgfVxyXG5cclxuICBhbWF6ZSh5LCB4LCBhZGRCbG9ja1dhbGxzKSB7XHJcbiAgICB0aGlzLm1hemVbeV1beF0gPSAnbWF6ZSc7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh5ICsgJy0nICsgeCkuY2xhc3NOYW1lID0gJ2Jsb2NrJztcclxuICAgIGlmIChhZGRCbG9ja1dhbGxzICYmIHRoaXMudmFsaWQoeSArIDEsIHgpICYmICh0aGlzLm1hemVbeSArIDFdW3hdID09ICd3YWxsJykpIHRoaXMud2FsbHMucHVzaChbeSArIDEsIHgsIFt5LCB4XV0pO1xyXG4gICAgaWYgKGFkZEJsb2NrV2FsbHMgJiYgdGhpcy52YWxpZCh5IC0gMSwgeCkgJiYgKHRoaXMubWF6ZVt5IC0gMV1beF0gPT0gJ3dhbGwnKSkgdGhpcy53YWxscy5wdXNoKFt5IC0gMSwgeCwgW3ksIHhdXSk7XHJcbiAgICBpZiAoYWRkQmxvY2tXYWxscyAmJiB0aGlzLnZhbGlkKHksIHggKyAxKSAmJiAodGhpcy5tYXplW3ldW3ggKyAxXSA9PSAnd2FsbCcpKSB0aGlzLndhbGxzLnB1c2goW3ksIHggKyAxLCBbeSwgeF1dKTtcclxuICAgIGlmIChhZGRCbG9ja1dhbGxzICYmIHRoaXMudmFsaWQoeSwgeCAtIDEpICYmICh0aGlzLm1hemVbeV1beCAtIDFdID09ICd3YWxsJykpIHRoaXMud2FsbHMucHVzaChbeSwgeCAtIDEsIFt5LCB4XV0pO1xyXG4gIH1cclxuXHJcbiAgX2ZpbGxNYXplKCkge1xyXG4gICAgbGV0IG1hemUgPSBbXTtcclxuICAgIGZvciAodmFyIHkgPSAwOyB5IDwgdGhpcy5oZWlnaHQ7IHkrKykge1xyXG4gICAgICBtYXplW3ldID0gW107XHJcbiAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgdGhpcy53aWR0aDsgbWF6ZVt5XVt4KytdID0gJ3dhbGwnKSB7XHJcbiAgICAgICAgbGV0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICB0aGlzLiRtYXplLmFwcGVuZENoaWxkKGVsKTtcclxuICAgICAgICBlbC5jbGFzc05hbWUgPSAnYmxvY2sgd2FsbCc7XHJcbiAgICAgICAgZWwuc2V0QXR0cmlidXRlKCdpZCcsIHkgKyAnLScgKyB4KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBtYXplO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHBvaW50cygpIHtcclxuICAgIHJldHVybiB0aGlzLl9wb2ludHM7XHJcbiAgfVxyXG5cclxuICBzZXQgcG9pbnRzKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9wb2ludHMgPSBwYXJzZUludCh2YWx1ZSkgfHwgMDtcclxuICAgIHRoaXMudGFibGUudXBkYXRlKHtcclxuICAgICAgXCJwb2ludHNcIjogdGhpcy5fcG9pbnRzXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgd2luKCkge1xyXG4gICAgd2luZG93Lm9ua2V5ZG93biA9IG51bGw7XHJcbiAgICB0aGlzLnRyaWdnZXIoXCJ3aW5cIik7XHJcbiAgfVxyXG4gIFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBbWVyaWNhR2FtZTtcclxuIiwiaW1wb3J0ICogYXMgcGxheWVyIGZyb20gXCIuLi8uLi9nYW1lL3BsYXllclwiO1xyXG5cclxuXHJcbmNsYXNzIEZhbGxlciBleHRlbmRzIHBsYXllci5Nb3ZlciB7XHJcbiAgY29uc3RydWN0b3IoZ2FtZSwgY29uZmlnKSB7XHJcbiAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNvbmZpZy5jbGFzc05hbWUpO1xyXG5cclxuICAgIHN1cGVyKGVsZW1lbnQsIHtcclxuICAgICAgc3BlZWQ6IHsgdXA6IDAsIGRvd246IGNvbmZpZy5zcGVlZCwgbGVmdDogMCwgcmlnaHQ6IDAgfSxcclxuXHJcbiAgICAgIGZpZWxkOiBnYW1lLmZpZWxkLFxyXG5cclxuICAgICAgZGlmZjogeyBib3R0b206IGNvbmZpZy5ib3R0b21PZmZzZXQgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5sZWZ0ID0gTWF0aC5yYW5kb20oKSAqIChnYW1lLmZpZWxkLm9mZnNldFdpZHRoIC0gdGhpcy5lbGVtZW50Lm9mZnNldFdpZHRoIC0gMTApICsgMTA7XHJcblxyXG4gICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKCgpID0+IHRoaXMudG9Eb3duKCksIDEwMCk7XHJcblxyXG4gICAgdGhpcy5vbignYm91bmRhcnknLCAoKSA9PiB0aGlzLnJlbW92ZSgpKVxyXG4gIH1cclxuXHJcbiAgY2FuTW92ZShkaXJlY3Rpb24pIHtcclxuICAgIGlmIChkaXJlY3Rpb24gIT09IFwiZG93blwiKSByZXR1cm4gZmFsc2U7XHJcbiAgICByZXR1cm4gc3VwZXIuY2FuTW92ZShkaXJlY3Rpb24pO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlKCkge1xyXG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTtcclxuICAgIHRoaXMuZWxlbWVudC5yZW1vdmUoKTtcclxuICAgIHRoaXMudHJpZ2dlcigncmVtb3ZlJyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGYWxsZXI7IiwiaW1wb3J0IHJhbmRvbSBmcm9tIFwiZ2V0LXJhbmRvbS1pbnRlZ2VyXCI7XHJcbmltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuXHJcbmNsYXNzIEZsb3cge1xyXG4gIGNvbnN0cnVjdG9yKGdhbWUsIGNvbmZpZykge1xyXG4gICAgbmV3IERpc3BhdGNoZXIodGhpcyk7XHJcblxyXG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRzID0ge307XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gY29uZmlnLmVsZW1lbnQ7XHJcbiAgICB0aGlzLm1pblRpbWVvdXQgPSBjb25maWcubWluVGltZW91dDtcclxuICAgIHRoaXMubWF4VGltZW91dCA9IGNvbmZpZy5tYXhUaW1lb3V0O1xyXG5cclxuICAgIHRoaXMudGltZXIgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgX2dlbmVyYXRlRWxlbWVudCgpIHtcclxuICAgIGxldCBmbG93RWxlbWVudCA9IG5ldyB0aGlzLmVsZW1lbnQodGhpcy5nYW1lKTtcclxuICAgIHRoaXMuZ2FtZS5maWVsZC5hcHBlbmRDaGlsZChmbG93RWxlbWVudC5lbGVtZW50KTtcclxuXHJcbiAgICBsZXQgd2F0Y2hlciA9IHRoaXMuZ2FtZS5pbnRlcnNlY3Rvci53YXRjaChmbG93RWxlbWVudC5lbGVtZW50LCB0aGlzLmdhbWUuaGVyby5lbGVtZW50KTtcclxuICAgIHRoaXMuZWxlbWVudHNbd2F0Y2hlcl0gPSBmbG93RWxlbWVudDtcclxuXHJcbiAgICBmbG93RWxlbWVudC5lbGVtZW50Lm9uKCdpbnRlcnNlY3Rvci5ldmVudHMuY29sbGlzaW9uJywgZGF0YSA9PiB7XHJcbiAgICAgIGZsb3dFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICB0aGlzLnRyaWdnZXIoJ2NvbGxpc2lvbicpO1xyXG4gICAgfSk7XHJcbiAgICBmbG93RWxlbWVudC5vbigncmVtb3ZlJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLmdhbWUuaW50ZXJzZWN0b3Iuc3RvcFdhdGNoZXIod2F0Y2hlcik7XHJcbiAgICAgIGRlbGV0ZSB0aGlzLmVsZW1lbnRzW3dhdGNoZXJdO1xyXG4gICAgfSk7XHJcblxyXG4gICAgZmxvd0VsZW1lbnQucGF1c2UgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB0aGlzLl9nZW5lcmF0ZUVsZW1lbnQoKSwgcmFuZG9tKHRoaXMubWluVGltZW91dCwgdGhpcy5tYXhUaW1lb3V0KSk7XHJcbiAgfVxyXG5cclxuICBzdGFydCgpIHtcclxuICAgIHRoaXMuX2dlbmVyYXRlRWxlbWVudCgpO1xyXG4gIH1cclxuXHJcbiAgc3RvcCgpIHtcclxuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcclxuICAgIGZvciAobGV0IHdhdGNoZXIgaW4gdGhpcy5lbGVtZW50cykgXHJcbiAgICAgIHRoaXMuZWxlbWVudHNbd2F0Y2hlcl0ucmVtb3ZlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGbG93OyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9wZW5ndWluLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vcGVuZ3Vpbi5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9wZW5ndWluLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBcIi4vcGVuZ3Vpbi5jc3NcIjtcclxuXHJcbmltcG9ydCBGYWxsZXIgZnJvbSBcIi4vZmFsbGVyXCI7XHJcblxyXG5jbGFzcyBQZW5ndWluIGV4dGVuZHMgRmFsbGVyIHtcclxuICBjb25zdHJ1Y3RvcihnYW1lKSB7XHJcbiAgICBzdXBlcihnYW1lLCB7XHJcbiAgICAgIGNsYXNzTmFtZTogJ3Blbmd1aW4nLFxyXG4gICAgICBzcGVlZDogMTUsXHJcbiAgICAgIGJvdHRvbU9mZnNldDogLTQwXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBlbmd1aW47IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL3Nub3dmbGFrZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL3Nub3dmbGFrZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9zbm93Zmxha2UuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFwiLi9zbm93Zmxha2UuY3NzXCI7XHJcblxyXG5pbXBvcnQgRmFsbGVyIGZyb20gXCIuL2ZhbGxlclwiO1xyXG5cclxuY2xhc3MgU25vd2ZsYWtlIGV4dGVuZHMgRmFsbGVyIHtcclxuICBjb25zdHJ1Y3RvcihnYW1lKSB7XHJcbiAgICBzdXBlcihnYW1lLCB7XHJcbiAgICAgIGNsYXNzTmFtZTogJ3Nub3dmbGFrZScsXHJcbiAgICAgIHNwZWVkOiAxMCxcclxuICAgICAgYm90dG9tT2Zmc2V0OiAtNDBcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU25vd2ZsYWtlOyIsIlxyXG5pbXBvcnQgKiBhcyBwbGF5ZXIgZnJvbSBcIi4uLy4uL2dhbWUvcGxheWVyXCI7XHJcblxyXG5jbGFzcyBIZXJvIGV4dGVuZHMgcGxheWVyLk1vdmVyIHtcclxuICBjb25zdHJ1Y3RvcihnYW1lKSB7XHJcbiAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZWxlbWVudC5pZCA9IFwicGxheWVyXCI7XHJcblxyXG4gICAgc3VwZXIoZWxlbWVudCwge1xyXG4gICAgICBzcGVlZDogeyB1cDogMCwgZG93bjogMCwgbGVmdDogNSwgcmlnaHQ6IDUgfSxcclxuXHJcbiAgICAgIGZpZWxkOiBnYW1lLmZpZWxkLmVsZW1lbnQsXHJcblxyXG4gICAgICBkaWZmOiB7IGxlZnQ6IDEwLCByaWdodDogMTAgfVxyXG4gICAgfSk7XHJcbiAgICBuZXcgcGxheWVyLktleWJvYXJkTW92ZXIodGhpcyk7XHJcbiAgfVxyXG5cclxuICBjYW5Nb3ZlKGRpcmVjdGlvbikge1xyXG4gICAgaWYgKGRpcmVjdGlvbiA9PT0gXCJ1cFwiIHx8IGRpcmVjdGlvbiA9PT0gXCJkb3duXCIpIHJldHVybiBmYWxzZTtcclxuICAgIHJldHVybiBzdXBlci5jYW5Nb3ZlKGRpcmVjdGlvbik7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIZXJvOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9pbmRleC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCAqIGFzIGdhbWUgZnJvbSBcIi4uL2dhbWVcIjtcclxuXHJcbmltcG9ydCBIZXJvIGZyb20gXCIuL2hlcm9cIjtcclxuaW1wb3J0IFNub3dmbGFrZSBmcm9tIFwiLi9mYWxsZXIvc25vd2ZsYWtlXCI7XHJcbmltcG9ydCBQZW5ndWluIGZyb20gXCIuL2ZhbGxlci9wZW5ndWluXCI7XHJcbmltcG9ydCBGbG93IGZyb20gXCIuL2ZhbGxlci9mbG93XCI7XHJcblxyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgRGlzcGF0Y2hlciBmcm9tIFwiZXZlbnRzLWRpc3BhdGNoXCI7XHJcblxyXG5cclxuY2xhc3MgQW50YXJjdGljYUdhbWUge1xyXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnQsIGNvbmZpZyA9IHt9KSB7XHJcbiAgICBuZXcgRGlzcGF0Y2hlcih0aGlzKTtcclxuXHJcbiAgICB0aGlzLnN0YXJ0TGl2ZXMgPSBjb25maWcubGl2ZXMgfHwgMztcclxuXHJcbiAgICB0aGlzLl9wb2ludHMgPSAwO1xyXG4gICAgdGhpcy5wb2ludHNUb1dpbiA9IDI7XHJcbiAgICB0aGlzLl9saXZlcyA9IHRoaXMuc3RhcnRMaXZlcztcclxuXHJcbiAgICB0aGlzLmludGVyc2VjdG9yID0gbmV3IGdhbWUuSW50ZXJzZWN0b3IoKTtcclxuXHJcbiAgICAvKiog0KLQsNCx0LvQuNGG0LAg0YDQtdC30YPQu9GM0YLQsNGC0L7QsiAqL1xyXG4gICAgdGhpcy50YWJsZSA9IGdhbWUuR2FtZVRhYmxlKHtcclxuICAgICAgXCJwb2ludHNcIjoge1xyXG4gICAgICAgIG5hbWU6IFwi0KHQvdC10LbQuNC90LrQuFwiLFxyXG4gICAgICAgIHZhbHVlOiAwXHJcbiAgICAgIH0sXHJcbiAgICAgIFwibGl2ZXNcIjoge1xyXG4gICAgICAgIG5hbWU6IFwi0JbQuNC30L3QuFwiLFxyXG4gICAgICAgIHZhbHVlOiB0aGlzLl9saXZlc1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKiog0JjQs9GA0L7QstC+0LUg0L/QvtC70LUgKi9cclxuICAgIHRoaXMuZmllbGQgPSBnYW1lLkdhbWVGaWVsZChlbGVtZW50LCB0aGlzLnRhYmxlLmVsZW1lbnQpO1xyXG5cclxuICAgIGxldCBncm91bmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGdyb3VuZC5jbGFzc0xpc3QuYWRkKCdncm91bmQnKTtcclxuICAgIHRoaXMuZmllbGQuYXBwZW5kQ2hpbGQoZ3JvdW5kKTtcclxuXHJcbiAgICAvKiog0JPQtdGA0L7QuSAqL1xyXG4gICAgdGhpcy5oZXJvID0gbmV3IEhlcm8odGhpcyk7XHJcbiAgICB0aGlzLmZpZWxkLmFwcGVuZENoaWxkKHRoaXMuaGVyby5lbGVtZW50KTtcclxuICAgIHRoaXMuaGVyby5sZWZ0ID0gdGhpcy5maWVsZC5vZmZzZXRXaWR0aCAvIDIgLSB0aGlzLmhlcm8uZWxlbWVudC5vZmZzZXRXaWR0aCAvIDI7XHJcblxyXG4gICAgdGhpcy5zbm93ZmFsbCA9IG5ldyBGbG93KHRoaXMsIHtcclxuICAgICAgZWxlbWVudDogU25vd2ZsYWtlLFxyXG4gICAgICBtaW5UaW1lb3V0OiA4MDAsXHJcbiAgICAgIG1heFRpbWVvdXQ6IDMxMDAsXHJcbiAgICB9KTtcclxuICAgIHRoaXMuc25vd2ZhbGwub24oJ2NvbGxpc2lvbicsICgpID0+IHtcclxuICAgICAgdGhpcy5wb2ludHMgPSB0aGlzLnBvaW50cyArIDE7XHJcbiAgICB9KVxyXG5cclxuICAgIHRoaXMucGVuZ3VpbnMgPSBuZXcgRmxvdyh0aGlzLCB7XHJcbiAgICAgIGVsZW1lbnQ6IFBlbmd1aW4sXHJcbiAgICAgIG1pblRpbWVvdXQ6IDcyMCxcclxuICAgICAgbWF4VGltZW91dDogMjcwMFxyXG4gICAgfSk7XHJcbiAgICB0aGlzLnBlbmd1aW5zLm9uKCdjb2xsaXNpb24nLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMubG9zZUxpZmUoKTtcclxuICAgIH0pXHJcblxyXG4gICAgdGhpcy5zdGFydCgpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHBvaW50cygpIHtcclxuICAgIHJldHVybiB0aGlzLl9wb2ludHM7XHJcbiAgfVxyXG5cclxuICBzZXQgcG9pbnRzKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9wb2ludHMgPSBwYXJzZUludCh2YWx1ZSkgfHwgMDtcclxuICAgIHRoaXMudGFibGUudXBkYXRlKHtcclxuICAgICAgXCJwb2ludHNcIjogdGhpcy5fcG9pbnRzXHJcbiAgICB9KTtcclxuICAgIGlmICh0aGlzLl9wb2ludHMgPj0gdGhpcy5wb2ludHNUb1dpbikge1xyXG4gICAgICB0aGlzLndpbigpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbG9zZUxpZmUoKSB7XHJcbiAgICB0aGlzLl9saXZlcyA9IHRoaXMuX2xpdmVzIC0gMTtcclxuICAgIHRoaXMuX2xpdmVzID0gTWF0aC5tYXgoMCwgdGhpcy5fbGl2ZXMpO1xyXG5cclxuICAgIHRoaXMudGFibGUudXBkYXRlKHtcclxuICAgICAgXCJsaXZlc1wiOiB0aGlzLl9saXZlc1xyXG4gICAgfSlcclxuXHJcbiAgICBpZiAodGhpcy5fbGl2ZXMgPT0gMCkgdGhpcy5sb3NlKCk7XHJcbiAgfVxyXG5cclxuICB3aW4oKSB7XHJcbiAgICB0aGlzLnRyaWdnZXIoXCJ3aW5cIik7XHJcbiAgfVxyXG5cclxuICBsb3NlKCkge1xyXG4gICAgdGhpcy5oZXJvLnBhdXNlID0gdHJ1ZTtcclxuICAgIHRoaXMuaGVyby5sZWZ0ID0gdGhpcy5maWVsZC5vZmZzZXRXaWR0aCAvIDIgLSB0aGlzLmhlcm8ub2Zmc2V0V2lkdGggLyAyO1xyXG4gICAgXHJcbiAgICB0aGlzLnNub3dmYWxsLnN0b3AoKTtcclxuICAgIHRoaXMucGVuZ3VpbnMuc3RvcCgpO1xyXG5cclxuICAgIHRoaXMuZmllbGQub25Mb3NlKCgpID0+IHRoaXMuc3RhcnQoKSk7XHJcblxyXG4gICAgdGhpcy5wb2ludHMgPSAwO1xyXG4gIH1cclxuXHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgdGhpcy5oZXJvLnBhdXNlID0gZmFsc2U7XHJcbiAgICB0aGlzLnNub3dmYWxsLnN0YXJ0KCk7XHJcbiAgICB0aGlzLnBlbmd1aW5zLnN0YXJ0KCk7XHJcblxyXG4gICAgdGhpcy5fbGl2ZXMgPSB0aGlzLnN0YXJ0TGl2ZXM7XHJcbiAgICB0aGlzLnRhYmxlLnVwZGF0ZSh7XHJcbiAgICAgIFwibGl2ZXNcIjogdGhpcy5fbGl2ZXNcclxuICAgIH0pXHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQW50YXJjdGljYUdhbWU7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0ICogYXMgZ2FtZSBmcm9tIFwiLi4vZ2FtZVwiO1xyXG5cclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IERpc3BhdGNoZXIgZnJvbSBcImV2ZW50cy1kaXNwYXRjaFwiO1xyXG5cclxuaW1wb3J0IFBsYXllciBmcm9tIFwiLi9wbGF5ZXJcIjtcclxuaW1wb3J0IFRyYWNrIGZyb20gXCIuL3RyYWNrXCI7XHJcbmltcG9ydCBUcmFmZmljIGZyb20gXCIuL3RyYWZmaWNcIjtcclxuXHJcbmNsYXNzIEFzaWFHYW1lIHtcclxuICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjb25maWcgPSB7fSkge1xyXG4gICAgbmV3IERpc3BhdGNoZXIodGhpcyk7XHJcblxyXG4gICAgdGhpcy5pbnRlcnNlY3RvciA9IG5ldyBnYW1lLkludGVyc2VjdG9yKCk7XHJcblxyXG4gICAgdGhpcy5fZGlzdGFuY2UgPSBjb25maWcuZGlzdGFuY2UgfHwgNDAwMDtcclxuICAgIHRoaXMuX2xpdmVzID0gMztcclxuXHJcbiAgICAvKiog0KLQsNCx0LvQuNGG0LAg0YDQtdC30YPQu9GM0YLQsNGC0L7QsiAqL1xyXG4gICAgdGhpcy50YWJsZSA9IGdhbWUuR2FtZVRhYmxlKHtcclxuICAgICAgXCJwb2ludHNcIjoge1xyXG4gICAgICAgIG5hbWU6IFwi0JTQviDRhtC10LvQuFwiLFxyXG4gICAgICAgIHZhbHVlOiB0aGlzLl9kaXN0YW5jZVxyXG4gICAgICB9LFxyXG4gICAgICBcImxpdmVzXCI6IHtcclxuICAgICAgICBuYW1lOiBcItCW0LjQt9C90LhcIixcclxuICAgICAgICB2YWx1ZTogdGhpcy5fbGl2ZXNcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLyoqINCY0LPRgNC+0LLQvtC1INC/0L7Qu9C1ICovXHJcbiAgICB0aGlzLmZpZWxkID0gZ2FtZS5HYW1lRmllbGQoZWxlbWVudCwgdGhpcy50YWJsZS5lbGVtZW50KTtcclxuXHJcbiAgICAvKiog0JPQtdGA0L7QuSAqL1xyXG4gICAgdGhpcy5oZXJvID0gbmV3IFBsYXllcih0aGlzKTtcclxuICAgIHRoaXMuZmllbGQuYXBwZW5kQ2hpbGQodGhpcy5oZXJvLmVsZW1lbnQpO1xyXG4gICAgdGhpcy5oZXJvLm9uKCdib3VuZGFyeScsIChib3VuZGFyeSkgPT4gdGhpcy5fb25IZXJvQm91bmRhcnkoYm91bmRhcnkpKTtcclxuXHJcbiAgXHJcbiAgICBUcmFjay5maW5pc2ggPSB0aGlzLl9kaXN0YW5jZTtcclxuICAgIHRoaXMudHJhY2sgPSBuZXcgVHJhY2sodGhpcyk7XHJcbiAgICB0aGlzLmZpZWxkLmFwcGVuZENoaWxkKHRoaXMudHJhY2suZWxlbWVudCk7XHJcbiAgICB0aGlzLnRyYWNrLmluaXQoKTtcclxuICAgIHRoaXMudHJhY2sub24oJ2NoZWNrLW1hcmsnLCBkYXRhID0+IHtcclxuICAgICAgdGhpcy5wb2ludHMgPSBkYXRhLmRpc3RhbmNlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgbGV0IGZpbmlzaCA9IHRoaXMudHJhY2suZmluaXNoO1xyXG4gICAgdGhpcy5pbnRlcnNlY3Rvci53YXRjaChmaW5pc2gsIHRoaXMuaGVyby5lbGVtZW50KTtcclxuICAgIGZpbmlzaC5vbignaW50ZXJzZWN0b3IuZXZlbnRzLmNvbGxpc2lvbicsIGRhdGEgPT4ge1xyXG4gICAgICB0aGlzLndpbigpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fc2V0SGVyb1N0YXJ0UG9zaXRpb24oKTtcclxuXHJcbiAgICB0aGlzLnRyYWZmaWMgPSBuZXcgVHJhZmZpYyh0aGlzLCB7XHJcblxyXG4gICAgfSk7XHJcbiAgICB0aGlzLnRyYWZmaWMub24oJ2FjY2lkZW50JywgKCkgPT4gdGhpcy5sb3NlTGlmZSgpKTtcclxuXHJcbiAgICB0aGlzLnN0YXJ0KCk7XHJcbiAgfVxyXG5cclxuICBnZXQgcG9pbnRzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3BvaW50cztcclxuICB9XHJcblxyXG4gIHNldCBwb2ludHModmFsdWUpIHtcclxuICAgIHRoaXMuX3BvaW50cyA9IHBhcnNlSW50KHZhbHVlKSB8fCAwO1xyXG4gICAgdGhpcy50YWJsZS51cGRhdGUoe1xyXG4gICAgICBcInBvaW50c1wiOiB0aGlzLl9wb2ludHNcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBnZXQgbGl2ZXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbGl2ZXM7XHJcbiAgfVxyXG5cclxuICBzZXQgbGl2ZXModmFsdWUpIHtcclxuICAgIHRoaXMuX2xpdmVzID0gcGFyc2VJbnQodmFsdWUpIHx8IDA7XHJcbiAgICB0aGlzLl9saXZlcyA9IE1hdGgubWF4KHRoaXMuX2xpdmVzLCAwKTtcclxuICAgIHRoaXMudGFibGUudXBkYXRlKHtcclxuICAgICAgXCJsaXZlc1wiOiB0aGlzLl9saXZlc1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKHRoaXMuX2xpdmVzID09PSAwKSB0aGlzLmxvc2UoKTtcclxuICB9XHJcblxyXG4gIHdpbigpIHtcclxuICAgIHRoaXMudHJpZ2dlcihcIndpblwiLCB0aGlzLmxpdmVzICogMTAwKTtcclxuICB9XHJcblxyXG4gIGxvc2UoKSB7XHJcbiAgICB0aGlzLmhlcm8ucGF1c2UgPSB0cnVlO1xyXG4gICAgXHJcbiAgICB0aGlzLnRyYWNrLnJlc2V0KCk7XHJcbiAgICB0aGlzLnRyYWZmaWMuc3RvcCgpO1xyXG4gICAgdGhpcy5fc2V0SGVyb1N0YXJ0UG9zaXRpb24oKTtcclxuICAgIFxyXG4gICAgdGhpcy5wb2ludHMgPSB0aGlzLl9kaXN0YW5jZTtcclxuICAgIHRoaXMubGl2ZXMgPSAzO1xyXG5cclxuICAgIHRoaXMuZmllbGQub25Mb3NlKCgpID0+IHRoaXMuc3RhcnQoKSk7XHJcbiAgfVxyXG5cclxuICBsb3NlTGlmZSgpIHtcclxuICAgIHRoaXMubGl2ZXMgPSB0aGlzLmxpdmVzIC0gMTtcclxuICB9XHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgdGhpcy5oZXJvLnBhdXNlID0gZmFsc2U7XHJcblxyXG4gICAgdGhpcy50cmFjay5zdGFydCgpO1xyXG4gICAgdGhpcy50cmFmZmljLnN0YXJ0KCk7XHJcbiAgfVxyXG5cclxuICBfc2V0SGVyb1N0YXJ0UG9zaXRpb24oKSB7XHJcbiAgICB0aGlzLmhlcm8ubGVmdCA9IHRoaXMuZmllbGQub2Zmc2V0V2lkdGggLyAyIC0gdGhpcy5oZXJvLmVsZW1lbnQub2Zmc2V0V2lkdGggLyAyO1xyXG4gICAgdGhpcy5oZXJvLnRvcCA9IHRoaXMuZmllbGQub2Zmc2V0SGVpZ2h0ICsgdGhpcy50cmFjay5zdGFydE9mZnNldCAtIHRoaXMuaGVyby5lbGVtZW50Lm9mZnNldEhlaWdodCAvIDI7XHJcbiAgfVxyXG5cclxuICBfb25IZXJvQm91bmRhcnkoYm91bmRhcnkpIHtcclxuICAgIGlmIChib3VuZGFyeSAhPT0gXCJ1cFwiICYmIGJvdW5kYXJ5ICE9PSBcImRvd25cIikgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMudHJhY2subW92ZShib3VuZGFyeSwgdGhpcy5oZXJvKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFzaWFHYW1lO1xyXG4iLCJpbXBvcnQgKiBhcyBwbGF5ZXIgZnJvbSBcIi4uLy4uL2dhbWUvcGxheWVyXCI7XHJcblxyXG5jbGFzcyBQbGF5ZXIgZXh0ZW5kcyBwbGF5ZXIuTW92ZXIge1xyXG4gIGNvbnN0cnVjdG9yKGdhbWUpIHtcclxuICAgIGxldCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBlbGVtZW50LmlkID0gXCJoZXJvXCI7XHJcblxyXG4gICAgc3VwZXIoZWxlbWVudCwge1xyXG4gICAgICBzcGVlZDogeyB1cDogNywgZG93bjogNywgbGVmdDogNiwgcmlnaHQ6IDYgfSxcclxuXHJcbiAgICAgIGZpZWxkOiBnYW1lLmZpZWxkLFxyXG5cclxuICAgICAgZGlmZjogeyBsZWZ0OiAwLCByaWdodDogMCwgdG9wOiAxMjAsIGJvdHRvbTogMTUwIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuanVtcFRpbWVyO1xyXG4gICAgdGhpcy5qdW1wSGVpZ2h0ID0gMTQwO1xyXG5cclxuICAgIHRoaXMuZ2FtZSA9IGdhbWU7XHJcbiAgICBuZXcgcGxheWVyLktleWJvYXJkTW92ZXIodGhpcywgMTApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGxheWVyOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9pbmRleC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuXHJcbmNsYXNzIFRyYWNrIHtcclxuICBjb25zdHJ1Y3RvcihnYW1lKSB7XHJcbiAgICBuZXcgRGlzcGF0Y2hlcih0aGlzKTtcclxuXHJcbiAgICB0aGlzLmdhbWUgPSBnYW1lO1xyXG4gICAgdGhpcy5lbGVtZW50ID0gdGhpcy5yZW5kZXIoKTtcclxuICAgIHRoaXMucGF1c2UgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGZpbmlzaCgpIHtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmZpbmlzaCcpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHN0YXJ0T2Zmc2V0KCkge1xyXG4gICAgcmV0dXJuIC0xICogVHJhY2suc3RlcDtcclxuICB9XHJcblxyXG4gIGdldCBib3R0b20oKSB7XHJcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5lbGVtZW50LnN0eWxlLmJvdHRvbSkgfHwgMDtcclxuICB9XHJcblxyXG4gIHNldCBib3R0b20odmFsdWUpIHtcclxuICAgIHRoaXMuZWxlbWVudC5zdHlsZS5ib3R0b20gPSBOdW1iZXIodmFsdWUpICsgJ3B4JztcclxuICB9XHJcblxyXG4gIGluaXQoKSB7XHJcbiAgICB0aGlzLmluaXRpYWxCb3R0b20gPSB0aGlzLmJvdHRvbTtcclxuICAgIHRoaXMubWluQm90dG9tID0gLTEgKiAodGhpcy5lbGVtZW50Lm9mZnNldEhlaWdodCAtIHRoaXMuZ2FtZS5maWVsZC5vZmZzZXRIZWlnaHQpO1xyXG4gIH1cclxuXHJcbiAgc3RhcnQoKSB7XHJcbiAgICB0aGlzLl9zZXRQb3NpdGlvbigpO1xyXG5cclxuICAgIHRoaXMucGF1c2UgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIF9zZXRQb3NpdGlvbigpIHtcclxuICAgIHRoaXMuYm90dG9tID0gdGhpcy5pbml0aWFsQm90dG9tO1xyXG4gIH1cclxuXHJcblxyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5fc2V0UG9zaXRpb24oKTtcclxuXHJcbiAgICB0aGlzLnBhdXNlID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIGxldCB0cmFjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdHJhY2suaWQgPSAndHJhY2snO1xyXG5cclxuICAgIHRyYWNrLnN0eWxlLmhlaWdodCA9IFRyYWNrLmZpbmlzaCArIFRyYWNrLnN0ZXAgKiAyICsgJ3B4JztcclxuXHJcbiAgICBsZXQgZmluaXNoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBmaW5pc2guY2xhc3NOYW1lID0gJ2ZpbmlzaCc7XHJcbiAgICBmaW5pc2guc3R5bGUudG9wID0gVHJhY2suc3RlcCArICdweCc7XHJcbiAgICB0cmFjay5hcHBlbmRDaGlsZChmaW5pc2gpO1xyXG5cclxuICAgIGxldCBjb3VudGVyID0gMTtcclxuICAgIGxldCBzaWduVmFsdWUgPSBUcmFjay5zdGVwICogY291bnRlcjtcclxuXHJcbiAgICB3aGlsZSAoc2lnblZhbHVlIDw9IFRyYWNrLmZpbmlzaCkge1xyXG4gICAgICBsZXQgc2lnblBvc2l0aW9uID0gc2lnblZhbHVlICsgVHJhY2suc3RlcCArICdweCc7XHJcbiAgICAgIGxldCBzaWduRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICBzaWduRWxlbWVudC5jbGFzc05hbWUgPSBgc2lnbmA7XHJcbiAgICAgIHNpZ25FbGVtZW50LnRleHRDb250ZW50ID0gc2lnblZhbHVlIC8gMTAwMCArICdrbSc7XHJcbiAgICAgIHNpZ25FbGVtZW50LnN0eWxlLnRvcCA9IHNpZ25Qb3NpdGlvbjtcclxuICAgICAgc2lnbkVsZW1lbnQudmFsdWUgPSBzaWduVmFsdWU7XHJcbiAgICAgIHRyYWNrLmFwcGVuZENoaWxkKHNpZ25FbGVtZW50KTtcclxuXHJcbiAgICAgIHRoaXMuZ2FtZS5pbnRlcnNlY3Rvci53YXRjaChzaWduRWxlbWVudCwgdGhpcy5nYW1lLmhlcm8uZWxlbWVudCk7XHJcblxyXG4gICAgICBzaWduRWxlbWVudC5vbignaW50ZXJzZWN0b3IuZXZlbnRzLmNvbGxpc2lvbicsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9vbkNoZWNrTWFyayhzaWduRWxlbWVudC52YWx1ZSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgY291bnRlcisrO1xyXG4gICAgICBzaWduVmFsdWUgPSBUcmFjay5zdGVwICogY291bnRlcjtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdHJhY2s7XHJcbiAgfVxyXG5cclxuICBfb25DaGVja01hcmsobWFya1ZhbHVlKSB7XHJcbiAgICBpZiAodGhpcy5wYXVzZSkgcmV0dXJuO1xyXG5cclxuICAgIHRoaXMudHJpZ2dlcignY2hlY2stbWFyaycsIHsgZGlzdGFuY2U6IG1hcmtWYWx1ZSB9KTtcclxuICB9XHJcblxyXG4gIG1vdmUoZGlyZWN0aW9uLCBoZXJvKSB7XHJcbiAgICBpZiAodGhpcy5wYXVzZSkgcmV0dXJuO1xyXG5cclxuICAgIGxldCBuZXdQb3NpdGlvbjtcclxuICAgIGlmIChkaXJlY3Rpb24gPT09IFwidXBcIikge1xyXG4gICAgICBuZXdQb3NpdGlvbiA9IHRoaXMuYm90dG9tIC0gaGVyby5zcGVlZC51cCAvIDI7XHJcbiAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gXCJkb3duXCIpIHtcclxuICAgICAgbmV3UG9zaXRpb24gPSB0aGlzLmJvdHRvbSArIGhlcm8uc3BlZWQudXAgLyAyO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZiAobmV3UG9zaXRpb24gPiB0aGlzLmluaXRpYWxCb3R0b20pIHJldHVybjtcclxuICAgIGlmIChuZXdQb3NpdGlvbiA8IHRoaXMubWluQm90dG9tKSByZXR1cm47XHJcblxyXG4gICAgdGhpcy5ib3R0b20gPSBuZXdQb3NpdGlvbjtcclxuICB9XHJcblxyXG4gIGFkZENhcihjYXIpIHtcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChjYXIuZWxlbWVudCk7XHJcbiAgfVxyXG59XHJcblxyXG5UcmFjay5maW5pc2ggPSAyMDAwO1xyXG5UcmFjay5zdGVwID0gMjUwO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVHJhY2s7IiwiaW1wb3J0IGdldFJhbmRvbSBmcm9tIFwiZ2V0LXJhbmRvbS1pbnRlZ2VyXCI7XHJcblxyXG5cclxuY2xhc3MgQ2FyIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5zcGVlZCA9IENhci5nZXRSYW5kb21TcGVlZCgpO1xyXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTmFtZSA9IGBjYXIgY2FyLSR7Q2FyLmdldFJhbmRvbUNvbG9yKCl9YDtcclxuICB9XHJcblxyXG4gIHNldCBsZWZ0KHZhbHVlKSB7XHJcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCA9IE51bWJlcih2YWx1ZSkgKyAncHgnO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGJvdHRvbSgpIHtcclxuICAgIHJldHVybiBwYXJzZUZsb2F0KHRoaXMuZWxlbWVudC5zdHlsZS5ib3R0b20pIHx8IDA7XHJcbiAgfVxyXG5cclxuICBzZXQgYm90dG9tKHZhbHVlKSB7XHJcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUuYm90dG9tID0gTnVtYmVyKHZhbHVlKSArICdweCc7XHJcbiAgfVxyXG5cclxuICByZW1vdmUoKSB7XHJcbiAgICB0aGlzLnJlbW92ZWQgPSB0cnVlO1xyXG4gICAgdGhpcy5lbGVtZW50LnJlbW92ZSgpO1xyXG4gIH1cclxufVxyXG5cclxuQ2FyLmhlaWdodCA9IDUwO1xyXG5DYXIudmFyaWFudHMgPSA0O1xyXG5DYXIubWluU3BlZWQgPSAwLjU7XHJcbkNhci5tYXhTcGVlZCA9IDAuNTtcclxuXHJcbkNhci5nZXRSYW5kb21TcGVlZCA9ICgpID0+IE1hdGgucmFuZG9tKCkgKiAoQ2FyLm1heFNwZWVkIC0gQ2FyLm1pblNwZWVkKSArIENhci5taW5TcGVlZDtcclxuQ2FyLmdldFJhbmRvbUNvbG9yID0gKCkgPT4gZ2V0UmFuZG9tKDAsIENhci52YXJpYW50cyk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXI7IiwiaW1wb3J0IENhciBmcm9tIFwiLi9jYXJcIjtcclxuaW1wb3J0IGdldFJhbmRvbSBmcm9tIFwiZ2V0LXJhbmRvbS1pbnRlZ2VyXCI7XHJcbmltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuXHJcbmNsYXNzIFRyYWZmaWMge1xyXG4gIGNvbnN0cnVjdG9yKGdhbWUsIGNvbmZpZykge1xyXG4gICAgbmV3IERpc3BhdGNoZXIodGhpcyk7XHJcblxyXG4gICAgdGhpcy5jb25maWcgPSBPYmplY3QuYXNzaWduKHtcclxuICAgICAgbWluRGVsYXk6IDExMDAsXHJcbiAgICAgIG1heERlbGF5OiAyNTAwLFxyXG4gICAgICBtYXhDYXJzOiA3LFxyXG4gICAgICBtaW5DYXJTcGVlZDogMC42LFxyXG4gICAgICBtYXhDYXJTcGVlZDogMS42XHJcbiAgICB9LCBjb25maWcpO1xyXG5cclxuICAgIENhci5tYXhTcGVlZCA9IHRoaXMuY29uZmlnLm1heENhclNwZWVkO1xyXG4gICAgQ2FyLm1pblNwZWVkID0gdGhpcy5jb25maWcubWluQ2FyU3BlZWQ7XHJcbiAgICBcclxuICAgIHRoaXMuZ2FtZSA9IGdhbWU7XHJcblxyXG4gICAgdGhpcy50cmFjayA9IHRoaXMuZ2FtZS50cmFjaztcclxuICAgIHRoaXMud2lkdGggPSB0aGlzLnRyYWNrLmVsZW1lbnQub2Zmc2V0V2lkdGg7XHJcbiAgICB0aGlzLmludGVyc2VjdG9yID0gdGhpcy5nYW1lLmludGVyc2VjdG9yO1xyXG5cclxuICAgIHRoaXMuY2FycyA9IFtdO1xyXG4gICAgdGhpcy5mbG93VGltZXI7XHJcbiAgICB0aGlzLmdlbmVyYXRpb25UaW1lcjtcclxuICB9XHJcblxyXG4gIGdldCBzdGFydEJvdHRvbVBvc2l0aW9uKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZ2FtZS5maWVsZC5vZmZzZXRIZWlnaHQgLSB0aGlzLnRyYWNrLmJvdHRvbSArIENhci5oZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBnZXQgZmluaXNoQm90dG9tUG9zaXRpb24oKSB7XHJcbiAgICByZXR1cm4gLTIgKiBDYXIuaGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgZ2V0IHN0YXJ0TGVmdFBvc2l0aW9uKCkge1xyXG4gICAgcmV0dXJuIGdldFJhbmRvbSgyMCwgdGhpcy53aWR0aCAtIDQwKTtcclxuICB9XHJcblxyXG4gIGdldCBkZWxheSgpIHtcclxuICAgIHJldHVybiBnZXRSYW5kb20odGhpcy5jb25maWcubWluRGVsYXksIHRoaXMuY29uZmlnLm1heERlbGF5KTtcclxuICB9XHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgdGhpcy5zdGFydEZsb3coKTtcclxuICAgIHRoaXMuc3RhcnRNb3ZpbmcoKTtcclxuICB9XHJcblxyXG4gIHN0b3AoKSB7XHJcbiAgICBjbGVhckludGVydmFsKHRoaXMuZmxvd1RpbWVyKTtcclxuICAgIGNsZWFyVGltZW91dCh0aGlzLmdlbmVyYXRpb25UaW1lcik7XHJcblxyXG4gICAgdGhpcy5jYXJzLmZvckVhY2goY2FyID0+IHtcclxuICAgICAgdGhpcy5nYW1lLmludGVyc2VjdG9yLnN0b3BXYXRjaGVyKGNhci53YXRjaGVyKTtcclxuICAgICAgY2FyLnJlbW92ZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5jYXJzLmxlbmd0aCA9IDA7XHJcbiAgfVxyXG5cclxuICBzdGFydE1vdmluZygpIHtcclxuICAgIHRoaXMuZmxvd1RpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICBcclxuICAgICAgdGhpcy5jYXJzID0gdGhpcy5jYXJzLmZpbHRlcihjYXIgPT4gIWNhci5yZW1vdmVkKTtcclxuXHJcbiAgICAgIHRoaXMuY2Fycy5mb3JFYWNoKGNhciA9PiB7XHJcbiAgICAgICAgICBsZXQgbmV3UG9zaXRpb24gPSBjYXIuYm90dG9tIC0gY2FyLnNwZWVkO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBpZiAobmV3UG9zaXRpb24gPCB0aGlzLmZpbmlzaEJvdHRvbVBvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjYXIucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5pbnRlcnNlY3Rvci5zdG9wV2F0Y2hlcihjYXIud2F0Y2hlcik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNhci5ib3R0b20gPSBuZXdQb3NpdGlvbjtcclxuICAgICAgICB9KVxyXG4gICAgfSwgMClcclxuICB9XHJcblxyXG4gIHN0YXJ0RmxvdygpIHtcclxuICAgIGxldCBpdGVyYXRpb24gPSAoKSA9PiB7XHJcbiAgICAgIGxldCBkZWxheSA9IDEwMDtcclxuICAgICAgaWYgKHRoaXMuY2Fycy5sZW5ndGggPCB0aGlzLmNvbmZpZy5tYXhDYXJzKSB7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVDYXIoKTtcclxuICAgICAgICBkZWxheSA9IHRoaXMuZGVsYXk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5nZW5lcmF0aW9uVGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IGl0ZXJhdGlvbigpLCBkZWxheSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGl0ZXJhdGlvbigpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlQ2FyKCkge1xyXG4gICAgbGV0IGNhciA9IG5ldyBDYXIoKTtcclxuICAgIHRoaXMuY2Fycy5wdXNoKGNhcik7XHJcbiAgICBjYXIuYm90dG9tID0gdGhpcy5zdGFydEJvdHRvbVBvc2l0aW9uO1xyXG4gICAgY2FyLmxlZnQgPSB0aGlzLnN0YXJ0TGVmdFBvc2l0aW9uO1xyXG4gICAgdGhpcy50cmFjay5hZGRDYXIoY2FyKTtcclxuXHJcbiAgICBsZXQgd2F0Y2hlciA9IHRoaXMuZ2FtZS5pbnRlcnNlY3Rvci53YXRjaChjYXIuZWxlbWVudCwgdGhpcy5nYW1lLmhlcm8uZWxlbWVudCk7XHJcbiAgICBjYXIud2F0Y2hlciA9IHdhdGNoZXI7XHJcblxyXG4gICAgY2FyLmVsZW1lbnQub24oJ2ludGVyc2VjdG9yLmV2ZW50cy5jb2xsaXNpb24nLCAoKSA9PiB0aGlzLl9vbkNvbGxpc2lvbihjYXIpKTtcclxuICB9XHJcblxyXG4gIF9vbkNvbGxpc2lvbihjYXIpIHtcclxuICAgIGNhci5yZW1vdmUoKTtcclxuICAgIHRoaXMudHJpZ2dlcignYWNjaWRlbnQnKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRyYWZmaWM7IiwiaW1wb3J0IEVuZW15IGZyb20gXCIuL2VuZW15XCI7XHJcblxyXG5jb25zdCBhdHRhY2tzID0gW1xyXG4gIHtcclxuICAgICAgZGVsYXk6IDMwMDAsXHJcbiAgICAgIHNwZWVkOiAwLjEsXHJcbiAgICAgIGludGVydmFsOiA1MDAwLFxyXG4gICAgICBjb3VudDogM1xyXG4gIH0se1xyXG4gICAgZGVsYXk6IDMwMDAsXHJcbiAgICBzcGVlZDogMC4yLFxyXG4gICAgaW50ZXJ2YWw6IDUwMDAsXHJcbiAgICBjb3VudDogM1xyXG4gIH0se1xyXG4gICAgZGVsYXk6IDMwMDAsXHJcbiAgICBzcGVlZDogMC40LFxyXG4gICAgaW50ZXJ2YWw6IDUwMDAsXHJcbiAgICBjb3VudDogM1xyXG4gIH1cclxuXTtcclxuXHJcbmNsYXNzIEF0dGFja0NvbnRyb2xsZXIge1xyXG4gIGNvbnN0cnVjdG9yKGdhbWUpIHtcclxuICAgIHRoaXMuZ2FtZSA9IGdhbWU7XHJcbiAgICB0aGlzLmluZGV4ID0gLTE7XHJcbiAgICB0aGlzLnRpbWVyO1xyXG4gICAgdGhpcy5wYXVzZSA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBnZXQgY291bnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fY291bnQgfHwgMDtcclxuICB9XHJcblxyXG4gIHNldCBjb3VudCh2YWx1ZSkge1xyXG4gICAgdGhpcy5fY291bnQgPSB2YWx1ZTtcclxuICB9XHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgdGhpcy5wYXVzZSA9IGZhbHNlO1xyXG4gICAgdGhpcy5zdGFydEF0dGFja1RpbWVyKCk7XHJcbiAgfVxyXG5cclxuICBzdGFydEF0dGFja1RpbWVyKCkge1xyXG4gICAgdGhpcy5pbmRleCsrO1xyXG4gICAgbGV0IGF0dGFjayA9IGF0dGFja3NbdGhpcy5pbmRleF07XHJcbiAgICBpZiAoIWF0dGFjaykge1xyXG4gICAgICB0aGlzLmdhbWUudHJpZ2dlcignZmluaXNoQXR0YWNrcycpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIHRoaXMuZ2FtZS5hdHRhY2tlZCA9IHRydWU7XHJcbiAgICAgIHRoaXMuc3RhcnRBdHRhY2soKTtcclxuICAgIH0sIGF0dGFjay5kZWxheSk7XHJcbiAgfVxyXG5cclxuICBzdG9wKCkge1xyXG4gICAgdGhpcy5wYXVzZSA9IHRydWU7XHJcbiAgICB0aGlzLmdhbWUuYXR0YWNrZWQgPSBmYWxzZTtcclxuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcclxuICB9XHJcblxyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5zdG9wKCk7XHJcbiAgICB0aGlzLmluZGV4ID0gMDtcclxuICB9XHJcblxyXG4gIHN0YXJ0QXR0YWNrKCkge1xyXG4gICAgdGhpcy5nYW1lLnRyaWdnZXIoJ3N0YXJ0QXR0YWNrJyk7XHJcbiAgICBsZXQgYXR0YWNrID0gYXR0YWNrc1t0aGlzLmluZGV4XTtcclxuICAgIFxyXG4gICAgbGV0IGNvdW50ID0gMDtcclxuXHJcbiAgICBsZXQgYXR0YWNrSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgIGlmICh0aGlzLnBhdXNlKSB7XHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbChhdHRhY2tJbnRlcnZhbCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoY291bnQgPj0gYXR0YWNrLmNvdW50KSB7XHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbChhdHRhY2tJbnRlcnZhbCk7XHJcbiAgICAgICAgdGhpcy5nYW1lLnRyaWdnZXIoJ2ZpbmlzaEF0dGFjaycpO1xyXG4gICAgICAgIHRoaXMuc3RhcnRBdHRhY2tUaW1lcigpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgbGV0IGxpbmVJbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDMpO1xyXG4gICAgICBsZXQgbGluZSA9IHRoaXMuZ2FtZS5saW5lc1tsaW5lSW5kZXhdO1xyXG5cclxuICAgICAgbGV0IGVuZW15ID0gbmV3IEVuZW15KCk7XHJcblxyXG4gICAgICBjb3VudCsrO1xyXG5cclxuICAgICAgZW5lbXkucmlnaHQgPSAtMTIwO1xyXG4gICAgICBlbmVteS5lbC5zdHlsZS5yaWdodCA9IGVuZW15LnJpZ2h0ICsgJ3B4JztcclxuICAgICAgbGluZS5lbGVtZW50LmFwcGVuZENoaWxkKGVuZW15LmVsKTtcclxuICAgICAgbGluZS5lbmVtaWVzLnB1c2goZW5lbXkpO1xyXG5cclxuICAgICAgbGV0IGVuZW15SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKGVuZW15LnJlbW92ZWQgfHwgZW5lbXkucmlnaHQgPj0gNjAwKSB7XHJcbiAgICAgICAgICBjbGVhckludGVydmFsKGVuZW15SW50ZXJ2YWwpO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGVuZW15LnJpZ2h0ICs9IGF0dGFjay5zcGVlZDtcclxuICAgICAgICAgIGVuZW15LmVsLnN0eWxlLnJpZ2h0ID0gZW5lbXkucmlnaHQgKyAncHgnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgfSwgMTApO1xyXG5cclxuICAgIH0sIGF0dGFjay5pbnRlcnZhbCk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXR0YWNrQ29udHJvbGxlcjsiLCJjbGFzcyBFbmVteSB7XHJcbiAgY29uc3RydWN0b3IobGlmZXMpIHtcclxuICAgIHRoaXMuZWwgPSB0aGlzLnJlbmRlcigpO1xyXG4gICAgdGhpcy5saWZlcyA9IDQ7XHJcbiAgfVxyXG5cclxuICBnZXQgbGlmZXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbGlmZXM7XHJcbiAgfVxyXG5cclxuICBzZXQgbGlmZXModmFsdWUpIHtcclxuICAgIGxldCBvbGRMaWZlcyA9IHRoaXMubGlmZXM7XHJcblxyXG4gICAgdGhpcy5fbGlmZXMgPSB2YWx1ZTtcclxuICAgIHRoaXMuZWwuc2V0QXR0cmlidXRlKCdkYXRhLWxpZmVzJywgdmFsdWUpO1xyXG5cclxuICAgIGlmICh0aGlzLl9saWZlcyA8IG9sZExpZmVzKSB7XHJcbiAgICAgIHRoaXMuZWwuY2xhc3NMaXN0LmFkZCgnc2hvdCcpO1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdCcpLCAxNTApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgbGV0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBlbC5jbGFzc0xpc3QuYWRkKCdlbmVteScpO1xyXG4gICAgcmV0dXJuIGVsO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlKCkge1xyXG4gICAgdGhpcy5lbC5yZW1vdmUoKTtcclxuICB9XHJcblxyXG4gIGtpbGwoKSB7XHJcbiAgICB0aGlzLnJlbW92ZWQgPSB0cnVlO1xyXG4gICAgdGhpcy5yZW1vdmUoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEVuZW15OyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi9pbmRleC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImltcG9ydCBMaW5lIGZyb20gXCIuL2xpbmVcIjtcclxuaW1wb3J0IEJvYXJkIGZyb20gXCIuL3BsYW50L2JvYXJkXCI7XHJcbmltcG9ydCBTZXRDb250cm9sbGVyIGZyb20gXCIuL3NldC1jb250cm9sbGVyXCI7XHJcbmltcG9ydCBBdHRhY2tDb250cm9sbGVyIGZyb20gXCIuL2F0dGFjay1jb250cm9sbGVyXCI7XHJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcbmltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuaW1wb3J0ICogYXMgZ2FtZSBmcm9tIFwiLi4vZ2FtZVwiO1xyXG5cclxuXHJcbmNsYXNzIEF1c3RyYWxpYUdhbWUge1xyXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnQsIGNvbmZpZyA9IHt9KSB7XHJcbiAgICBuZXcgRGlzcGF0Y2hlcih0aGlzKTtcclxuXHJcbiAgICB0aGlzLl9zdGFydE1vbmV5ID0gY29uZmlnLm1vbmV5IHx8IDgwMDtcclxuICAgIHRoaXMuX21vbmV5ID0gMDtcclxuXHJcbiAgICAvKiog0KLQsNCx0LvQuNGG0LAg0YDQtdC30YPQu9GM0YLQsNGC0L7QsiAqL1xyXG4gICAgdGhpcy50YWJsZSA9IGdhbWUuR2FtZVRhYmxlKHtcclxuICAgICAgXCJtb25leVwiOiB7XHJcbiAgICAgICAgbmFtZTogXCLQlNC10L3RjNCz0LhcIixcclxuICAgICAgICB2YWx1ZTogMFxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvKiog0JjQs9GA0L7QstC+0LUg0L/QvtC70LUgKi9cclxuICAgIHRoaXMuZmllbGQgPSBnYW1lLkdhbWVGaWVsZChlbGVtZW50LCB0aGlzLnRhYmxlLmVsZW1lbnQpO1xyXG5cclxuICAgIHRoaXMubGluZXMgPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7XHJcbiAgICAgIGxldCBsaW5lID0gbmV3IExpbmUodGhpcywge1xyXG4gICAgICAgIGluZGV4OiBpXHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLmZpZWxkLmFwcGVuZENoaWxkKGxpbmUuZWxlbWVudCk7XHJcbiAgICAgIHRoaXMubGluZXMucHVzaChsaW5lKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnBsYW50c0JvYXJkID0gbmV3IEJvYXJkKHRoaXMpO1xyXG4gICAgdGhpcy5maWVsZC5hcHBlbmRDaGlsZCh0aGlzLnBsYW50c0JvYXJkLmVsZW1lbnQpO1xyXG5cclxuICAgIHRoaXMuc2V0Q29udHJvbGxlciA9IG5ldyBTZXRDb250cm9sbGVyKHRoaXMpO1xyXG4gICAgdGhpcy5hdHRhY2tDb250cm9sbGVyID0gbmV3IEF0dGFja0NvbnRyb2xsZXIodGhpcyk7XHJcblxyXG4gICAgdGhpcy5vbignZmluaXNoQXR0YWNrcycsICgpID0+IHtcclxuICAgICAgaWYgKCF0aGlzLl9oYXNFbmVtaWVzKCkpIHtcclxuICAgICAgICB0aGlzLndpbigpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLm1vbml0b3JlZCA9IHRydWU7XHJcbiAgICB9KTtcclxuICAgIHRoaXMub24oJ2tpbGxFbmVteScsICgpID0+IHtcclxuICAgICAgaWYgKHRoaXMubW9uaXRvcmVkKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9oYXNFbmVtaWVzKCkpIHtcclxuICAgICAgICAgIHRoaXMud2luKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnN0YXJ0KCk7XHJcbiAgfVxyXG5cclxuICBnZXQgbW9uZXkoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbW9uZXkgfHwgMDtcclxuICB9XHJcblxyXG4gIHNldCBtb25leSh2YWx1ZSkge1xyXG4gICAgdGhpcy5fbW9uZXkgPSB2YWx1ZTtcclxuICAgIHRoaXMudGFibGUudXBkYXRlKHtcclxuICAgICAgXCJtb25leVwiOiB0aGlzLl9tb25leVxyXG4gICAgfSlcclxuICB9XHJcbiAgXHJcbiAgZ2V0IGF0dGFja2VkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2F0dGFja2VkO1xyXG4gIH1cclxuXHJcbiAgc2V0IGF0dGFja2VkKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9hdHRhY2tlZCA9IEJvb2xlYW4odmFsdWUpO1xyXG4gICAgdGhpcy5saW5lcy5mb3JFYWNoKGxpbmUgPT4ge1xyXG4gICAgICBsaW5lLmF0dGFja2VkID0gdGhpcy5fYXR0YWNrZWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF9oYXNFbmVtaWVzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMubGluZXMuc29tZShsaW5lID0+IGxpbmUuZW5lbWllcy5sZW5ndGggPiAwKTtcclxuICB9XHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgdGhpcy5tb25leSA9IHRoaXMuX3N0YXJ0TW9uZXk7XHJcbiAgICB0aGlzLnNldENvbnRyb2xsZXIuc3RhcnQoKTtcclxuICAgIHRoaXMuYXR0YWNrQ29udHJvbGxlci5zdGFydCgpO1xyXG4gIH1cclxuXHJcbiAgd2luKCkge1xyXG4gICAgdGhpcy50cmlnZ2VyKFwid2luXCIpO1xyXG4gIH1cclxuXHJcbiAgbG9zZSgpIHtcclxuICAgIHRoaXMubW9uaXRvcmVkID0gZmFsc2U7XHJcbiAgICB0aGlzLnNldENvbnRyb2xsZXIucmVzZXQoKTtcclxuICAgIHRoaXMuYXR0YWNrQ29udHJvbGxlci5yZXNldCgpO1xyXG4gICAgdGhpcy50YWJsZS51cGRhdGUoe1xyXG4gICAgICBcIm1vbmV5XCI6IHRoaXMuX3N0YXJ0TW9uZXlcclxuICAgIH0pXHJcbiAgICB0aGlzLmZpZWxkLm9uTG9zZSgoKSA9PiB0aGlzLnN0YXJ0KCkpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXVzdHJhbGlhR2FtZTtcclxuIiwiaW1wb3J0IFNwb3QgZnJvbSBcIi4vc3BvdFwiO1xyXG5pbXBvcnQgRGlzcGF0Y2hlciBmcm9tICdldmVudHMtZGlzcGF0Y2gnO1xyXG5cclxuY2xhc3MgTGluZSB7XHJcbiAgY29uc3RydWN0b3IoZ2FtZSwgY29uZmlnKSB7XHJcbiAgICBuZXcgRGlzcGF0Y2hlcih0aGlzKTtcclxuXHJcbiAgICB0aGlzLmdhbWUgPSBnYW1lO1xyXG5cclxuICAgIHRoaXMuaW5kZXggPSBjb25maWcuaW5kZXggKyAxO1xyXG4gICAgdGhpcy5zcG90cyA9IFtdO1xyXG4gICAgdGhpcy5lbGVtZW50ID0gdGhpcy5yZW5kZXIoKTtcclxuXHJcbiAgICB0aGlzLmdhbWUub24oJ3N0YXJ0QXR0YWNrJywgKCkgPT4gdGhpcy5fb25BdHRhY2soKSk7XHJcblxyXG4gICAgdGhpcy5lbmVtaWVzID0gW107XHJcbiAgICB0aGlzLmJ1bGxldHMgPSBbXTtcclxuXHJcbiAgICB0aGlzLmNoZWNrVGltZXI7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdsaW5lJyk7XHJcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1pbmRleCcsIHRoaXMuaW5kZXgpO1xyXG4gICAgZWxlbWVudC5zdHlsZS5ib3R0b20gPSAodGhpcy5pbmRleCAtIDEpICogMTAwICsgJ3B4JztcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykge1xyXG4gICAgICBsZXQgc3BvdCA9IG5ldyBTcG90KGksIHRoaXMpO1xyXG4gICAgICB0aGlzLnNwb3RzLnB1c2goc3BvdCk7XHJcbiAgICAgIHNwb3QuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcclxuICAgICAgICAgIHRoaXMuX29uU2VsZWN0U3BvdChzcG90KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoc3BvdC5lbGVtZW50KTtcclxuICAgIH1cclxuICAgIHJldHVybiBlbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgZ2V0IGFjdGl2ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9hY3RpdmU7XHJcbiAgfVxyXG5cclxuICBzZXQgYWN0aXZlKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9hY3RpdmUgPSBCb29sZWFuKHZhbHVlKTtcclxuICB9XHJcbiBcclxuICBhY3RpdmF0ZSgpIHtcclxuICAgIHRoaXMuYWN0aXZlID0gdHJ1ZTtcclxuICAgIHRoaXMuX3J1bigpO1xyXG4gICAgdGhpcy5fc3RhcnRDaGVjaygpO1xyXG4gIH1cclxuXHJcbiAgZGVhY3RpdmF0ZSgpIHtcclxuICAgIHRoaXMuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB0aGlzLl9zdG9wQ2hlY2soKTtcclxuICAgIHRoaXMuc3BvdHMuZm9yRWFjaChzcG90ID0+IHtcclxuICAgICAgaWYgKHNwb3QucGxhbnQpIHNwb3QucGxhbnQuc3RvcCgpO1xyXG4gICAgfSlcclxuXHJcbiAgICB0aGlzLmVuZW1pZXMubGVuZ3RoID0gMDtcclxuXHJcbiAgICB0aGlzLmJ1bGxldHMubGVuZ3RoID0gMDtcclxuICB9XHJcblxyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcclxuICAgIHRoaXMuX3N0b3BDaGVjaygpO1xyXG4gICAgdGhpcy5idWxsZXRzLmZvckVhY2goYnVsbGV0ID0+IHtcclxuICAgICAgYnVsbGV0LnJlbW92ZWQgPSB0cnVlO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLmJ1bGxldHMubGVuZ3RoID0gMDtcclxuICAgIHRoaXMuc3BvdHMuZm9yRWFjaChzcG90ID0+IHtcclxuICAgICAgaWYgKHNwb3QucGxhbnQpIHNwb3QucGxhbnQucmVtb3ZlKCk7XHJcbiAgICB9KVxyXG4gICAgdGhpcy5lbmVtaWVzLmZvckVhY2goZW5lbXkgPT4ge1xyXG4gICAgICBlbmVteS5yZW1vdmUoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5lbmVtaWVzLmxlbmd0aCA9IDA7XHJcbiAgICBcclxuICB9XHJcblxyXG4gIF9vblNlbGVjdFNwb3Qoc3BvdCkge1xyXG4gICAgaWYgKHNwb3QucGxhbnQpIHJldHVybjtcclxuXHJcbiAgICB0aGlzLmdhbWUudHJpZ2dlcignc2VsZWN0U3BvdCcsIHNwb3QpO1xyXG4gIH0gXHJcblxyXG4gIF9vbkF0dGFjaygpIHtcclxuICAgIHRoaXMuc3BvdHMuZm9yRWFjaCgoc3BvdCkgPT4ge1xyXG4gICAgICBpZiAoc3BvdC5wbGFudCkge1xyXG4gICAgICAgIHNwb3QucGxhbnQuYWN0aXZhdGUodGhpcyk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBfcnVuKCkge1xyXG4gICAgdGhpcy5jeWNsZVRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICB0aGlzLmVuZW1pZXMuZm9yRWFjaChlbmVteSA9PiB7XHJcbiAgICAgICAgaWYgKGVuZW15LmVsLm9mZnNldExlZnQgPD0gMCkge1xyXG4gICAgICAgICAgdGhpcy5nYW1lLmxvc2UoKTtcclxuICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5jeWNsZVRpbWVyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGVuZW15UmVjdCA9IGVuZW15LmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuYnVsbGV0cy5mb3JFYWNoKGJ1bGxldCA9PiB7XHJcbiAgICAgICAgICBsZXQgYnVsbGV0UmVjdCA9IGJ1bGxldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsgIFxyXG4gICAgICAgICAgaWYgKGJ1bGxldFJlY3QucmlnaHQgPiBlbmVteVJlY3QubGVmdCkge1xyXG4gICAgICAgICAgICBlbmVteS5saWZlcyA9IGVuZW15LmxpZmVzIC0gYnVsbGV0LnNob3Q7XHJcbiAgICAgICAgICAgIGJ1bGxldC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgYnVsbGV0LnJlbW92ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBpZiAoZW5lbXkubGlmZXMgPD0gMCkge1xyXG4gICAgICAgICAgICAgIGVuZW15LmtpbGwoKTtcclxuICAgICAgICAgICAgICBsZXQgaW5kZXggPSB0aGlzLmVuZW1pZXMuaW5kZXhPZihlbmVteSk7XHJcbiAgICAgICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkgdGhpcy5lbmVtaWVzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgICAgdGhpcy5nYW1lLnRyaWdnZXIoJ2tpbGxFbmVteScpO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIHRoaXMuZ2FtZS5wb2ludHMgPSB0aGlzLmdhbWUucG9pbnRzICsgMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuYnVsbGV0cyA9IHRoaXMuYnVsbGV0cy5maWx0ZXIoYnVsbGV0ID0+ICFidWxsZXQucmVtb3ZlZCk7XHJcbiAgICAgIH0pXHJcbiAgICB9LCAxMCk7XHJcbiAgfVxyXG5cclxuICBfc3RhcnRDaGVjaygpIHtcclxuICAgIHRoaXMuY2hlY2tUaW1lciA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgbGV0IHBsYW50cyA9IHRoaXMuc3BvdHMuZmlsdGVyKHNwb3QgPT4gc3BvdC5wbGFudCkubWFwKHNwb3QgPT4gc3BvdC5wbGFudCk7XHJcbiAgICAgIHRoaXMuZW5lbWllcy5mb3JFYWNoKGVuZW15ID0+IHtcclxuICAgICAgICBsZXQgZW5lbXlSZWN0ID0gZW5lbXkuZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgcGxhbnRzLmZvckVhY2gocGxhbnQgPT4ge1xyXG4gICAgICAgICAgbGV0IHBsYW50UmVjdCA9IHBsYW50LnZpZXcuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICBpZiAoZW5lbXlSZWN0LmxlZnQgPj0gcGxhbnRSZWN0LnJpZ2h0KSByZXR1cm47XHJcbiAgICAgICAgICBwbGFudC5raWxsKCk7XHJcbiAgICAgICAgICB0aGlzLmdhbWUucG9pbnRzID0gdGhpcy5nYW1lLnBvaW50cyAtIDAuNTtcclxuICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgICBcclxuICAgIH0sIDEwMDApXHJcbiAgfVxyXG5cclxuICBfc3RvcENoZWNrKCkge1xyXG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLmNoZWNrVGltZXIpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTGluZTsiLCJjbGFzcyBTcG90IHtcclxuICBjb25zdHJ1Y3RvcihpbmRleCwgbGluZSkge1xyXG4gICAgdGhpcy5pbmRleCA9IGluZGV4O1xyXG4gICAgdGhpcy5saW5lID0gbGluZTtcclxuICAgIHRoaXMuZWxlbWVudCA9IHRoaXMucmVuZGVyKCk7XHJcbiAgfVxyXG5cclxuICBnZXQgcGxhbnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcGxhbnQ7XHJcbiAgfVxyXG5cclxuICBzZXQgcGxhbnQocGxhbnQpIHtcclxuICAgIFxyXG4gICAgdGhpcy5fcGxhbnQgPSBwbGFudDtcclxuICAgIGxldCB2aWV3ID0gdGhpcy5fcGxhbnQudmlldztcclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZCh2aWV3KTtcclxuXHJcbiAgICB0aGlzLl9wbGFudC5vbigna2lsbGVkJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9wbGFudCA9IG51bGw7XHJcbiAgICAgIHZpZXcucmVtb3ZlKCk7XHJcbiAgICB9KVxyXG4gIH1cclxuICBcclxuICByZW5kZXIoKSB7XHJcbiAgICBsZXQgc3BvdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgc3BvdC5jbGFzc0xpc3QuYWRkKCdzcG90Jyk7XHJcbiAgICBzcG90LnNldEF0dHJpYnV0ZSgnZGF0YS1pbmRleCcsIHRoaXMuaW5kZXggKyAxKTtcclxuICAgIHNwb3Quc3R5bGUubGVmdCA9IHRoaXMuaW5kZXggKiAxMDAgKyA1MCArICdweCc7XHJcblxyXG4gICAgcmV0dXJuIHNwb3Q7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTcG90OyIsImltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuXHJcbmltcG9ydCBCYXNlIGZyb20gXCIuL3BsYW50LmJhc2VcIjtcclxuaW1wb3J0IFBvd2VyIGZyb20gXCIuL3BsYW50LnBvd2VyXCI7XHJcbmltcG9ydCBNb25leSBmcm9tIFwiLi9wbGFudC5tb25leVwiO1xyXG5cclxuY2xhc3MgQm9hcmQge1xyXG4gIGNvbnN0cnVjdG9yKGdhbWUpIHtcclxuICAgIG5ldyBEaXNwYXRjaGVyKHRoaXMpO1xyXG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcclxuXHJcbiAgICB0aGlzLnBsYW50cyA9IFtcclxuICAgICAgTW9uZXksXHJcbiAgICAgIEJhc2UsXHJcbiAgICAgIFBvd2VyLFxyXG4gICAgXTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQgPSB0aGlzLnJlbmRlcigpO1xyXG5cclxuICAgIFxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncGxhbnRzLWJvYXJkJyk7XHJcblxyXG4gICAgdGhpcy5wbGFudHMuZm9yRWFjaCgocGxhbnQsIGluZGV4KSA9PiB7XHJcbiAgICAgIGxldCBwcmV2aWV3ID0gcGxhbnQuZ2V0UHJldmlldygpO1xyXG4gICAgICBwbGFudC5wcmV2aWV3ID0gcHJldmlldztcclxuICAgICAgcHJldmlldy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3QgcGxhbnQnLCBwbGFudClcclxuICAgICAgICAgIHRoaXMuX29uU2VsZWN0KHBsYW50KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQocHJldmlldyk7XHJcbiAgICB9KVxyXG5cclxuICAgIHJldHVybiBlbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgZ2V0IGFjdGl2ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9hY3RpdmU7XHJcbiAgfVxyXG5cclxuICBzZXQgYWN0aXZlKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9hY3RpdmUgPSBCb29sZWFuKHZhbHVlKTtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJywgdGhpcy5fYWN0aXZlKTtcclxuICB9XHJcblxyXG4gIGFjdGl2YXRlKCkge1xyXG4gICAgY29uc29sZS5sb2coJ2FjdGl2YXRlIHBsYW50cyBib2FyZCcpO1xyXG4gICAgdGhpcy5hY3RpdmUgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgZGVhY3RpdmF0ZSgpIHtcclxuICAgIGNvbnNvbGUubG9nKCdkZWFjdGl2YXRlIHBsYW50cyBib2FyZCcpXHJcbiAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgX29uU2VsZWN0KHBsYW50KSB7XHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZCkge1xyXG4gICAgICB0aGlzLnNlbGVjdGVkLnByZXZpZXcuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnNlbGVjdGVkID0gcGxhbnQ7XHJcbiAgICBwbGFudC5wcmV2aWV3LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICB0aGlzLmdhbWUudHJpZ2dlcignc2VsZWN0UGxhbnQnKTtcclxuICB9XHJcblxyXG4gIGdldCBzZWxlY3RlZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZDtcclxuICB9XHJcblxyXG4gIHNldCBzZWxlY3RlZChwbGFudENsYXNzKSB7XHJcbiAgICB0aGlzLl9zZWxlY3RlZCA9IHBsYW50Q2xhc3M7XHJcbiAgfVxyXG5cclxuICBnZXQgc2VsZWN0ZWRQbGFudCgpIHtcclxuICAgIGlmICh0aGlzLl9zZWxlY3RlZCkge1xyXG4gICAgICByZXR1cm4gbmV3IHRoaXMuX3NlbGVjdGVkKClcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJvYXJkOyIsImltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuXHJcbmxldCBjb3VudGVyID0gMDtcclxuXHJcbmNsYXNzIFBsYW50IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuaW5kZXggPSArK2NvdW50ZXI7XHJcbiAgICBuZXcgRGlzcGF0Y2hlcih0aGlzKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRQcmV2aWV3KCkge1xyXG4gICAgbGV0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBlbC5jbGFzc0xpc3QuYWRkKCdwbGFudC1wcmV2aWV3Jyk7XHJcbiAgICBlbC5jbGFzc0xpc3QuYWRkKCdwbGFudCcpO1xyXG4gICAgZWwuc2V0QXR0cmlidXRlKCdkYXRhLXBsYW50JywgdGhpcy5wbGFudE5hbWUpO1xyXG4gICAgXHJcbiAgICBsZXQgcHJpY2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHByaWNlLmNsYXNzTGlzdC5hZGQoJ3BsYW50LXByZXZpZXdfX3ByaWNlJyk7XHJcbiAgICBwcmljZS50ZXh0Q29udGVudCA9IHRoaXMucHJpY2U7XHJcbiAgICBlbC5hcHBlbmRDaGlsZChwcmljZSk7XHJcblxyXG4gICAgcmV0dXJuIGVsO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHZpZXcoKSB7XHJcbiAgICBpZiAoIXRoaXMuX3ZpZXcpIHtcclxuICAgICAgdGhpcy5fdmlldyA9IHRoaXMucmVuZGVyVmlldygpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLl92aWV3O1xyXG4gIH1cclxuXHJcbiAgZ2V0IHByaWNlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuY29uc3RydWN0b3IucHJpY2U7XHJcbiAgfVxyXG5cclxuICByZW5kZXJWaWV3KCkge1xyXG4gICAgbGV0IHZpZXcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHZpZXcuY2xhc3NOYW1lID0gJ3BsYW50LXZpZXcgcGxhbnQnO1xyXG4gICAgdmlldy5zZXRBdHRyaWJ1dGUoJ2RhdGEtcGxhbnQnLCB0aGlzLmNvbnN0cnVjdG9yLnBsYW50TmFtZSk7XHJcbiAgICByZXR1cm4gdmlldztcclxuICB9XHJcblxyXG4gIGV4ZWN1dGUobGluZSkge1xyXG4gIH1cclxuXHJcbiAgYWN0aXZhdGUobGluZSkge1xyXG4gICAgY29uc29sZS5sb2coJ0FDVElWQVRFJywgdGhpcy5leGVjdXRlZClcclxuICAgIGlmICh0aGlzLmV4ZWN1dGVkKSByZXR1cm47XHJcbiAgICB0aGlzLmV4ZWN1dGVkID0gdHJ1ZTtcclxuICAgIHRoaXMuZXhlY3V0ZShsaW5lKTtcclxuICB9XHJcblxyXG4gIHN0b3AoKSB7XHJcbiAgICB0aGlzLnN0b3BwZWQgPSB0cnVlO1xyXG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLmV4ZWN1dGVUaW1lcik7XHJcbiAgfVxyXG5cclxuICBraWxsKCkge1xyXG4gICAgdGhpcy5zdG9wKCk7XHJcbiAgICB0aGlzLnRyaWdnZXIoJ2tpbGxlZCcpO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlKCkge1xyXG4gICAgdGhpcy5zdG9wKCk7XHJcbiAgICB0aGlzLnZpZXcucmVtb3ZlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5QbGFudC5wbGFudE5hbWUgPSBcInBsYW50XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQbGFudDsiLCJpbXBvcnQgUGxhbnQgZnJvbSBcIi5cIjtcclxuXHJcblxyXG5jbGFzcyBQbGFudEJhc2UgZXh0ZW5kcyBQbGFudCB7XHJcbiAgY29uc3RydWN0b3Ioc2hvdCA9IDEsIC4uLmRhdGEpIHtcclxuICAgIHN1cGVyKC4uLmRhdGEpO1xyXG5cclxuICAgIHRoaXMuc2hvdCA9IHNob3Q7XHJcbiAgfVxyXG5cclxuICBleGVjdXRlKGxpbmUpIHtcclxuICAgIGNvbnNvbGUubG9nKCdpdGVyYXRpb24nLCB0aGlzLmluZGV4KTtcclxuICAgIHRoaXMubGluZSA9IGxpbmU7XHJcblxyXG4gICAgdGhpcy5faXRlcmF0ZSgpO1xyXG4gIH1cclxuXHJcbiAgX2l0ZXJhdGUoKSB7XHJcbiAgICBsZXQgYnVsbGV0ID0gdGhpcy5fY3JlYXRlQnVsbGV0KCk7XHJcbiAgICB0aGlzLmxpbmUuZWxlbWVudC5hcHBlbmRDaGlsZChidWxsZXQpO1xyXG5cclxuICAgIHRoaXMuX21vdmVCdWxsZXQoYnVsbGV0KTtcclxuICAgIHRoaXMubGluZS5idWxsZXRzLnB1c2goYnVsbGV0KTtcclxuXHJcbiAgICB0aGlzLnRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgaWYgKHRoaXMuc3RvcHBlZCkgcmV0dXJuO1xyXG4gICAgICB0aGlzLl9pdGVyYXRlKCk7XHJcbiAgICB9LCBQbGFudEJhc2UuZXhlY3V0ZUludGVydmFsKVxyXG4gIH1cclxuXHJcbiAgX2NyZWF0ZUJ1bGxldCgpIHtcclxuICAgIGxldCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZWwuY2xhc3NOYW1lID0gXCJwbGFudC1idWxsZXQgXCIgKyB0aGlzLmNvbnN0cnVjdG9yLnBsYW50TmFtZTtcclxuXHJcbiAgICBlbC5sZWZ0ID0gdGhpcy52aWV3LnBhcmVudEVsZW1lbnQub2Zmc2V0TGVmdCArIHRoaXMudmlldy5vZmZzZXRXaWR0aCAtIDMwO1xyXG4gICAgZWwuc3R5bGUubGVmdCA9IGVsLmxlZnQgKyAncHgnO1xyXG5cclxuICAgIGVsLnNob3QgPSB0aGlzLnNob3Q7XHJcblxyXG4gICAgcmV0dXJuIGVsO1xyXG4gIH1cclxuXHJcbiAgX21vdmVCdWxsZXQoYnVsbGV0KSB7XHJcbiAgICBidWxsZXQudGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgIGJ1bGxldC5sZWZ0ID0gYnVsbGV0LmxlZnQgKyA0O1xyXG4gICAgICBidWxsZXQuc3R5bGUubGVmdCA9IGJ1bGxldC5sZWZ0ICsgJ3B4JztcclxuXHJcbiAgICAgIGlmIChidWxsZXQubGVmdCA+IDYwMCkge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwoYnVsbGV0LnRpbWVyKTtcclxuICAgICAgICBidWxsZXQucmVtb3ZlKCk7XHJcbiAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5saW5lLmJ1bGxldHMuaW5kZXhPZihidWxsZXQpO1xyXG4gICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHRoaXMubGluZS5idWxsZXRzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgIH1cclxuICAgIH0sIDEwKTtcclxuICB9XHJcbn1cclxuXHJcblBsYW50QmFzZS5wbGFudE5hbWUgPSBcImJhc2VcIjtcclxuUGxhbnRCYXNlLnByaWNlID0gMTAwO1xyXG5QbGFudEJhc2UuZXhlY3V0ZUludGVydmFsID0gMjAwMDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBsYW50QmFzZTsiLCJpbXBvcnQgUGxhbnQgZnJvbSBcIi5cIjtcclxuXHJcbmNsYXNzIFBsYW50TW9uZXkgZXh0ZW5kcyBQbGFudCB7XHJcbiAgY29uc3RydWN0b3IoLi4uZGF0YSkge1xyXG4gICAgc3VwZXIoLi4uZGF0YSk7XHJcblxyXG4gICAgdGhpcy5tb25leVRpbWVyO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHJlYWR5KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlYWR5O1xyXG4gIH1cclxuXHJcbiAgc2V0IHJlYWR5KHZhbHVlKSB7XHJcbiAgICB0aGlzLl9yZWFkeSA9IHZhbHVlO1xyXG4gICAgaWYgKHRoaXMuX3JlYWR5KSB7XHJcbiAgICAgIHRoaXMudmlldy5zZXRBdHRyaWJ1dGUoJ2RhdGEtcmVhZHknLCAnJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnZpZXcucmVtb3ZlQXR0cmlidXRlKCdkYXRhLXJlYWR5Jyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZW5kZXJWaWV3KCkge1xyXG4gICAgbGV0IHZpZXcgPSBzdXBlci5yZW5kZXJWaWV3KCk7XHJcbiAgICBsZXQgYmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGJnLmNsYXNzTmFtZSA9ICdiZyc7XHJcbiAgICB2aWV3LmFwcGVuZENoaWxkKGJnKTtcclxuICAgIHRoaXMuYmcgPSBiZztcclxuICAgIHZpZXcuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIGlmICh0aGlzLnJlYWR5KSB7XHJcbiAgICAgICAgdGhpcy5saW5lLmdhbWUubW9uZXkgPSB0aGlzLmxpbmUuZ2FtZS5tb25leSArIFBsYW50TW9uZXkucHJpY2U7XHJcbiAgICAgICAgdGhpcy5yZWFkeSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuYmcuc3R5bGUuaGVpZ2h0ID0gMDtcclxuICAgICAgICB0aGlzLl9zdGFydFRpbWVyKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHZpZXc7XHJcbiAgfVxyXG5cclxuICBleGVjdXRlKGxpbmUpIHtcclxuICAgIHRoaXMubGluZSA9IGxpbmU7XHJcbiAgICB0aGlzLl9zdGFydFRpbWVyKCk7XHJcbiAgfVxyXG5cclxuICBfc3RhcnRUaW1lcigpIHtcclxuICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgIHRoaXMubW9uZXlUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBcclxuICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnVwZGF0ZVRpbWVyKTtcclxuICAgICAgdGhpcy5yZWFkeSA9IHRydWU7XHJcbiAgICB9LCBQbGFudE1vbmV5LmV4ZWN1dGVJbnRlcnZhbClcclxuXHJcbiAgICB0aGlzLnVwZGF0ZVRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICBsZXQgbm93ID0gRGF0ZS5ub3coKTtcclxuICAgICAgbGV0IHBlcmNlbnQgPSAobm93IC0gdGhpcy5zdGFydFRpbWUpICogMTAwIC8gKFBsYW50TW9uZXkuZXhlY3V0ZUludGVydmFsIC0gNSk7XHJcbiAgICAgIHRoaXMuYmcuc3R5bGUuaGVpZ2h0ID0gcGVyY2VudCArICclJztcclxuICAgIH0sIDEwMCk7XHJcbiAgICBcclxuXHJcbiAgICAgIFxyXG4gICAgXHJcbiAgfVxyXG5cclxuXHJcbn1cclxuXHJcblBsYW50TW9uZXkucGxhbnROYW1lID0gXCJtb25leVwiO1xyXG5QbGFudE1vbmV5LnByaWNlID0gNTA7XHJcblBsYW50TW9uZXkuZXhlY3V0ZUludGVydmFsID0gNTAwMDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBsYW50TW9uZXk7IiwiaW1wb3J0IFBsYW50QmFzZSBmcm9tIFwiLi9wbGFudC5iYXNlXCI7XHJcblxyXG5cclxuY2xhc3MgUGxhbnRQb3dlciBleHRlbmRzIFBsYW50QmFzZSB7XHJcbiAgY29uc3RydWN0b3IoLi4uZGF0YSkge1xyXG4gICAgc3VwZXIoMiwgLi4uZGF0YSk7XHJcbiAgfVxyXG4gIFxyXG59XHJcblxyXG5QbGFudFBvd2VyLnBsYW50TmFtZSA9IFwicG93ZXJcIjtcclxuUGxhbnRQb3dlci5wcmljZSA9IDMwMDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBsYW50UG93ZXI7IiwiY2xhc3MgU2V0Q29udHJvbGxlciB7XHJcbiAgY29uc3RydWN0b3IoZ2FtZSkge1xyXG4gICAgdGhpcy5nYW1lID0gZ2FtZTtcclxuICAgIHRoaXMucGF1c2UgPSB0cnVlO1xyXG5cclxuICAgIHRoaXMuZ2FtZS5vbignc2VsZWN0UGxhbnQnLCAoKSA9PiB0aGlzLl9vblNlbGVjdFBsYW50KCkpO1xyXG4gICAgdGhpcy5nYW1lLm9uKCdzZWxlY3RTcG90JywgKHNwb3QpID0+IHRoaXMuX29uU2VsZWN0U3BvdChzcG90KSk7XHJcbiAgfVxyXG5cclxuICBnZXQgcGF1c2UoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcGF1c2U7XHJcbiAgfVxyXG5cclxuICBzZXQgcGF1c2UodmFsdWUpIHtcclxuICAgIHRoaXMuX3BhdXNlID0gQm9vbGVhbih2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBzdGFydCgpIHtcclxuICAgIHRoaXMuZ2FtZS5wbGFudHNCb2FyZC5hY3RpdmF0ZSgpO1xyXG4gICAgdGhpcy5nYW1lLmxpbmVzLmZvckVhY2gobGluZSA9PiBsaW5lLmFjdGl2YXRlKCkpO1xyXG4gICAgdGhpcy5wYXVzZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgc3RvcCgpIHtcclxuICAgIHRoaXMuZ2FtZS5saW5lcy5mb3JFYWNoKGxpbmUgPT4gbGluZS5kZWFjdGl2YXRlKCkpO1xyXG4gICAgdGhpcy5wYXVzZSA9IHRydWU7XHJcbiAgfVxyXG5cclxuICByZXNldCgpIHtcclxuICAgIHRoaXMuZ2FtZS5saW5lcy5mb3JFYWNoKGxpbmUgPT4gbGluZS5yZXNldCgpKTtcclxuICAgIHRoaXMucGF1c2UgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgX29uU2VsZWN0UGxhbnQoKSB7XHJcbiAgICBsZXQgcGxhbnQgPSB0aGlzLmdhbWUucGxhbnRzQm9hcmQuc2VsZWN0ZWQ7XHJcbiAgICBjb25zb2xlLmxvZygncGxhbnQnLCBwbGFudClcclxuICB9XHJcblxyXG4gIF9vblNlbGVjdFNwb3Qoc3BvdCkge1xyXG4gICAgbGV0IHBsYW50ID0gdGhpcy5nYW1lLnBsYW50c0JvYXJkLnNlbGVjdGVkUGxhbnQ7XHJcbiAgICBpZiAoIXBsYW50KSByZXR1cm47XHJcblxyXG4gICAgY29uc29sZS5sb2cocGxhbnQucHJpY2UpO1xyXG5cclxuICAgIGlmIChwbGFudC5wcmljZSA8PSB0aGlzLmdhbWUubW9uZXkpIHtcclxuICAgICAgdGhpcy5nYW1lLm1vbmV5IC09IHBsYW50LnByaWNlO1xyXG4gICAgICBzcG90LnBsYW50ID0gcGxhbnQ7XHJcblxyXG4gICAgICBpZiAodGhpcy5nYW1lLmF0dGFja2VkKSBwbGFudC5hY3RpdmF0ZShzcG90LmxpbmUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS53YXJuKCfQndC10LTQvtGB0YLQsNGC0L7Rh9C90L4g0LTQtdC90LXQsycpXHJcbiAgICB9XHJcblxyXG4gICAgXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZXRDb250cm9sbGVyOyIsImNvbnN0IGNhcmRzID0gW1xyXG4gIHsgdGV4dDogJ9Cf0LDRgNC40LYnLCB2YWx1ZTogJ2ZyYW5jZScsfSxcclxuICB7IHRleHQ6ICfQpNGA0LDQvdGG0LjRjycsIHZhbHVlOiAnZnJhbmNlJyx9LFxyXG4gIFxyXG4gIHsgdGV4dDogJ9CR0YDRjtGB0YHQtdC70YwnLCB2YWx1ZTogJ2JlbGdpdW0nfSxcclxuICB7IHRleHQ6ICfQkdC10LvRjNCz0LjRjycsIHZhbHVlOiAnYmVsZ2l1bSd9LFxyXG4gIFxyXG4gIHt0ZXh0OiAn0JzQsNC00YDQuNC0Jyx2YWx1ZTogJ3NwYW5lJyx9LFxyXG4gIHt0ZXh0OiAn0JjRgdC/0LDQvdC40Y8nLHZhbHVlOiAnc3BhbmUnLH0sXHJcbiAgXHJcbiAge3RleHQ6ICfQkNGE0LjQvdGLJyx2YWx1ZTogJ2dyZWVjZScsfSxcclxuICB7dGV4dDogJ9CT0YDQtdGG0LjRjycsdmFsdWU6ICdncmVlY2UnLH0sXHJcbiAgXHJcbiAge3RleHQ6ICfQlNGD0LHQu9C40L0nLHZhbHVlOiAnaXJlbGFuZCcsfSxcclxuICB7dGV4dDogJ9CY0YDQu9Cw0L3QtNC40Y8nLHZhbHVlOiAnaXJlbGFuZCcsfSxcclxuICBcclxuICB7dGV4dDogJ9Cf0YDQsNCz0LAnLHZhbHVlOiAnY2hlemgnLH0sXHJcbiAge3RleHQ6ICfQp9C10YXQuNGPJyx2YWx1ZTogJ2NoZXpoJyx9LFxyXG5cclxuICB7dGV4dDogJ9Ce0YHQu9C+Jyx2YWx1ZTogJ25vcndheScsfSxcclxuICB7dGV4dDogJ9Cd0L7RgNCy0LXQs9C40Y8nLHZhbHVlOiAnbm9yd2F5Jyx9LFxyXG5cclxuICB7dGV4dDogJ9CS0LDRgNGI0LDQstCwJyx2YWx1ZTogJ3BvbGFuZCcsfSxcclxuICB7dGV4dDogJ9Cf0L7Qu9GM0YjQsCcsdmFsdWU6ICdwb2xhbmQnLH0sXHJcblxyXG4gIHt0ZXh0OiAn0JLQuNC70YzQvdGO0YEnLHZhbHVlOiAnbGl0aHVhbmlhJyx9LFxyXG4gIHt0ZXh0OiAn0JvQuNGC0LLQsCcsdmFsdWU6ICdsaXRodWFuaWEnLH0sXHJcblxyXG4gIHt0ZXh0OiAn0KHQutC+0L/RjNC1Jyx2YWx1ZTogJ21hY2Vkb25pYScsfSxcclxuICB7dGV4dDogJ9Cc0LDQutC10LTQvtC90LjRjycsdmFsdWU6ICdtYWNlZG9uaWEnLH0sXHJcbl07XHJcblxyXG5jb25zdCBpbWFnZXMgPSB7XHJcbiAgJ2ZyYW5jZSc6IHtcclxuICAgIGltZzogJ2ltZy9jb21wcm9tYXQvMS5qcGVnJyxcclxuICAgIHRleHQ6ICfQk9C70LDQtNC40Lsg0L/QvtC70L7RgtC10L3Rh9C40LrQuCEnLFxyXG4gIH0sXHJcbiAgJ2JlbGdpdW0nOiB7XHJcbiAgICBpbWc6ICdpbWcvY29tcHJvbWF0LzIuanBnJyxcclxuICAgIHRleHQ6ICfQn9C70LXRgdC60LDQu9GB0Y8g0LIg0LLQsNC90L3QvtC5INGBINC/0LXQvdC+0Lkg0Lgg0YDQtdC30LjQvdC+0LLRi9C8INGD0YLQtdC90LrQvtC8IScsXHJcbiAgfSxcclxuICAnc3BhbmUnOiB7XHJcbiAgICBpbWc6ICdpbWcvY29tcHJvbWF0LzIuanBnX2xhcmdlJyxcclxuICAgIHRleHQ6ICfQpdC+0LTQuNC7INC90LAg0LHRi9GB0YLRgNGL0LUg0YHQstC40LTQsNC90LjRjyEnLFxyXG4gIH0sXHJcbiAgJ2dyZWVjZSc6IHtcclxuICAgIGltZzogJ2ltZy9jb21wcm9tYXQvMy5qcGcnLFxyXG4gICAgdGV4dDogJ9CS0L7Qt9C40Lsg0LrRg9C60L7Qu9C60YMg0LIg0LrQvtC70Y/RgdC60LUhJyxcclxuICB9LFxyXG4gICdpcmVsYW5kJzoge1xyXG4gICAgaW1nOiAnaW1nL2NvbXByb21hdC80LmpwZycsXHJcbiAgICB0ZXh0OiAn0KfQuNGC0LDQuyDQsdC70LjQt9C90LXRhtCw0Lwg0YHQutCw0LfQutC4IScsXHJcbiAgfSxcclxuICAnY2hlemgnOiB7XHJcbiAgICBpbWc6ICdpbWcvY29tcHJvbWF0LzUuanBnJyxcclxuICAgIHRleHQ6ICfQlNC10LvQsNC7INC00L7QsdGA0YvQtSDQtNC10LvQsCEnLFxyXG4gIH0sXHJcbiAgJ25vcndheSc6IHtcclxuICAgIGltZzogJ2ltZy9jb21wcm9tYXQvNi5qcGcnLFxyXG4gICAgdGV4dDogJ9CY0LPRgNCw0Lsg0YEg0LrQvtGC0Y/RgtCw0LzQuCEnLFxyXG4gIH0sXHJcbiAgJ3BvbGFuZCc6IHtcclxuICAgIGltZzogJ2ltZy9jb21wcm9tYXQvNy5qcGcnLFxyXG4gICAgdGV4dDogJ9CU0LjRgNC40LbQuNGA0L7QstCw0Lsg0L7RgNC60LXRgdGC0YDQvtC8IScsXHJcbiAgfSxcclxuICAnbGl0aHVhbmlhJzoge1xyXG4gICAgaW1nOiAnaW1nL2NvbXByb21hdC84LmpwZycsXHJcbiAgICB0ZXh0OiAn0J/QuNGC0LDQu9GB0Y8g0YTQsNGB0YLRhNGD0LTQvtC8IScsXHJcbiAgfSxcclxuICAnbWFjZWRvbmlhJzoge1xyXG4gICAgaW1nOiAnaW1nL2NvbXByb21hdC85LmpwZycsXHJcbiAgICB0ZXh0OiAn0JzRi9C7INGC0LDRgNC10LvQvtGH0LrQuCEnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgeyBjYXJkcywgaW1hZ2VzIH07IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IHsgY2FyZHMsIGltYWdlcyB9IGZyb20gXCIuL2NhcmRzXCI7XHJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcblxyXG5pbXBvcnQgRGlzcGF0Y2hlciBmcm9tIFwiZXZlbnRzLWRpc3BhdGNoXCI7XHJcblxyXG5sZXQgY2xpY2tzID0gMDtcclxuXHJcbmNsYXNzIEV1cm9wZUdhbWUge1xyXG4gIGNvbnN0cnVjdG9yKGVsZW1lbnQsIGNvbmZpZyA9IHt9KSB7XHJcbiAgICBuZXcgRGlzcGF0Y2hlcih0aGlzKTtcclxuXHJcbiAgICB0aGlzLmZpZWxkID0gZWxlbWVudDtcclxuXHJcbiAgICB0aGlzLmNhcmRzID0gW107XHJcblxyXG4gICAgbGV0IHdpZHRoID0gY29uZmlnLndpZHRoIHx8IDU7XHJcbiAgICBsZXQgaGVpZ2h0ID0gY29uZmlnLmhlaWdodCB8fCA0O1xyXG4gIFxyXG4gICAgdGhpcy5tYXAgPSB0aGlzLmNyZWF0ZVJhbmRvbU1hcChjYXJkcywgd2lkdGgsIGhlaWdodCk7XHJcbiAgICB0aGlzLnJlbmRlck1hcCgpO1xyXG5cclxuICAgIHRoaXMuc2VsZWN0ZWQgPSBudWxsO1xyXG4gICAgdGhpcy5pblByb2Nlc3MgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLmltYWdlID0gdGhpcy5jcmVhdGVJbWFnZSgpO1xyXG4gICAgdGhpcy5maWVsZC5hcHBlbmRDaGlsZCh0aGlzLmltYWdlLndyYXBwZXIpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlSW1hZ2UoKSB7XHJcbiAgICBsZXQgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgd3JhcHBlci5jbGFzc05hbWUgPSBcImltYWdlXCI7XHJcbiAgICB3cmFwcGVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGxldCBpbWdXcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBpbWdXcmFwcGVyLmNsYXNzTmFtZSA9IFwiaW1hZ2VfX3dyYXBwZXJcIjtcclxuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoaW1nV3JhcHBlcik7XHJcbiAgICBsZXQgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcbiAgICBpbWdXcmFwcGVyLmFwcGVuZENoaWxkKGltZyk7XHJcbiAgICBsZXQgdGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGV4dC5jbGFzc05hbWUgPSBcImltYWdlX190ZXh0XCI7XHJcbiAgICB3cmFwcGVyLmFwcGVuZENoaWxkKHRleHQpO1xyXG4gICAgbGV0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgYnV0dG9uLnR5cGUgPSBcImJ1dHRvblwiO1xyXG4gICAgYnV0dG9uLnRleHRDb250ZW50ID0gXCLQn9GA0L7QtNC+0LvQttC40YLRjFwiO1xyXG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChidXR0b24pO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHdyYXBwZXIsIGltZywgdGV4dCwgYnV0dG9uLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZVJhbmRvbU1hcChjYXJkcywgd2lkdGgsIGhlaWdodCkge1xyXG4gICAgbGV0IGNvbWJpbmF0aW9ucyA9IFtdO1xyXG4gICAgbGV0IG1hcCA9IFtdO1xyXG5cclxuICAgIGZvciAobGV0IHkgPSAwOyB5IDwgaGVpZ2h0OyB5KyspIHtcclxuICAgICAgbWFwLnB1c2goW10pO1xyXG4gICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IHdpZHRoOyB4KyspIHtcclxuICAgICAgICBjb21iaW5hdGlvbnMucHVzaChbeSwgeF0pO1xyXG4gICAgICAgIG1hcFt5XVt4XSA9IG51bGw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgbGV0IGNvdW50ZXIgPSAwO1xyXG4gICAgXHJcbiAgICB3aGlsZShjb21iaW5hdGlvbnMubGVuZ3RoKSB7XHJcbiAgICAgIGxldCBjYXJkID0gY2FyZHNbY291bnRlcl07XHJcbiAgICAgIGlmICghY2FyZCkgYnJlYWs7XHJcblxyXG4gICAgICBsZXQgcmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY29tYmluYXRpb25zLmxlbmd0aCk7XHJcbiAgICAgIGxldCBwb3NpdGlvbiA9IGNvbWJpbmF0aW9uc1tyYW5kb21dO1xyXG4gICAgICBtYXBbcG9zaXRpb25bMF1dW3Bvc2l0aW9uWzFdXSA9IGNhcmQ7XHJcbiAgICAgIGNvbWJpbmF0aW9ucy5zcGxpY2UocmFuZG9tLCAxKTtcclxuXHJcbiAgICAgIGNvdW50ZXIrKztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbWFwO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTWFwKCkge1xyXG4gICAgZm9yIChsZXQgeSA9IDA7IHkgPCB0aGlzLm1hcC5sZW5ndGg7IHkrKykge1xyXG4gICAgICBsZXQgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgIHJvdy5jbGFzc05hbWUgPSAncm93JztcclxuICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCB0aGlzLm1hcFswXS5sZW5ndGg7IHgrKykge1xyXG4gICAgICAgIGxldCBjZWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgY2VsbC5jbGFzc05hbWUgPSAnY2VsbCc7XHJcblxyXG4gICAgICAgIGxldCBjYXJkID0gdGhpcy5tYXBbeV1beF07XHJcblxyXG4gICAgICAgIGxldCAkY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICRjYXJkLmNsYXNzTmFtZSA9IFwiY2FyZFwiO1xyXG5cclxuICAgICAgICBsZXQgdGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICB0ZXh0LnRleHRDb250ZW50ID0gY2FyZC50ZXh0O1xyXG5cclxuICAgICAgICAkY2FyZC5hcHBlbmRDaGlsZCh0ZXh0KTtcclxuICAgICAgICAkY2FyZC52YWx1ZSA9IGNhcmQudmFsdWU7XHJcbiAgICAgICAgJGNhcmQuY2xpY2tzID0gMDtcclxuXHJcbiAgICAgICAgJGNhcmQuc2V0QXR0cmlidXRlKCdkYXRhLXZhbHVlJywgY2FyZC52YWx1ZSk7XHJcbiAgICAgICAgJGNhcmQuc2V0QXR0cmlidXRlKCdkYXRhLXN0YXRlJywgY2FyZC5zdGF0ZSk7XHJcblxyXG4gICAgICAgIHRoaXMuY2FyZHMucHVzaCgkY2FyZCk7XHJcblxyXG4gICAgICAgICRjYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5vbkNhcmRDbGljaygkY2FyZCkpO1xyXG5cclxuICAgICAgICBjZWxsLmFwcGVuZENoaWxkKCRjYXJkKTtcclxuICAgICAgICByb3cuYXBwZW5kQ2hpbGQoY2VsbCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5maWVsZC5hcHBlbmRDaGlsZChyb3cpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2hvd0ltYWdlKGltZykge1xyXG4gICAgdGhpcy5pbWFnZS5pbWcuc3JjID0gaW1nLmltZztcclxuICAgIHRoaXMuaW1hZ2UudGV4dC5pbm5lckhUTUwgPSBpbWcudGV4dDtcclxuICAgIHRoaXMuaW1hZ2Uud3JhcHBlci5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxuXHJcbiAgICB0aGlzLmltYWdlLmJ1dHRvbi5vbmNsaWNrID0gKCkgPT4ge1xyXG4gICAgICB0aGlzLmltYWdlLndyYXBwZXIuc3R5bGUuZGlzcGxheSA9XCJub25lXCI7XHJcbiAgICAgIGlmICghdGhpcy5jYXJkcy5sZW5ndGgpIHRoaXMud2luKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgb25DYXJkQ2xpY2soY2FyZCkge1xyXG4gICAgaWYgKGNhcmQgPT0gdGhpcy5zZWxlY3RlZCB8fCB0aGlzLmluUHJvY2VzcykgcmV0dXJuO1xyXG4gICAgaWYgKGNhcmQucmVtb3ZlZCkgcmV0dXJuO1xyXG5cclxuICAgIGNsaWNrcysrO1xyXG5cclxuICAgIGNhcmQuY2xhc3NMaXN0LmFkZCgnc2hvdycpO1xyXG4gICAgY2FyZC5jbGlja3MrKztcclxuXHJcbiAgICB0aGlzLmluUHJvY2VzcyA9IHRydWU7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIGlmICh0aGlzLnNlbGVjdGVkKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWQudmFsdWUgPT0gY2FyZC52YWx1ZSkge1xyXG5cclxuICAgICAgICAgIHRoaXMuc2VsZWN0ZWQuY2xhc3NMaXN0LmFkZCgncmlnaHQnKTtcclxuICAgICAgICAgIGNhcmQuY2xhc3NMaXN0LmFkZCgncmlnaHQnKTtcclxuXHJcbiAgICAgICAgICBsZXQgaW5kZXggPSB0aGlzLmNhcmRzLmluZGV4T2YodGhpcy5zZWxlY3RlZCk7XHJcbiAgICAgICAgICB0aGlzLmNhcmRzLnNwbGljZShpbmRleCwgMSk7XHJcblxyXG4gICAgICAgICAgaW5kZXggPSB0aGlzLmNhcmRzLmluZGV4T2YoY2FyZCk7XHJcbiAgICAgICAgICB0aGlzLmNhcmRzLnNwbGljZShpbmRleCwgMSk7XHJcblxyXG4gICAgICAgICAgbGV0IHBvaW50cyA9IE1hdGgubWF4KDEsIDE1IC0gY2FyZC5jbGlja3MgLSB0aGlzLnNlbGVjdGVkLmNsaWNrcyk7XHJcbiAgICAgICAgICB0aGlzLnBvaW50cyA9IHRoaXMucG9pbnRzICsgcG9pbnRzO1xyXG5cclxuICAgICAgICAgIFxyXG5cclxuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkLnJlbW92ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBjYXJkLnJlbW92ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkLnNldEF0dHJpYnV0ZSgnZGF0YS1yZW1vdmVkJywgJycpO1xyXG4gICAgICAgICAgICBjYXJkLnNldEF0dHJpYnV0ZSgnZGF0YS1yZW1vdmVkJywgJycpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IG51bGw7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmluUHJvY2VzcyA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5zaG93SW1hZ2UoaW1hZ2VzW2NhcmQudmFsdWVdKTtcclxuXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgfSwgNDAwKTtcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuXHJcbiAgICAgICAgICB0aGlzLnNlbGVjdGVkLmNsYXNzTGlzdC5hZGQoJ3dyb25nJyk7XHJcbiAgICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoJ3dyb25nJyk7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkLmNsYXNzTGlzdC5yZW1vdmUoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWQuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkLmNsYXNzTGlzdC5yZW1vdmUoJ3dyb25nJyk7XHJcbiAgICAgICAgICAgIGNhcmQuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xyXG4gICAgICAgICAgICBjYXJkLmNsYXNzTGlzdC5yZW1vdmUoJ3dyb25nJyk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkID0gbnVsbDtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuaW5Qcm9jZXNzID0gZmFsc2U7XHJcbiAgICAgICAgICB9LCA0MDApO1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBjYXJkO1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWQuY2xhc3NMaXN0LmFkZCgnc2VsZWN0ZWQnKTtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcclxuXHJcbiAgICAgICAgdGhpcy5pblByb2Nlc3MgPSBmYWxzZTtcclxuXHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICB9LCA2MDApXHJcbiAgfVxyXG5cclxuICB3aW4oKSB7XHJcbiAgICB0aGlzLnRyaWdnZXIoXCJ3aW5cIiwgMTAwMC9jbGlja3MgKiAyICsgNTAwKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEV1cm9wZUdhbWU7XHJcbiIsImltcG9ydCBLZXlib2FyZExpc3RlbmVyIGZyb20gXCJsaXN0ZW4ta2V5Ym9hcmRcIjtcclxuXHJcbmNsYXNzIEtleWJvYXJkTW92ZXIge1xyXG4gIGNvbnN0cnVjdG9yKG1vdmVyLCBwZXJpb2QpIHtcclxuICAgIHRoaXMubW92ZXIgPSBtb3ZlcjtcclxuICAgIHRoaXMubGlzdGVuZXIgPSBuZXcgS2V5Ym9hcmRMaXN0ZW5lcihwZXJpb2QpO1xyXG5cclxuICAgIHRoaXMubGlzdGVuZXIub24oJ0xFRlQnLCAoKSA9PiB0aGlzLm1vdmVyLnRvTGVmdCgpKTtcclxuICAgIHRoaXMubGlzdGVuZXIub24oJ1JJR0hUJywgKCkgPT4gdGhpcy5tb3Zlci50b1JpZ2h0KCkpO1xyXG4gICAgdGhpcy5saXN0ZW5lci5vbignVVAnLCAoKSA9PiB0aGlzLm1vdmVyLnRvVXAoKSk7XHJcbiAgICB0aGlzLmxpc3RlbmVyLm9uKCdET1dOJywgKCkgPT4gdGhpcy5tb3Zlci50b0Rvd24oKSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBLZXlib2FyZE1vdmVyOyIsImltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuXHJcbmNsYXNzIE1vdmVyIHtcclxuICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjb25maWcpIHtcclxuICAgIG5ldyBEaXNwYXRjaGVyKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcblxyXG4gICAgdGhpcy5fc3BlZWQgPSB7IGxlZnQ6IDAsIHJpZ2h0OiAwLCB1cDogMCwgZG93bjogMCB9O1xyXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLl9zcGVlZCwgY29uZmlnLnNwZWVkKTtcclxuXHJcbiAgICB0aGlzLmZpZWxkID0gY29uZmlnLmZpZWxkO1xyXG5cclxuICAgIHRoaXMuZGlmZiA9IHsgdG9wOiAwLCBib3R0b206IDAsIGxlZnQ6IDAsIHJpZ2h0OiAwIH07XHJcbiAgICBPYmplY3QuYXNzaWduKHRoaXMuZGlmZiwgY29uZmlnLmRpZmYpO1xyXG5cclxuICAgIHRoaXMucGF1c2UgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGxlZnQoKSB7XHJcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5lbGVtZW50LnN0eWxlLmxlZnQpIHx8IDA7XHJcbiAgfVxyXG5cclxuICBzZXQgbGVmdCh2YWx1ZSkge1xyXG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLmxlZnQgPSBOdW1iZXIodmFsdWUpICsgJ3B4JztcclxuICB9XHJcblxyXG4gIGdldCB0b3AoKSB7XHJcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5lbGVtZW50LnN0eWxlLnRvcCkgfHwgMDtcclxuICB9XHJcblxyXG4gIHNldCB0b3AodmFsdWUpIHtcclxuICAgIHRoaXMuZWxlbWVudC5zdHlsZS50b3AgPSBOdW1iZXIodmFsdWUpICsgJ3B4JztcclxuICB9XHJcblxyXG4gIGdldCBzcGVlZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9zcGVlZDtcclxuICB9XHJcblxyXG4gIHNldCBzcGVlZChzcGVlZCkge1xyXG4gICAgaWYgKHNwZWVkLmxlZnQpIHRoaXMuX3NwZWVkLmxlZnQgPSBzcGVlZC5sZWZ0O1xyXG4gICAgaWYgKHNwZWVkLnJpZ2h0KSB0aGlzLl9zcGVlZC5yaWdodCA9IHNwZWVkLnJpZ2h0O1xyXG4gICAgaWYgKHNwZWVkLnVwKSB0aGlzLl9zcGVlZC51cCA9IHNwZWVkLnVwO1xyXG4gICAgaWYgKHNwZWVkLmRvd24pIHRoaXMuX3NwZWVkLmRvd24gPSBzcGVlZC5kb3duO1xyXG4gIH1cclxuXHJcbiAgY2FuTW92ZShkaXJlY3Rpb24pIHtcclxuICAgIGlmICh0aGlzLmZpZWxkKSB7XHJcbiAgICAgIGxldCBtb3ZlclJlY3QgPSB0aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgIGxldCBmaWVsZFJlY3QgPSB0aGlzLmZpZWxkLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgICAgc3dpdGNoKGRpcmVjdGlvbikge1xyXG4gICAgICAgIGNhc2UgXCJsZWZ0XCI6XHJcbiAgICAgICAgICBpZiAobW92ZXJSZWN0LmxlZnQgLSB0aGlzLnNwZWVkLmxlZnQgPCBmaWVsZFJlY3QubGVmdCArIHRoaXMuZGlmZi5sZWZ0KSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIFwicmlnaHRcIjpcclxuICAgICAgICAgIGlmIChtb3ZlclJlY3QucmlnaHQgKyB0aGlzLnNwZWVkLnJpZ2h0ID4gZmllbGRSZWN0LnJpZ2h0IC0gdGhpcy5kaWZmLnJpZ2h0KSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIFwidXBcIjpcclxuICAgICAgICAgIGlmIChtb3ZlclJlY3QudG9wIC0gdGhpcy5zcGVlZC51cCA8IGZpZWxkUmVjdC50b3AgKyB0aGlzLmRpZmYudG9wKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIFwiZG93blwiOlxyXG4gICAgICAgICAgaWYgKG1vdmVyUmVjdC5ib3R0b20gKyB0aGlzLnNwZWVkLmRvd24gPiBmaWVsZFJlY3QuYm90dG9tIC0gdGhpcy5kaWZmLmJvdHRvbSkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9IFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuXHJcbiAgdG9MZWZ0KCkge1xyXG4gICAgaWYgKHRoaXMucGF1c2UpIHJldHVybjtcclxuICAgIGlmICh0aGlzLmNhbk1vdmUoXCJsZWZ0XCIpKSB7XHJcbiAgICAgIHRoaXMubGVmdCA9IHRoaXMubGVmdCAtIHRoaXMuc3BlZWQubGVmdDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMudHJpZ2dlcihcImJvdW5kYXJ5XCIsIFwibGVmdFwiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHRvUmlnaHQoKSB7XHJcbiAgICBpZiAodGhpcy5wYXVzZSkgcmV0dXJuO1xyXG4gICAgaWYgKHRoaXMuY2FuTW92ZShcInJpZ2h0XCIpKSB7XHJcbiAgICAgIHRoaXMubGVmdCA9IHRoaXMubGVmdCArIHRoaXMuc3BlZWQucmlnaHQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnRyaWdnZXIoXCJib3VuZGFyeVwiLCBcInJpZ2h0XCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdG9VcCgpIHtcclxuICAgIGlmICh0aGlzLnBhdXNlKSByZXR1cm47XHJcbiAgICBpZiAodGhpcy5jYW5Nb3ZlKFwidXBcIikpIHtcclxuICAgICAgdGhpcy50b3AgPSB0aGlzLnRvcCAtIHRoaXMuc3BlZWQudXA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnRyaWdnZXIoXCJib3VuZGFyeVwiLCBcInVwXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdG9Eb3duKCkge1xyXG4gICAgaWYgKHRoaXMucGF1c2UpIHJldHVybjtcclxuICAgIGlmICh0aGlzLmNhbk1vdmUoXCJkb3duXCIpKSB7XHJcbiAgICAgIHRoaXMudG9wID0gdGhpcy50b3AgKyB0aGlzLnNwZWVkLmRvd247XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnRyaWdnZXIoXCJib3VuZGFyeVwiLCBcImRvd25cIik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNb3ZlcjsiLCJpbXBvcnQgR2FtZVRhYmxlIGZyb20gXCIuL21vZHVsZXMvZ2FtZS50YWJsZVwiO1xyXG5pbXBvcnQgR2FtZUZpZWxkIGZyb20gXCIuL21vZHVsZXMvZ2FtZS5maWVsZFwiO1xyXG5pbXBvcnQgSW50ZXJzZWN0b3IgZnJvbSBcIi4vbW9kdWxlcy9pbnRlcnNlY3RvclwiO1xyXG5cclxuZXhwb3J0IHtcclxuICBHYW1lVGFibGUsXHJcbiAgR2FtZUZpZWxkLFxyXG4gIEludGVyc2VjdG9yXHJcbn0iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vZ2FtZS5maWVsZC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2dhbWUuZmllbGQuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vZ2FtZS5maWVsZC5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJpbXBvcnQgXCIuL2dhbWUuZmllbGQuY3NzXCI7XHJcblxyXG5jb25zdCBjcmVhdGVNYXNrID0gKCkgPT4ge1xyXG4gIGxldCBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgZWwuY2xhc3NMaXN0LmFkZChcImdhbWUtZmllbGRfX21hc2tcIik7XHJcbiAgZWwuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gIHJldHVybiBlbDtcclxufVxyXG5cclxuY29uc3QgY3JlYXRlRmllbGQgPSAoKSA9PiB7XHJcbiAgbGV0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICBlbC5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcclxuICBlbC5jbGFzc0xpc3QuYWRkKFwiZ2FtZS1maWVsZFwiKTtcclxuXHJcbiAgcmV0dXJuIGVsO1xyXG59XHJcblxyXG5jb25zdCBHYW1lRmllbGQgPSAoZWwsIHRhYmxlKSA9PiB7XHJcbiAgZWwuY2xhc3NMaXN0LmFkZCgnZ2FtZS13cmFwcGVyJyk7XHJcbiAgaWYgKHRhYmxlKSB7XHJcbiAgICBlbC5hcHBlbmRDaGlsZCh0YWJsZSk7XHJcbiAgfVxyXG4gIFxyXG4gIGxldCBjbGlja0NhbGxiYWNrO1xyXG5cclxuICBsZXQgZmllbGQgPSBjcmVhdGVGaWVsZCgpO1xyXG4gIGVsLmFwcGVuZENoaWxkKGZpZWxkKTtcclxuXHJcbiAgbGV0IG1hc2sgPSBjcmVhdGVNYXNrKCk7XHJcbiAgbWFzay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gZmllbGQuc3RhcnQoKSlcclxuICBmaWVsZC5hcHBlbmRDaGlsZChtYXNrKTtcclxuXHJcbiAgZmllbGQub25Mb3NlID0gKGNhbGxiYWNrKSA9PiB7XHJcbiAgICBjbGlja0NhbGxiYWNrID0gY2FsbGJhY2s7XHJcbiAgICBtYXNrLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xyXG4gIH1cclxuXHJcbiAgZmllbGQuc3RhcnQgPSAoKSA9PiB7XHJcbiAgICBtYXNrLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGlmICh0eXBlb2YgY2xpY2tDYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiKSBjbGlja0NhbGxiYWNrKCk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZmllbGQ7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBHYW1lRmllbGQ7IiwiY29uc3QgR2FtZVRhYmxlID0gKHBhcmFtcykgPT4ge1xyXG4gIGxldCB0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0YWJsZVwiKTtcclxuICB0YWJsZS5jbGFzc0xpc3QuYWRkKFwiZ2FtZS10YWJsZVwiKTtcclxuXHJcbiAgbGV0IG5vZGVzID0ge307XHJcblxyXG4gIGZvciAobGV0IHBhcmFtTmFtZSBpbiBwYXJhbXMpIHtcclxuICAgIGxldCBwYXJhbSA9IHBhcmFtc1twYXJhbU5hbWVdO1xyXG5cclxuICAgIGxldCByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidHJcIik7XHJcblxyXG4gICAgbGV0IG5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGRcIik7XHJcbiAgICBuYW1lLnRleHRDb250ZW50ID0gcGFyYW0ubmFtZTtcclxuICAgIHJvdy5hcHBlbmRDaGlsZChuYW1lKTtcclxuXHJcbiAgICBsZXQgdmFsdWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGRcIik7XHJcbiAgICB2YWx1ZS50ZXh0Q29udGVudCA9IHBhcmFtLnZhbHVlIHx8IDA7XHJcbiAgICByb3cuYXBwZW5kQ2hpbGQodmFsdWUpO1xyXG5cclxuICAgIG5vZGVzW3BhcmFtTmFtZV0gPSB2YWx1ZTtcclxuXHJcbiAgICB0YWJsZS5hcHBlbmRDaGlsZChyb3cpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGVsZW1lbnQ6IHRhYmxlLFxyXG4gICAgdXBkYXRlOiAoZGF0YSkgPT4ge1xyXG4gICAgICBmb3IgKGxldCBwYXJhbSBpbiBkYXRhKSB7XHJcbiAgICAgICAgbGV0IG5vZGUgPSBub2Rlc1twYXJhbV07XHJcbiAgICAgICAgaWYgKG5vZGUpIG5vZGUudGV4dENvbnRlbnQgPSBkYXRhW3BhcmFtXTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEdhbWVUYWJsZTsiLCJpbXBvcnQgRGlzcGF0Y2hlciBmcm9tIFwiZXZlbnRzLWRpc3BhdGNoXCI7XHJcblxyXG4vKipcclxuICogSW50ZXJzZWN0b3JcclxuICogQGNsYXNzXHJcbiAqIEBkZXNjcmlwdGlvbiDQvtC/0YDQtdC00LXQu9GP0LXRgiDQv9C10YDQtdGB0LXRh9C10L3QuNC1INC+0LHRitC10LrRgtC+0LJcclxuICovXHJcbmNsYXNzIEludGVyc2VjdG9yIHtcclxuICAvKipcclxuICAgKiDQntC/0YDQtdC00LXQu9GP0LXRgiDQv9C10YDQtdGB0LXRh9C10L3QuNC1INC+0LHRitC10LrRgtC+0LJcclxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBvYmoxINC/0LXRgNCy0YvQuSDQvtCx0YrQtdC60YJcclxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBvYmoyINCy0YLQvtGA0L7QuSDQvtCx0YrQtdC60YJcclxuICAgKiBAcGFyYW0ge051bWJlcn0gW29mZnNldF0g0LzQuNC90LjQvNCw0LvRjNC90L7QtSDQv9C10YDQtdC60YDRi9GC0LjQtSDQvtC00L3QvtCz0L4g0L7QsdGK0LXQutGC0LAg0LTRgNGD0LPQuNC8XHJcbiAgICogQHJldHVybnMge0Jvb2xlYW59XHJcbiAgICovXHJcbiAgY2hlY2sob2JqMSwgb2JqMiwgb2Zmc2V0ID0gMCkge1xyXG4gICAgaWYgKG9iajEucmVtb3ZlZCB8fCBvYmoyLnJlbW92ZWQpIHtcclxuICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBjb29yZHMxID0gb2JqMS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIGxldCBjb29yZHMyID0gb2JqMi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHJcbiAgICAvLyDQstGC0L7RgNC+0Lkg0L7QsdGK0LXQutGCINCy0YvRiNC1INC/0LXRgNCy0L7Qs9C+XHJcbiAgICBpZiAoY29vcmRzMS50b3AgPiBjb29yZHMyLmJvdHRvbSAtIG9mZnNldCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgLy8g0LLRgtC+0YDQvtC5INC+0LHRitC10LrRgiDQvdC40LbQtSDQv9C10YDQstC+0LPQvlxyXG4gICAgaWYgKGNvb3JkczEuYm90dG9tIDwgY29vcmRzMi50b3AgKyBvZmZzZXQpIHJldHVybiBmYWxzZTtcclxuICAgIC8vINCy0YLQvtGA0L7QuSDQvtCx0YrQtdC60YIg0LvQtdCy0LXQtSDQv9C10YDQstC+0LPQvlxyXG4gICAgaWYgKGNvb3JkczEubGVmdCA+IGNvb3JkczIucmlnaHQgLSBvZmZzZXQpIHJldHVybiBmYWxzZTtcclxuICAgIC8vINCy0YLQvtGA0L7QuSDQvtCx0YrQtdC60YIg0L/RgNCw0LLQtdC1INC/0LXRgNCy0L7Qs9C+XHJcbiAgICBpZiAoY29vcmRzMS5yaWdodCA8IGNvb3JkczIubGVmdCArIG9mZnNldCkgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog0J/QtdGA0LjQvtC00LjRh9C10YHQutC4INC/0YDQvtCy0LXRgNGP0LXRgiDQv9C10YDQtdGB0LXRh9C10L3QuNC1INC+0LHRitC10LrRgtC+0LJcclxuICAgKiBAcGFyYW0ge0dhbWVPYmplY3R9IG9iajEgXHJcbiAgICogQHBhcmFtIHtHYW1lT2JqZWN0fSBvYmoyIFxyXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBbcGVyaW9kXSDQv9C10YDQuNC+0LTQuNGH0L3QvtGB0YLRjCDQv9GA0L7QstC10YDQutC4INCyINC80YFcclxuICAgKi9cclxuICB3YXRjaChvYmoxLCBvYmoyLCBvZmZzZXQsIHBlcmlvZCA9IDEwMCkge1xyXG4gICAgbmV3IERpc3BhdGNoZXIob2JqMSk7XHJcbiAgICBuZXcgRGlzcGF0Y2hlcihvYmoyKTtcclxuXHJcbiAgICBsZXQgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgIGxldCBwbGFjZXMgPSB0aGlzLmNoZWNrKG9iajEsIG9iajIsIG9mZnNldCk7XHJcbiAgICAgIGlmIChwbGFjZXMpIHtcclxuXHJcbiAgICAgICAgb2JqMS50cmlnZ2VyKEludGVyc2VjdG9yLmV2ZW50cy5jb2xsaXNpb24sIHsgb2JqZWN0OiBvYmoyIH0pO1xyXG4gICAgICAgIG9iajIudHJpZ2dlcihJbnRlcnNlY3Rvci5ldmVudHMuY29sbGlzaW9uLCB7IG9iamVjdDogb2JqMSB9KTtcclxuICAgICAgfVxyXG4gICAgfSwgcGVyaW9kKTtcclxuXHJcbiAgICByZXR1cm4gdGltZXI7XHJcbiAgfVxyXG5cclxuICBzdG9wV2F0Y2hlcih3YXRjaGVyKSB7XHJcbiAgICBjbGVhckludGVydmFsKHdhdGNoZXIpO1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEBzdGF0aWNcclxuICovXHJcbkludGVyc2VjdG9yLmV2ZW50cyA9IHtcclxuICBjb2xsaXNpb246IFwiaW50ZXJzZWN0b3IuZXZlbnRzLmNvbGxpc2lvblwiLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW50ZXJzZWN0b3I7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGlzcGF0Y2hlciB7XHJcbiAgY29uc3RydWN0b3Iob2JqZWN0KSB7XHJcbiAgICB0aGlzLmNhbGxiYWNrcyA9IHt9O1xyXG4gICAgXHJcbiAgICBpZiAob2JqZWN0KSB7XHJcbiAgICAgIG9iamVjdC5vbiA9ICguLi5kYXRhKSA9PiB0aGlzLm9uKC4uLmRhdGEpO1xyXG4gICAgICBvYmplY3Qub25jZSA9ICguLi5kYXRhKSA9PiB0aGlzLm9uY2UoLi4uZGF0YSk7XHJcbiAgICAgIG9iamVjdC5vZmYgPSAoLi4uZGF0YSkgPT4gdGhpcy5vZmYoLi4uZGF0YSk7XHJcbiAgICAgIG9iamVjdC50cmlnZ2VyID0gKC4uLmRhdGEpID0+IHRoaXMudHJpZ2dlciguLi5kYXRhKTtcclxuICAgIH0gXHJcbiAgfVxyXG5cclxuICBvbihldmVudE5hbWUsIGNhbGxiYWNrKSB7XHJcbiAgICBpZiAoIXRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0pIHRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0gPSBbXTtcclxuICAgIGxldCBjYiA9IGRhdGEgPT4gY2FsbGJhY2soZGF0YSk7XHJcbiAgICB0aGlzLmNhbGxiYWNrc1tldmVudE5hbWVdLnB1c2goY2IpO1xyXG4gIH1cclxuXHJcbiAgb25jZShldmVudE5hbWUsIGNhbGxiYWNrKSB7XHJcbiAgICBpZiAoIXRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0pIHRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0gPSBbXTtcclxuICAgIGxldCBjYiA9IGRhdGEgPT4ge1xyXG4gICAgICBjYWxsYmFjayhkYXRhKTtcclxuICAgICAgdGhpcy5vZmYoZXZlbnROYW1lLCBjYik7XHJcbiAgICB9XHJcbiAgICB0aGlzLmNhbGxiYWNrc1tldmVudE5hbWVdLnB1c2goY2IpO1xyXG4gIH1cclxuXHJcbiAgb2ZmKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcclxuICAgIGlmICh0aGlzLmNhbGxiYWNrc1tldmVudE5hbWVdKSB7XHJcbiAgICAgIGxldCBpbmRleCA9IHRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0uaW5kZXhPZihjYWxsYmFjayk7XHJcbiAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrc1tldmVudE5hbWVdLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHRyaWdnZXIoZXZlbnROYW1lLCBkYXRhKSB7XHJcbiAgICBsZXQgY2JzID0gdGhpcy5jYWxsYmFja3NbZXZlbnROYW1lXTtcclxuICAgIGlmIChjYnMpIHtcclxuICAgICAgY2JzLmZvckVhY2goY2IgPT4ge1xyXG4gICAgICAgIGxldCBvZmYgPSAoKSA9PiB0aGlzLm9mZihldmVudE5hbWUsIGNiKVxyXG4gICAgICAgIGNiKGRhdGEsIG9mZik7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxufSIsImltcG9ydCBEaXNwYXRjaGVyIGZyb20gXCJldmVudHMtZGlzcGF0Y2hcIjtcclxuXHJcbmNsYXNzIEtleWJvYXJkTGlzdGVuZXIge1xyXG4gIGNvbnN0cnVjdG9yKHBlcmlvZCkge1xyXG4gICAgbmV3IERpc3BhdGNoZXIodGhpcyk7XHJcbiAgICB0aGlzLmFjdGlvbnMgPSBbXTtcclxuICAgIHRoaXMuc2V0TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLnRpbWVyID0gbnVsbDtcclxuICAgIHRoaXMudGltZXJJbnRlcnZhbCA9IHBlcmlvZCB8fCAxMDA7IC8vIG1zXHJcbiAgfVxyXG5cclxuICBzZXRMaXN0ZW5lcnMoKSB7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcclxuICAgICAgbGV0IGNvZGUgPSBlLmtleUNvZGU7XHJcbiAgICAgIGxldCBhY3Rpb24gPSBLZXlib2FyZExpc3RlbmVyLmNvZGVzW2NvZGVdO1xyXG4gICAgICBpZiAoYWN0aW9uKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5hY3Rpb25zLmluZGV4T2YoYWN0aW9uKTtcclxuICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XHJcbiAgICAgICAgICB0aGlzLmFjdGlvbnMucHVzaChhY3Rpb24pO1xyXG4gICAgICAgICAgdGhpcy50cmlnZ2VyKGFjdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5zdGFydGVkKSB0aGlzLnN0YXJ0KCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBlID0+IHtcclxuICAgICAgbGV0IGNvZGUgPSBlLmtleUNvZGU7XHJcbiAgICAgIGxldCBhY3Rpb24gPSBLZXlib2FyZExpc3RlbmVyLmNvZGVzW2NvZGVdO1xyXG4gICAgICBpZiAoYWN0aW9uKSB7XHJcbiAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5hY3Rpb25zLmluZGV4T2YoYWN0aW9uKTtcclxuICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB0aGlzLmFjdGlvbnMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICBpZiAodGhpcy5hY3Rpb25zLmxlbmd0aCA9PSAwKSB0aGlzLnN0b3AoKTtcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgdGhpcy5zdGFydGVkID0gdHJ1ZTtcclxuICAgIGxldCBsYXVuY2ggPSAoKSA9PiB7XHJcbiAgICAgIHRoaXMuYWN0aW9ucy5mb3JFYWNoKGFjdGlvbiA9PiB7XHJcbiAgICAgICAgdGhpcy50cmlnZ2VyKGFjdGlvbik7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKGxhdW5jaCwgdGhpcy50aW1lckludGVydmFsKTtcclxuICAgIGxhdW5jaCgpO1xyXG4gIH1cclxuXHJcbiAgc3RvcCgpIHtcclxuICAgIHRoaXMuc3RhcnRlZCA9IGZhbHNlO1xyXG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTtcclxuICB9XHJcbn1cclxuXHJcbktleWJvYXJkTGlzdGVuZXIuY29kZXMgPSB7XHJcbiAgMzk6IFwiUklHSFRcIixcclxuICA2ODogXCJSSUdIVFwiLFxyXG4gIDEwMjogXCJSSUdIVFwiLFxyXG5cclxuICAzNzogXCJMRUZUXCIsXHJcbiAgNjU6IFwiTEVGVFwiLFxyXG4gIDEwMDogXCJMRUZUXCIsXHJcblxyXG4gIDQwOiBcIkRPV05cIixcclxuICA4MzogXCJET1dOXCIsXHJcbiAgOTg6IFwiRE9XTlwiLFxyXG5cclxuICAzODogXCJVUFwiLFxyXG4gIDg3OiBcIlVQXCIsXHJcbiAgMTA0OiBcIlVQXCIsXHJcblxyXG4gIDEzOiBcIkVOVEVSXCIsXHJcbiAgMzI6IFwiU1BBQ0VcIixcclxuICA4OiBcIkJBQ0tTUEFDRVwiLFxyXG4gIDQ2OiBcIkRFTEVURVwiXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBLZXlib2FyZExpc3RlbmVyOyIsImltcG9ydCBNb3ZlciBmcm9tIFwiLi9nYW1lLXBsYXllci9tb3ZlclwiO1xyXG5pbXBvcnQgS2V5Ym9hcmRNb3ZlciBmcm9tIFwiLi9nYW1lLXBsYXllci9rZXlib2FyZC1tb3ZlclwiO1xyXG5cclxuZXhwb3J0IHsgTW92ZXIsIEtleWJvYXJkTW92ZXIgfTsiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5nYW1lLWFmcmljYSAuZ2FtZS10YWJsZSB7XFxyXFxuICB3aWR0aDogNjAwcHg7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWFmcmljYSAuZ2FtZS1maWVsZCB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBoZWlnaHQ6IDQwMHB4O1xcclxcbiAgd2lkdGg6IDYwMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1hZnJpY2EgI2hlcm8ge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcXHJcXG4gIFxcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvcGxheWVyLnBuZycpO1xcclxcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCA1MCUgYm90dG9tIC01cHg7XFxyXFxuICB6LWluZGV4OiAyMDtcXHJcXG5cXHJcXG4gIHdpZHRoOiA1MHB4O1xcclxcbiAgaGVpZ2h0OiA1MHB4O1xcclxcbn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5nYW1lLWFmcmljYSAuZ3JvdW5kIHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGJvdHRvbTogMDtcXHJcXG4gIGxlZnQ6IDA7IHJpZ2h0OiAwO1xcclxcbiAgaGVpZ2h0OiAyNXB4O1xcclxcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcXHJcXG4gIGJhY2tncm91bmQ6IHVybCgnaW1nL3NhbmQuanBnJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWFmcmljYSAuY29pbiB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2ltZy9jb2luLmpwZycpO1xcclxcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYWZyaWNhICNtYXAge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvYmcucG5nJyk7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0IDAgYm90dG9tIDEwcHg7XFxyXFxuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gdmFyKC0tZmllbGQtd2lkdGgpO1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1hZnJpY2EgLnBsYXRmb3JtIHtcXHJcXG4gIGJhY2tncm91bmQ6IHVybCgnaW1nL3NhbmQuanBnJyk7XFxyXFxufVxcclxcblxcclxcblxcclxcbi5nYW1lLWFmcmljYSAuZmluaXNoIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL2Zsb3dlci5wbmcnKTtcXHJcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogNzBweDtcXHJcXG59XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIjdHJpYmUge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvdHJpYmUucG5nJyk7XFxyXFxuICBiYWNrZ3JvdW5kLXNpemU6IDEwMCU7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b207XFxyXFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcclxcbiAgd2lkdGg6IDEwMHB4O1xcclxcbiAgaGVpZ2h0OiA1MHB4O1xcclxcbiAgZmlsdGVyOiBodWUtcm90YXRlKDI5MGRlZykgYnJpZ2h0bmVzcyg1KTtcXHJcXG4gIHRyYW5zZm9ybTogc2NhbGVYKC0xKTtcXHJcXG59XFxyXFxuXFxyXFxuI3RyaWJlLnJldmVydCB7XFxyXFxuICB0cmFuc2Zvcm06IG5vbmU7XFxyXFxufVxcclxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmdhbWUtYW1lcmljYSAuYmxvY2sge1xcclxcbiAgZmxvYXQ6IGxlZnQ7XFxyXFxuICBoZWlnaHQ6IDIwcHg7XFxyXFxuICB3aWR0aDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYW1lcmljYSAud2FsbCB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1hbWVyaWNhIC5tZSB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWFtZXJpY2EgLm1lOmFmdGVyIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyM2FmZWU7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxMDAlO1xcclxcbiAgY29udGVudDogJyc7XFxyXFxuICBoZWlnaHQ6IDIwcHg7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICB0b3A6IDA7XFxyXFxuICB3aWR0aDogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYW1lcmljYSAuZmluaXNoIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMzFkMWQ7XFxyXFxufVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxyXFxuLnBlbmd1aW4ge1xcclxcbiAgd2lkdGg6IDM1cHg7XFxyXFxuICBoZWlnaHQ6IDQwcHg7XFxyXFxuXFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxufVxcclxcblxcclxcbi5wZW5ndWluOmJlZm9yZSB7XFxyXFxuICBjb250ZW50OiAnJztcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL3Blbmd1aW4ucG5nJyk7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcclxcblxcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgbGVmdDogLTIwcHg7IFxcclxcbiAgdG9wOiAwO1xcclxcblxcclxcbiAgd2lkdGg6IDc1cHg7XFxyXFxuICBoZWlnaHQ6IDUwcHg7XFxyXFxufVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnNub3dmbGFrZSB7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvc25vd2ZsYWtlLnBuZycpO1xcclxcblxcclxcbiAgd2lkdGg6IDMwcHg7XFxyXFxuICBoZWlnaHQ6IDMwcHg7XFxyXFxuXFxyXFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuXFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxufVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmdhbWUtYW50YXJjdGljYSAuZ2FtZS1maWVsZCB7XFxyXFxuICB3aWR0aDogNTAwcHg7XFxyXFxuICBoZWlnaHQ6IDQwMHB4O1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvbW91bnRzLnBuZycpO1xcclxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYW50YXJjdGljYSAuZ3JvdW5kIHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGxlZnQ6IDA7IHJpZ2h0OiAwO1xcclxcbiAgYm90dG9tOiAwO1xcclxcbiAgaGVpZ2h0OiA0MHB4O1xcclxcblxcclxcbiAgYmFja2dyb3VuZDogdXJsKCdpbWcvaWNlLmpwZycpIGNlbnRlciAvIGF1dG8gNDBweCByZXBlYXQteDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYW50YXJjdGljYSAjcGxheWVyIHtcXHJcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXHJcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxyXFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2ltZy9wbGF5ZXIucG5nJyk7XFxyXFxuXFxyXFxuICB3aWR0aDogNjRweDtcXHJcXG4gIGhlaWdodDogNjRweDtcXHJcXG5cXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGJvdHRvbTogMjBweDtcXHJcXG59XFxyXFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXHJcXG4uZ2FtZS1hc2lhIC5jYXIge1xcclxcbiAgd2lkdGg6IDMwcHg7XFxyXFxuICBoZWlnaHQ6IDUwcHg7XFxyXFxuXFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWFzaWEgLmNhcjpiZWZvcmUge1xcclxcbiAgY29udGVudDogJyc7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2ltZy9ncmVlbi1jYXIucG5nJyk7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XFxyXFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcclxcblxcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgbGVmdDogLTVweDsgXFxyXFxuICB0b3A6IC02cHg7XFxyXFxuXFxyXFxuICB3aWR0aDogNDBweDtcXHJcXG4gIGhlaWdodDogNzJweDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXNpYSAuY2FyLTE6YmVmb3JlIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL3JlZC1jYXIucG5nJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWFzaWEgLmNhci0yOmJlZm9yZSB7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2ltZy9ibHVlLWNhci5wbmcnKTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXNpYSAuY2FyLTM6YmVmb3JlIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL3llbGxvdy1jYXIucG5nJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWFzaWEgI2hlcm8ge1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvcGxheWVyLnBuZycpO1xcclxcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG5cXHJcXG4gIHdpZHRoOiA2NHB4O1xcclxcbiAgaGVpZ2h0OiA2NHB4O1xcclxcblxcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgei1pbmRleDogMjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXNpYSAjdHJhY2sge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIHJpZ2h0OiAwO1xcclxcbiAgYm90dG9tOiAwO1xcclxcbiAgei1pbmRleDogMTtcXHJcXG5cXHJcXG4gIGhlaWdodDogMjUwMHB4O1xcclxcblxcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXNpYSAjdHJhY2s6YmVmb3JlIHtcXHJcXG4gIGNvbnRlbnQ6ICcnO1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgbGVmdDogNTAlO1xcclxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xcclxcbiAgYm90dG9tOiAwO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgd2lkdGg6IDMzJTtcXHJcXG4gIGJvcmRlci13aWR0aDogNnB4O1xcclxcbiAgYm9yZGVyLXN0eWxlOiBub25lIGRhc2hlZDtcXHJcXG4gIGJvcmRlci1jb2xvcjogd2hpdGU7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWFzaWEgI3RyYWNrIC5zaWduIHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIHJpZ2h0OiAwO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiA1cHg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgY29sb3I6IHdoaXRlO1xcclxcbiAgZm9udC1zaXplOiAxMnB4O1xcclxcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxyXFxuICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1hc2lhICN0cmFjayAuc2lnbjphZnRlciB7XFxyXFxuICBjb250ZW50OiAnJztcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIHdpZHRoOiAyMHB4O1xcclxcbiAgaGVpZ2h0OiA1cHg7XFxyXFxuICByaWdodDogMDtcXHJcXG4gIHRvcDogM3B4O1xcclxcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxyXFxuICBtYXJnaW4tbGVmdDogNXB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1hc2lhICN0cmFjayAuZmluaXNoIHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGxlZnQ6IDA7XFxyXFxuICByaWdodDogMDtcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gIGNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXNpYSAjdHJhY2sgLmZpbmlzaDphZnRlciB7XFxyXFxuICBjb250ZW50OiAnJztcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDZweDtcXHJcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcbiAgbWFyZ2luLXRvcDogNHB4O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4uci10YWJsZSB7XFxyXFxuICB3aWR0aDogdmFyKC0tZmllbGQtaGVpZ2h0KTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXNpYSAuci10YWJsZV9fcG9pbnRzIHtcXHJcXG4gIGZvbnQtc2l6ZTogMDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXNpYSAuci10YWJsZV9fcG9pbnRzOmJlZm9yZSwgLmdhbWUtYXNpYSAuci10YWJsZV9fcG9pbnRzIC5yLXRhYmxlX192YWx1ZSB7XFxyXFxuICBmb250LXNpemU6IDIwcHg7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWFzaWEgLnItdGFibGVfX3BvaW50czpiZWZvcmUge1xcclxcbiAgY29udGVudDogJ1RhcmdldDogJztcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXNpYSAuci10YWJsZV9fcG9pbnRzIC5yLXRhYmxlX192YWx1ZTphZnRlciB7XFxyXFxuICBjb250ZW50OiAnbSc7XFxyXFxufVxcclxcblxcclxcbiNzdGFydCwgI3dpbiwgI3JlcGxheSwgI2xvc2Uge1xcclxcbiAgY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG4jbG9zZSB7XFxyXFxuICBmb250LXNpemU6IDEuNWVtO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1hc2lhIC5nYW1lLWZpZWxkIHtcXHJcXG4gIHdpZHRoOiA0MDBweDtcXHJcXG4gIGhlaWdodDogNTAwcHg7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiN0cmFjayB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBsZWZ0OiAwO1xcclxcbiAgcmlnaHQ6IDA7XFxyXFxuICBib3R0b206IDA7XFxyXFxuICB6LWluZGV4OiAxO1xcclxcblxcclxcbiAgaGVpZ2h0OiAyNTAwcHg7XFxyXFxuXFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XFxyXFxufVxcclxcblxcclxcbiN0cmFjazpiZWZvcmUge1xcclxcbiAgY29udGVudDogJyc7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBsZWZ0OiA1MCU7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XFxyXFxuICBib3R0b206IDA7XFxyXFxuICB0b3A6IDA7XFxyXFxuICB3aWR0aDogMzMlO1xcclxcbiAgYm9yZGVyLXdpZHRoOiA2cHg7XFxyXFxuICBib3JkZXItc3R5bGU6IG5vbmUgZGFzaGVkO1xcclxcbiAgYm9yZGVyLWNvbG9yOiB3aGl0ZTtcXHJcXG59XFxyXFxuXFxyXFxuI3RyYWNrIC5zaWduIHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIHJpZ2h0OiAwO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiA1cHg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgY29sb3I6IHdoaXRlO1xcclxcbiAgZm9udC1zaXplOiAxMnB4O1xcclxcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxyXFxuICBwYWRkaW5nLXJpZ2h0OiAyNXB4O1xcclxcbn1cXHJcXG5cXHJcXG4jdHJhY2sgLnNpZ246YWZ0ZXIge1xcclxcbiAgY29udGVudDogJyc7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICB3aWR0aDogMjBweDtcXHJcXG4gIGhlaWdodDogNXB4O1xcclxcbiAgcmlnaHQ6IDA7XFxyXFxuICB0b3A6IDNweDtcXHJcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcbiAgbWFyZ2luLWxlZnQ6IDVweDtcXHJcXG59XFxyXFxuXFxyXFxuI3RyYWNrIC5maW5pc2gge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIHJpZ2h0OiAwO1xcclxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgY29sb3I6IHdoaXRlO1xcclxcbn1cXHJcXG5cXHJcXG4jdHJhY2sgLmZpbmlzaDphZnRlciB7XFxyXFxuICBjb250ZW50OiAnJztcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDZweDtcXHJcXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcbiAgbWFyZ2luLXRvcDogNHB4O1xcclxcbn1cXHJcXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5nYW1lLWF1c3RyYWxpYSAuZ2FtZS1maWVsZCB7XFxyXFxuICB3aWR0aDogNjAwcHg7XFxyXFxuICBoZWlnaHQ6IDQwMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4uZ2FtZS1hdXN0cmFsaWEgLmVuZW15IHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGJvdHRvbTogMTBweDtcXHJcXG4gIHdpZHRoOiAxMjBweDtcXHJcXG4gIGhlaWdodDogMTIwcHg7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2ltZy9rZW5nby5wbmcnKTtcXHJcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxyXFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgYm90dG9tO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1hdXN0cmFsaWEgLmVuZW15LnNob3Qge1xcclxcbiAgZmlsdGVyOiBodWUtcm90YXRlKDEyMGRlZyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWF1c3RyYWxpYSAuZW5lbXlbZGF0YS1saWZlcz1cXFwiM1xcXCJdIHtcXHJcXG4gIFxcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1hdXN0cmFsaWEgLmVuZW15W2RhdGEtbGlmZXM9XFxcIjJcXFwiXSB7XFxyXFxuICBcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtYXVzdHJhbGlhIC5lbmVteVtkYXRhLWxpZmVzPVxcXCIxXFxcIl0ge1xcclxcbiAgXFxyXFxufVxcclxcblxcclxcbi5nYW1lLWF1c3RyYWxpYSAubGluZSB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBsZWZ0OiAwOyByaWdodDogMDtcXHJcXG4gIGhlaWdodDogOTBweDtcXHJcXG4gIGJhY2tncm91bmQ6ICNjNWJhOWY7XFxyXFxufVxcclxcbi5nYW1lLWF1c3RyYWxpYSAubGluZVtkYXRhLWluZGV4PVxcXCIxXFxcIl0geyB6LWluZGV4OiAzOyB9XFxyXFxuLmdhbWUtYXVzdHJhbGlhIC5saW5lW2RhdGEtaW5kZXg9XFxcIjJcXFwiXSB7IHotaW5kZXg6IDI7IH1cXHJcXG4uZ2FtZS1hdXN0cmFsaWEgLmxpbmVbZGF0YS1pbmRleD1cXFwiM1xcXCJdIHsgei1pbmRleDogMTsgfVxcclxcbi5nYW1lLWF1c3RyYWxpYSAuc3BvdCB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICB3aWR0aDogMTAwcHg7XFxyXFxuICBoZWlnaHQ6IDkwcHg7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1nL2dyb3VuZC5wbmcpO1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWF1c3RyYWxpYSAuc3BvdDpob3ZlciB7XFxyXFxuICBvcGFjaXR5OiAwLjY7XFxyXFxufVxcclxcblxcclxcbi5wbGFudHMtYm9hcmQge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIHJpZ2h0OiAwO1xcclxcbiAgaGVpZ2h0OiA4MHB4O1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGltZy93b29kLnBuZyk7XFxyXFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXHJcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxufVxcclxcblxcclxcbi5wbGFudC5wbGFudC1wcmV2aWV3IHtcXHJcXG4gIHdpZHRoOiAxNjBweDtcXHJcXG4gIGhlaWdodDogODBweDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCAxMHB4IGNlbnRlcjtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLnBsYW50LXByZXZpZXcuYWN0aXZlOmFmdGVyLCAucGxhbnQtcHJldmlldzpob3ZlcjphZnRlciB7XFxyXFxuICBjb250ZW50OiAnJztcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGJhY2tncm91bmQ6IGdvbGRlbnJvZDtcXHJcXG4gIG9wYWNpdHk6IDAuNDtcXHJcXG4gIHRvcDogMDsgbGVmdDogMDsgYm90dG9tOiAwOyByaWdodDogMDtcXHJcXG59XFxyXFxuXFxyXFxuLnBsYW50LXByZXZpZXdfX3ByaWNlIHtcXHJcXG4gIGNvbG9yOiB3aGl0ZTtcXHJcXG4gIHBhZGRpbmctbGVmdDogOTVweDtcXHJcXG59XFxyXFxuXFxyXFxuLnBsYW50IHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG5cXHJcXG4gIHdpZHRoOiAxMDBweDtcXHJcXG4gIGhlaWdodDogOTBweDtcXHJcXG5cXHJcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxyXFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLXNpemU6IDYwcHggYXV0bztcXHJcXG59XFxyXFxuLnBsYW50W2RhdGEtcGxhbnQ9XFxcImJhc2VcXFwiXSB7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1nL2Jhc2UuZ2lmKTtcXHJcXG59XFxyXFxuLnBsYW50W2RhdGEtcGxhbnQ9XFxcInBvd2VyXFxcIl0ge1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGltZy9iYXNlLmdpZik7XFxyXFxuICBmaWx0ZXI6IGh1ZS1yb3RhdGUoNzVkZWcpO1xcclxcbn1cXHJcXG4ucGxhbnRbZGF0YS1wbGFudD1cXFwibW9uZXlcXFwiXSB7XFxyXFxuXFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1nL21vbmV5LnBuZyk7XFxyXFxufVxcclxcbi5wbGFudFtkYXRhLXBsYW50PVxcXCJtb25leVxcXCJdIC5iZyB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBib3R0b206IDA7XFxyXFxuICBsZWZ0OiAwO1xcclxcbiAgcmlnaHQ6IDA7XFxyXFxuICBiYWNrZ3JvdW5kOiBnb2xkZW5yb2Q7XFxyXFxuICBvcGFjaXR5OiAwLjQ7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgXFxyXFxufVxcclxcbi5wbGFudFtkYXRhLXBsYW50PVxcXCJtb25leVxcXCJdW2RhdGEtcmVhZHldIC5iZyB7XFxyXFxuICBvcGFjaXR5OiAwLjc7XFxyXFxuICBib3gtc2hhZG93OiAwIDAgNHB4IDFweCBnb2xkZW5yb2Q7XFxyXFxufVxcclxcblxcclxcbi5wbGFudC1idWxsZXQge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAxNXB4O1xcclxcbiAgd2lkdGg6IDIwcHg7XFxyXFxuICBoZWlnaHQ6IDIwcHg7XFxyXFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICBiYWNrZ3JvdW5kOiAjNjZmZTZjO1xcclxcbiAgYm94LXNoYWRvdzogMnB4IDJweCAycHggZ3JlZW47XFxyXFxufVxcclxcbi5wbGFudC1idWxsZXQucG93ZXIge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAxNXB4O1xcclxcbiAgd2lkdGg6IDIwcHg7XFxyXFxuICBoZWlnaHQ6IDIwcHg7XFxyXFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICBiYWNrZ3JvdW5kOiAjMDBlOGZmO1xcclxcbiAgYm94LXNoYWRvdzogMnB4IDJweCAycHggYmx1ZTtcXHJcXG59XFxyXFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZ2FtZS1ldXJvcGUge1xcclxcbiAgcGFkZGluZy10b3A6IDUwcHg7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAucm93IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jZWxsIHtcXHJcXG4gIHdpZHRoOiAxNDBweDtcXHJcXG4gIGhlaWdodDogMTI1cHg7XFxyXFxuICBwYWRkaW5nOiA1cHg7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZCB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBmb250LXNpemU6IDEycHg7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGhlaWdodDogMTAwJTtcXHJcXG4gIGZvbnQtc2l6ZTogMDtcXHJcXG4gIGJhY2tncm91bmQ6IHVybCgnaW1nL2JhY2sucG5nJykgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xcclxcbiAgZmlsdGVyOiBncmF5c2NhbGUoMC41KTtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG5cXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuXFxyXFxuICBjb2xvcjogd2hpdGU7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZDpob3ZlciB7XFxyXFxuICBmaWx0ZXI6IGdyYXlzY2FsZSgwKTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jYXJkLnNob3cge1xcclxcbiAgZm9udC1zaXplOiAxMnB4O1xcclxcblxcclxcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jYXJkLnNob3c6YmVmb3JlIHtcXHJcXG4gIGJhY2tncm91bmQ6IGJsYWNrO1xcclxcbiAgei1pbmRleDogMDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jYXJkIHNwYW4ge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgei1pbmRleDogMjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jYXJkOmFmdGVyLCAuY2FyZDpiZWZvcmUge1xcclxcbiAgY29udGVudDogJyc7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICB0b3A6IDA7IGJvdHRvbTogMDtcXHJcXG4gIGxlZnQ6IDA7IHJpZ2h0OiAwO1xcclxcbiAgb3BhY2l0eTogMC41O1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1ldXJvcGUgLmNhcmQud3Jvbmc6YWZ0ZXIge1xcclxcbiAgYmFja2dyb3VuZDogcmVkO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1ldXJvcGUgLmNhcmQucmlnaHQ6YWZ0ZXIge1xcclxcbiAgYmFja2dyb3VuZDogZ3JlZW47XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZC5zaG93W2RhdGEtdmFsdWU9XFxcImZyYW5jZVxcXCJdIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL2ZyYW5jZS5zdmcnKTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jYXJkLnNob3dbZGF0YS12YWx1ZT1cXFwiYmVsZ2l1bVxcXCJdIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL2JlbGdpdW0uanBnJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZC5zaG93W2RhdGEtdmFsdWU9XFxcInNwYW5lXFxcIl0ge1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvc3BhbmUuanBnJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZC5zaG93W2RhdGEtdmFsdWU9XFxcImdyZWVjZVxcXCJdIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL2dyZWVjZS5qcGcnKTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jYXJkLnNob3dbZGF0YS12YWx1ZT1cXFwiaXJlbGFuZFxcXCJdIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL2lyZWxhbmQuanBnJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZC5zaG93W2RhdGEtdmFsdWU9XFxcImNoZXpoXFxcIl0ge1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvY2hlemguanBnJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZC5zaG93W2RhdGEtdmFsdWU9XFxcIm5vcndheVxcXCJdIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL25vcndheS5qcGcnKTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jYXJkLnNob3dbZGF0YS12YWx1ZT1cXFwicG9sYW5kXFxcIl0ge1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdpbWcvcG9sYW5kLmpwZycpO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1ldXJvcGUgLmNhcmQuc2hvd1tkYXRhLXZhbHVlPVxcXCJsaXRodWFuaWFcXFwiXSB7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2ltZy9saXRodWFuaWEuanBnJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZC5zaG93W2RhdGEtdmFsdWU9XFxcIm1hY2Vkb25pYVxcXCJdIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL21hY2Vkb25pYS5qcGcnKTtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5jYXJkW2RhdGEtcmVtb3ZlZF06YmVmb3JlLFxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZFtkYXRhLXJlbW92ZWRdOmFmdGVyIHtcXHJcXG4gIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuY2FyZFtkYXRhLXJlbW92ZWRdIHNwYW4ge1xcclxcbiAgZm9udC1zaXplOiAwO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIHtcXHJcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gIHRvcDogMDsgYm90dG9tOiAwO1xcclxcbiAgbGVmdDogMDsgcmlnaHQ6IDA7XFxyXFxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5pbWFnZV9fd3JhcHBlciB7XFxyXFxuICBmbGV4LWdyb3c6IDE7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGltZyB7XFxyXFxuICBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDgwcHgpO1xcclxcbiAgbWF4LWhlaWdodDogMTAwJTtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XFxyXFxuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5pbWFnZV9fdGV4dCB7XFxyXFxuICBtYXJnaW4tdG9wOiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGJ1dHRvbiB7XFxyXFxuICBtYXJnaW46IDQwcHggMDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5pbWFnZSBidXR0b24ge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgb3V0bGluZTogbm9uZTtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxyXFxuICBoZWlnaHQ6IDYwcHg7XFxyXFxuICBwYWRkaW5nOiAxMHB4IDMwcHg7XFxyXFxuXFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1idXR0b24tYmFja2dyb3VuZCk7XFxyXFxuICBib3JkZXI6IDRweCBzb2xpZCB2YXIoLS1idXR0b24tYm9yZGVyKTtcXHJcXG5cXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIGZvbnQtZmFtaWx5OiAnUHJlc3MgU3RhcnQgMlAnLCBjdXJzaXZlO1xcclxcbiAgZm9udC1zaXplOiAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGJ1dHRvbjpob3ZlciB7XFxyXFxuICBib3JkZXItY29sb3I6IHZhcigtLWNvbnRlbnQtYmFja2dyb3VuZCk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuaW1hZ2UgYnV0dG9uOmJlZm9yZSxcXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGJ1dHRvbjphZnRlcixcXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGJ1dHRvbiBzcGFuOmJlZm9yZSxcXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGJ1dHRvbiBzcGFuOmFmdGVyIHtcXHJcXG4gIGNvbnRlbnQ6ICcnO1xcclxcbiAgd2lkdGg6IDRweDtcXHJcXG4gIGhlaWdodDogNHB4O1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIHZhcigtLWNvbnRlbnQtYmFja2dyb3VuZCk7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBkaXNwbGF5OiBibG9jaztcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5pbWFnZSBidXR0b246YmVmb3JlLFxcclxcbi5nYW1lLWV1cm9wZSAuaW1hZ2UgYnV0dG9uOmFmdGVyIHtcXHJcXG4gIHRvcDogLTRweDtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZXVyb3BlIC5pbWFnZSBidXR0b24gc3BhbjpiZWZvcmUsXFxyXFxuLmdhbWUtZXVyb3BlIC5pbWFnZSBidXR0b24gc3BhbjphZnRlciB7XFxyXFxuICBib3R0b206IC00cHg7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLWV1cm9wZSAuaW1hZ2UgYnV0dG9uOmJlZm9yZSxcXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGJ1dHRvbiBzcGFuOmJlZm9yZSB7XFxyXFxuICBsZWZ0OiAtNHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGJ1dHRvbjphZnRlcixcXHJcXG4uZ2FtZS1ldXJvcGUgLmltYWdlIGJ1dHRvbiBzcGFuOmFmdGVyIHtcXHJcXG4gIHJpZ2h0OiAtNHB4O1xcclxcbn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5nYW1lLWZpZWxkIHtcXHJcXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtZmllbGRfX21hc2sge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgYm90dG9tOiAwO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIHJpZ2h0OiAwO1xcclxcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpIHVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxMDAnIGhlaWdodD0nMTAwJyB2aWV3Qm94PScwIDAgMjQgMjQnJTNFJTNDcGF0aCBkPSdNOSAxMmwtNC40NjMgNC45NjktNC41MzctNC45NjloM2MwLTQuOTcgNC4wMy05IDktOSAyLjM5NSAwIDQuNTY1Ljk0MiA2LjE3OSAyLjQ2OGwtMi4wMDQgMi4yMzFjLTEuMDgxLTEuMDUtMi41NTMtMS42OTktNC4xNzUtMS42OTktMy4zMDkgMC02IDIuNjkxLTYgNmgzem0xMC40NjMtNC45NjlsLTQuNDYzIDQuOTY5aDNjMCAzLjMwOS0yLjY5MSA2LTYgNi0xLjYyMyAwLTMuMDk0LS42NS00LjE3NS0xLjY5OWwtMi4wMDQgMi4yMzFjMS42MTMgMS41MjYgMy43ODQgMi40NjggNi4xNzkgMi40NjggNC45NyAwIDktNC4wMyA5LTloM2wtNC41MzctNC45Njl6JyBmaWxsPSd3aGl0ZScgLyUzRSUzQy9zdmclM0VcXFwiKSBjZW50ZXIgbm8tcmVwZWF0O1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgei1pbmRleDogMTAwMDtcXHJcXG59XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdCB7XFxyXFxuICAtLWJvZHktYmFja2dyb3VuZDogYmxhY2s7XFxyXFxuICAtLWNvbnRlbnQtYmFja2dyb3VuZDogd2hpdGU7XFxyXFxuICAtLWNvbnRlbnQtYm9yZGVyOiB0cmFuc3BhcmVudDtcXHJcXG4gIC0tY29udGVudC1jb2xvcjogYmxhY2s7XFxyXFxuICAtLWJ1dHRvbi1iYWNrZ3JvdW5kOiBsaW1lO1xcclxcbiAgLS1idXR0b24tYm9yZGVyOiBibGFjaztcXHJcXG59XFxyXFxuXFxyXFxuKiB7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG59XFxyXFxuXFxyXFxuYm9keSB7XFxyXFxuICBmb250LWZhbWlseTogJ1JvYm90byBNb25vJywgc2Fucy1zZXJpZjtcXHJcXG4gIGZvbnQtc2l6ZTogMjBweDtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWJvZHktYmFja2dyb3VuZCkgdXJsKGltZy9waXhlbHMuanBnKTtcXHJcXG59XFxyXFxuXFxyXFxuLnNjcmVlbiB7XFxyXFxuICB3aWR0aDogMTAwdnc7XFxyXFxuICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLnNjcmVlbl9fY29udGFpbmVyIHtcXHJcXG4gIHdpZHRoOiA4MDBweDtcXHJcXG4gIG1pbi1oZWlnaHQ6IDUwMHB4O1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tY29udGVudC1iYWNrZ3JvdW5kKTtcXHJcXG4gIGNvbG9yOiB2YXIoLS1jb250ZW50LWNvbG9yKTtcXHJcXG4gIHBhZGRpbmc6IDQwcHggMjBweDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbn1cXHJcXG5cXHJcXG4uc2NyZWVuX19jb250ZW50IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBcXHJcXG59XFxyXFxuXFxyXFxuLnNjcmVlbl9fcGljIHtcXHJcXG4gIHdpZHRoOiAzMDBweDtcXHJcXG4gIGhlaWdodDogMzAwcHg7XFxyXFxuICBtYXJnaW4tcmlnaHQ6IDQwcHg7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG5bZGF0YS1jbGFzcz1cXFwicGl6ZHJpa1xcXCJdIC5zY3JlZW5fX3BpYyBpbWcge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlOyBsZWZ0OiAtMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uc2NyZWVuX19kZXNjcmlwdGlvbiB7XFxyXFxuICB3aWR0aDogNDYwcHg7XFxyXFxufVxcclxcblxcclxcbi5zY3JlZW5fX2Rlc2NyaXB0aW9uIHAge1xcclxcbiAgbWFyZ2luOiAxMHB4IDA7XFxyXFxufVxcclxcblxcclxcbi5zY3JlZW5fX3RpdGxlIHtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XFxyXFxuICBmb250LWZhbWlseTogJ1ByZXNzIFN0YXJ0IDJQJywgY3Vyc2l2ZTtcXHJcXG4gIGZvbnQtc2l6ZTogMzBweDtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAxLjY7XFxyXFxufVxcclxcblxcclxcbi5zY3JlZW5fX3RleHQge1xcclxcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXHJcXG59XFxyXFxuXFxyXFxuLnNjcmVlbl9fZm9vdGVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBtYXJnaW4tdG9wOiA0MHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uc2NyZWVuIGJ1dHRvbiB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBvdXRsaW5lOiBub25lO1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgYmFja2dyb3VuZDogbm9uZTtcXHJcXG4gIGhlaWdodDogNjBweDtcXHJcXG4gIHBhZGRpbmc6IDEwcHggMzBweDtcXHJcXG5cXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWJ1dHRvbi1iYWNrZ3JvdW5kKTtcXHJcXG4gIGJvcmRlcjogNHB4IHNvbGlkIHZhcigtLWJ1dHRvbi1ib3JkZXIpO1xcclxcblxcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgZm9udC1mYW1pbHk6ICdQcmVzcyBTdGFydCAyUCcsIGN1cnNpdmU7XFxyXFxuICBmb250LXNpemU6IDE2cHg7XFxyXFxufVxcclxcblxcclxcbi5zY3JlZW4gYnV0dG9uOmhvdmVyIHtcXHJcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tY29udGVudC1iYWNrZ3JvdW5kKTtcXHJcXG59XFxyXFxuXFxyXFxuLnNjcmVlbiBidXR0b246YmVmb3JlLFxcclxcbi5zY3JlZW4gYnV0dG9uOmFmdGVyLFxcclxcbi5zY3JlZW4gYnV0dG9uIHNwYW46YmVmb3JlLFxcclxcbi5zY3JlZW4gYnV0dG9uIHNwYW46YWZ0ZXIge1xcclxcbiAgY29udGVudDogJyc7XFxyXFxuICB3aWR0aDogNHB4O1xcclxcbiAgaGVpZ2h0OiA0cHg7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAgdmFyKC0tY29udGVudC1iYWNrZ3JvdW5kKTtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbn1cXHJcXG5cXHJcXG4uc2NyZWVuIGJ1dHRvbjpiZWZvcmUsXFxyXFxuLnNjcmVlbiBidXR0b246YWZ0ZXIge1xcclxcbiAgdG9wOiAtNHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uc2NyZWVuIGJ1dHRvbiBzcGFuOmJlZm9yZSxcXHJcXG4uc2NyZWVuIGJ1dHRvbiBzcGFuOmFmdGVyIHtcXHJcXG4gIGJvdHRvbTogLTRweDtcXHJcXG59XFxyXFxuXFxyXFxuLnNjcmVlbiBidXR0b246YmVmb3JlLFxcclxcbi5zY3JlZW4gYnV0dG9uIHNwYW46YmVmb3JlIHtcXHJcXG4gIGxlZnQ6IC00cHg7XFxyXFxufVxcclxcblxcclxcbi5zY3JlZW4gYnV0dG9uOmFmdGVyLFxcclxcbi5zY3JlZW4gYnV0dG9uIHNwYW46YWZ0ZXIge1xcclxcbiAgcmlnaHQ6IC00cHg7XFxyXFxufVxcclxcblxcclxcbi5zY3JlZW5fX3BpY1tkYXRhLW1hcF0ge1xcclxcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5zY3JlZW5fX3BpY1tkYXRhLW1hcD1cXFwiYXNpYVxcXCJdIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL21hcC9pbmRpYS5wbmcnKTtcXHJcXG59XFxyXFxuXFxyXFxuLnNjcmVlbl9fcGljW2RhdGEtbWFwPVxcXCJldXJvcGVcXFwiXSB7XFxyXFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2ltZy9tYXAvZXVyb3BlLnBuZycpO1xcclxcbn1cXHJcXG5cXHJcXG4uc2NyZWVuX19waWNbZGF0YS1tYXA9XFxcImFmcmljYVxcXCJdIHtcXHJcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1nL21hcC9hZnJpY2EucG5nJyk7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLXdyYXBwZXIge1xcclxcbiAgd2lkdGg6IDEwMHZ3O1xcclxcbiAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuLmdhbWUtdGFibGUge1xcclxcbiAgYmFja2dyb3VuZDogI2FhYTtcXHJcXG5cXHJcXG4gIHdpZHRoOiA0MDBweDtcXHJcXG4gIHBhZGRpbmc6IDQwcHg7XFxyXFxuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xcclxcblxcclxcbiAgZm9udC1mYW1pbHk6ICdQcmVzcyBTdGFydCAyUCcsIGN1cnNpdmU7XFxyXFxuICBmb250LXNpemU6IDIwcHg7XFxyXFxufVxcclxcblxcclxcbi5nYW1lLXRhYmxlIHRkIHtcXHJcXG4gIHBhZGRpbmc6IDVweDtcXHJcXG59XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGlzcGF0Y2hlciB7XHJcbiAgY29uc3RydWN0b3Iob2JqZWN0KSB7XHJcbiAgICB0aGlzLmNhbGxiYWNrcyA9IHt9O1xyXG4gICAgXHJcbiAgICBpZiAob2JqZWN0KSB7XHJcbiAgICAgIG9iamVjdC5vbiA9ICguLi5kYXRhKSA9PiB0aGlzLm9uKC4uLmRhdGEpO1xyXG4gICAgICBvYmplY3Qub25jZSA9ICguLi5kYXRhKSA9PiB0aGlzLm9uY2UoLi4uZGF0YSk7XHJcbiAgICAgIG9iamVjdC5vZmYgPSAoLi4uZGF0YSkgPT4gdGhpcy5vZmYoLi4uZGF0YSk7XHJcbiAgICAgIG9iamVjdC50cmlnZ2VyID0gKC4uLmRhdGEpID0+IHRoaXMudHJpZ2dlciguLi5kYXRhKTtcclxuICAgIH0gXHJcbiAgfVxyXG5cclxuICBvbihldmVudE5hbWUsIGNhbGxiYWNrKSB7XHJcbiAgICBpZiAoIXRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0pIHRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0gPSBbXTtcclxuICAgIGxldCBjYiA9IGRhdGEgPT4gY2FsbGJhY2soZGF0YSk7XHJcbiAgICB0aGlzLmNhbGxiYWNrc1tldmVudE5hbWVdLnB1c2goY2IpO1xyXG4gIH1cclxuXHJcbiAgb25jZShldmVudE5hbWUsIGNhbGxiYWNrKSB7XHJcbiAgICBpZiAoIXRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0pIHRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0gPSBbXTtcclxuICAgIGxldCBjYiA9IGRhdGEgPT4ge1xyXG4gICAgICBjYWxsYmFjayhkYXRhKTtcclxuICAgICAgdGhpcy5vZmYoZXZlbnROYW1lLCBjYik7XHJcbiAgICB9XHJcbiAgICB0aGlzLmNhbGxiYWNrc1tldmVudE5hbWVdLnB1c2goY2IpO1xyXG4gIH1cclxuXHJcbiAgb2ZmKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcclxuICAgIGlmICh0aGlzLmNhbGxiYWNrc1tldmVudE5hbWVdKSB7XHJcbiAgICAgIGxldCBpbmRleCA9IHRoaXMuY2FsbGJhY2tzW2V2ZW50TmFtZV0uaW5kZXhPZihjYWxsYmFjayk7XHJcbiAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrc1tldmVudE5hbWVdLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHRyaWdnZXIoZXZlbnROYW1lLCBkYXRhKSB7XHJcbiAgICBsZXQgY2JzID0gdGhpcy5jYWxsYmFja3NbZXZlbnROYW1lXTtcclxuICAgIGlmIChjYnMpIHtcclxuICAgICAgY2JzLmZvckVhY2goY2IgPT4ge1xyXG4gICAgICAgIGxldCBvZmYgPSAoKSA9PiB0aGlzLm9mZihldmVudE5hbWUsIGNiKVxyXG4gICAgICAgIGNiKGRhdGEsIG9mZik7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IGRlZmF1bHRNYXhWYWx1ZSA9IDE7XHJcbmNvbnN0IGRlZmF1bHRNaW5WYWx1ZSA9IDA7XHJcblxyXG5jb25zdCB0eXBlRXJyb3IgPSBcIlJhbmRvbSBnZW5lcmF0b3IgZXJyb3I6IGJvdGggbWluIG9yIG1heCB2YWx1ZXMgbXVzdCBiZSBudW1iZXJzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCAobWluLCBtYXgpID0+IHtcclxuICBpZiAoIW1heCkge1xyXG4gICAgaWYgKCFtaW4pIHtcclxuICAgICAgbWF4ID0gZGVmYXVsdE1heFZhbHVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbWF4ID0gbWluO1xyXG4gICAgfVxyXG4gICAgbWluID0gZGVmYXVsdE1pblZhbHVlO1xyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiBtaW4gIT09IFwibnVtYmVyXCIgfHwgdHlwZW9mIG1heCAhPT0gXCJudW1iZXJcIikge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKHR5cGVFcnJvcik7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heC0gbWluKSArIG1pbik7XHJcbn0iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xufTtcblxudmFyIGdldEVsZW1lbnQgPSAoZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vID0ge307XG5cblx0cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvICsgXCIgXCIgKyBvcHRpb25zLmluc2VydEF0LmJlZm9yZSk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKTtcblxuXHQgICAgaWYgKHJlc3VsdCkge1xuXHQgICAgXHQvLyBJZiB0cmFuc2Zvcm0gcmV0dXJucyBhIHZhbHVlLCB1c2UgdGhhdCBpbnN0ZWFkIG9mIHRoZSBvcmlnaW5hbCBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIHJ1bm5pbmcgcnVudGltZSB0cmFuc2Zvcm1hdGlvbnMgb24gdGhlIGNzcy5cblx0ICAgIFx0b2JqLmNzcyA9IHJlc3VsdDtcblx0ICAgIH0gZWxzZSB7XG5cdCAgICBcdC8vIElmIHRoZSB0cmFuc2Zvcm0gZnVuY3Rpb24gcmV0dXJucyBhIGZhbHN5IHZhbHVlLCBkb24ndCBhZGQgdGhpcyBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIGNvbmRpdGlvbmFsIGxvYWRpbmcgb2YgY3NzXG5cdCAgICBcdHJldHVybiBmdW5jdGlvbigpIHtcblx0ICAgIFx0XHQvLyBub29wXG5cdCAgICBcdH07XG5cdCAgICB9XG5cdH1cblxuXHRpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcblx0XHR2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcblxuXHRcdHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuXG5cdFx0dXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG5cdFx0cmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcblxuXHR9IGVsc2UgaWYgKFxuXHRcdG9iai5zb3VyY2VNYXAgJiZcblx0XHR0eXBlb2YgVVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLmNyZWF0ZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5yZXZva2VPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBCbG9iID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiXG5cdCkge1xuXHRcdHN0eWxlID0gY3JlYXRlTGlua0VsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gdXBkYXRlTGluay5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXG5cdFx0XHRpZihzdHlsZS5ocmVmKSBVUkwucmV2b2tlT2JqZWN0VVJMKHN0eWxlLmhyZWYpO1xuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXHRcdH07XG5cdH1cblxuXHR1cGRhdGUob2JqKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUgKG5ld09iaikge1xuXHRcdGlmIChuZXdPYmopIHtcblx0XHRcdGlmIChcblx0XHRcdFx0bmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJlxuXHRcdFx0XHRuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJlxuXHRcdFx0XHRuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR1cGRhdGUob2JqID0gbmV3T2JqKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVtb3ZlKCk7XG5cdFx0fVxuXHR9O1xufVxuXG52YXIgcmVwbGFjZVRleHQgPSAoZnVuY3Rpb24gKCkge1xuXHR2YXIgdGV4dFN0b3JlID0gW107XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChpbmRleCwgcmVwbGFjZW1lbnQpIHtcblx0XHR0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG5cblx0XHRyZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcblx0fTtcbn0pKCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcgKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcblx0dmFyIGNzcyA9IHJlbW92ZSA/IFwiXCIgOiBvYmouY3NzO1xuXG5cdGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG5cdH0gZWxzZSB7XG5cdFx0dmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuXHRcdHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuXHRcdGlmIChjaGlsZE5vZGVzW2luZGV4XSkgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG5cdFx0XHRzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyAoc3R5bGUsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuXG5cdGlmKG1lZGlhKSB7XG5cdFx0c3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpXG5cdH1cblxuXHRpZihzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuXHR9IGVsc2Uge1xuXHRcdHdoaWxlKHN0eWxlLmZpcnN0Q2hpbGQpIHtcblx0XHRcdHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuXHRcdH1cblxuXHRcdHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUxpbmsgKGxpbmssIG9wdGlvbnMsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cblx0Lypcblx0XHRJZiBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgaXNuJ3QgZGVmaW5lZCwgYnV0IHNvdXJjZW1hcHMgYXJlIGVuYWJsZWRcblx0XHRhbmQgdGhlcmUgaXMgbm8gcHVibGljUGF0aCBkZWZpbmVkIHRoZW4gbGV0cyB0dXJuIGNvbnZlcnRUb0Fic29sdXRlVXJsc1xuXHRcdG9uIGJ5IGRlZmF1bHQuICBPdGhlcndpc2UgZGVmYXVsdCB0byB0aGUgY29udmVydFRvQWJzb2x1dGVVcmxzIG9wdGlvblxuXHRcdGRpcmVjdGx5XG5cdCovXG5cdHZhciBhdXRvRml4VXJscyA9IG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzID09PSB1bmRlZmluZWQgJiYgc291cmNlTWFwO1xuXG5cdGlmIChvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyB8fCBhdXRvRml4VXJscykge1xuXHRcdGNzcyA9IGZpeFVybHMoY3NzKTtcblx0fVxuXG5cdGlmIChzb3VyY2VNYXApIHtcblx0XHQvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NVxuXHRcdGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgXCIgKi9cIjtcblx0fVxuXG5cdHZhciBibG9iID0gbmV3IEJsb2IoW2Nzc10sIHsgdHlwZTogXCJ0ZXh0L2Nzc1wiIH0pO1xuXG5cdHZhciBvbGRTcmMgPSBsaW5rLmhyZWY7XG5cblx0bGluay5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcblxuXHRpZihvbGRTcmMpIFVSTC5yZXZva2VPYmplY3RVUkwob2xkU3JjKTtcbn1cbiIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuL2luZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4vaW5kZXguY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuXHJcbmltcG9ydCBzY3JlZW5zIGZyb20gXCIuL3NjcmVlbnNcIjtcclxuaW1wb3J0IHVwZGF0ZVNjcmVlbiBmcm9tIFwiLi91dGlscy91cGRhdGUuc2NyZWVuXCI7XHJcbmltcG9ydCBpbml0R2FtZSBmcm9tIFwiLi91dGlscy9pbml0LmdhbWVcIjtcclxuXHJcbmxldCBjdXJyZW50U2NyZWVuID0gMDtcclxuXHJcbmNvbnN0IHNob3dTY3JlZW4gPSAoaW5kZXgpID0+IHtcclxuICBjdXJyZW50U2NyZWVuID0gaW5kZXg7XHJcbiAgbGV0IHNjcmVlbiA9IHNjcmVlbnNbY3VycmVudFNjcmVlbl07XHJcblxyXG4gIHVwZGF0ZVNjcmVlbihzY3JlZW4sICgpID0+IHtcclxuICAgIGlmIChzY3JlZW4uZ2FtZSkge1xyXG4gICAgICB1cGRhdGVTY3JlZW4obnVsbCk7XHJcbiAgICAgIGluaXRHYW1lKHNjcmVlbi5nYW1lLCAoKSA9PiB7XHJcbiAgICAgICAgc2hvd1NjcmVlbihpbmRleCArIDEpO1xyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHNob3dTY3JlZW4oaW5kZXggKyAxKTtcclxuICAgIH1cclxuICB9KTtcclxufVxyXG5cclxuc2hvd1NjcmVlbigxMCk7IiwiY29uc3Qgc2NyZWVucyA9IFtcclxuICB7IC8vIDAgcHVwb2tcclxuICAgIGNsYXNzOiBcInB1cG9rXCIsXHJcbiAgICBpbWc6IFwiaW1nL2hlcm8ucG5nXCIsXHJcbiAgICB0aXRsZTogXCLQn9GD0L/QvtC6INCU0LbQvtC90YFcIixcclxuICAgIHRleHQ6IGA8cD7Ql9C90LDQvNC10L3QuNGC0YvQuSDQuNGB0LrQsNGC0LXQu9GMINC/0YDQuNC60LvRjtGH0LXQvdC40Lkg0Lgg0YHQvtC60YDQvtCy0LjRiS48L3A+YFxyXG4gIH0seyAvLyAxIGFoaW5lYVxyXG4gICAgY2xhc3M6IFwiYWhpbmVhXCIsXHJcbiAgICBpbWc6IFwiaW1nL3dpZmUucG5nXCIsXHJcbiAgICB0aXRsZTogXCLQkNGF0LjQvdC10Y8g0JTQttC+0L3RgVwiLFxyXG4gICAgdGV4dDogYDxwPtCS0L7Qt9C70Y7QsdC70LXQvdC90LDRjyDQuCDQstC10YDQvdCw0Y8g0YHQv9GD0YLQvdC40YbQsCDQn9GD0L/QutCwINCU0LbQvtC90YHQsC48L3A+YFxyXG4gIH0seyAvLyAyIHpsb2JuaWt1c1xyXG4gICAgY2xhc3M6IFwiemxvYm5pa3VzXCIsXHJcbiAgICBpbWc6IFwiaW1nL3ZpbGxhaW4ucG5nXCIsXHJcbiAgICB0aXRsZTogXCLQlNC+0LrRgtC+0YAg0JfQu9C+0LHQvdC40LrRg9GBXCIsXHJcbiAgICB0ZXh0OiBgPHA+0JfQu9C+0LTQtdC5LCDQstC10YfQvdGL0Lkg0L/RgNC+0YLQuNCy0L3QuNC6INCf0YPQv9C60LAg0JTQttC+0L3RgdCwLjwvcD5gXHJcbiAgfSx7IC8vIDMgaW50cm9cclxuICAgIGNsYXNzOiBcImludHJvXCIsXHJcbiAgICB0aXRsZTogXCLQotGA0LDQs9C10LTQuNGPIVwiLFxyXG4gICAgdGV4dDogYDxwPtCX0LvQvtCx0L3Ri9C5INCU0L7QutGC0L7RgCDQl9C70L7QsdC90LjQutGD0YEg0LrQvtCy0LDRgNC90L4g0L/QvtGF0LjRgtC40Lsg0LLQvtC30LvRjtCx0LvQtdC90L3Rg9GOINCf0YPQv9C60LAg0JTQttC+0L3RgdCwINC4INGD0LLQtdC3INC10LUg0LIg0L3QtdC40LfQstC10YHRgtC90L7QvCDQvdCw0L/RgNCw0LLQu9C10L3QuNC4ITwvcD48cD7QotC10L/QtdGA0Ywg0LfQvdCw0LzQtdC90LjRgtC+0LzRgyDQuNGB0LrQsNGC0LXQu9GOINC/0YDQuNC60LvRjtGH0LXQvdC40Lkg0Lgg0YHQvtC60YDQvtCy0LjRiSDQv9GA0LjQtNC10YLRgdGPINC+0YLQv9GA0LDQstC40YLRjNGB0Y8g0LIg0L/QvtC70L3QvtC1INC+0L/QsNGB0L3QvtGB0YLQtdC5INC/0YPRgtC10YjQtdGB0YLQstC40LUsINGH0YLQvtCx0Ysg0L3QsNC50YLQuCDQkNGF0LjQvdC10Y4g0Lgg0YHQv9Cw0YHRgtC4INC10LUuPC9wPmBcclxuICB9LHsgLy8gNCB0by1pbmRpYVxyXG4gICAgY2xhc3M6IFwidG8taW5kaWFcIixcclxuICAgIG1hcDogXCJhc2lhXCIsXHJcbiAgICB0aXRsZTogXCLQkNC30LjRjywg0JjQvdC00LjRj1wiLFxyXG4gICAgdGV4dDogYDxwPtCe0YLQstCw0LbQvdGL0Lkg0J/Rg9C/0L7QuiDQlNC20L7QvdGBINC+0YLQv9GA0LDQstC70Y/QtdGC0YHRjyDQsiDQmtCw0LvRjNC60YPRgtGC0YMsINGH0YLQvtCx0Ysg0LLRgdGC0YDQtdGC0LjRgtGM0YHRjyDRgdC+INGB0LLQvtC40Lwg0LTQvtCx0YDRi9C8INC00YDRg9Cz0L7QvCwg0L/RgNC+0YTQtdGB0YHQvtGA0L7QvCDQn9C40LfQtNGA0LjQutC+0LwuPC9wPmBcclxuICB9LHsgLy8gNSBhc2lhLXJhY2VcclxuICAgIGNsYXNzOiBcImFzaWEtcmFjZVwiLFxyXG4gICAgdGV4dDogYDxwPtCn0YLQvtCx0Ysg0LTQvtCx0YDQsNGC0YzRgdGPINC00L4g0L7RhNC40YHQsCDRgdCy0L7QtdCz0L4g0LTRgNGD0LPQsCwg0LPQtdGA0L7RjiDQvdGD0LbQvdC+INC/0YDQtdC+0LTQvtC70LXRgtGMINC90LXRgdC60L7Qu9GM0LrQviDQutCy0LDRgNGC0LDQu9C+0LIuPC9wPjxwPtCT0LvRg9Cx0L7QutC+INC30LDQtNGD0LzQsNCy0YjQuNGB0Ywg0L4g0YHQstC+0LXQuSDQv9C+0YLQtdGA0Y/QvdC90L7QuSDQu9GO0LHQuNC80L7QuSwg0L7QvSDRgdC70YPRh9Cw0LnQvdC+INCy0YvRhdC+0LTQuNGCINC90LAg0YjQvtGB0YHQtSDQuCDQtdC00LLQsCDQvdC1INC/0L7Qv9Cw0LTQsNC10YIg0L/QvtC0INC60L7Qu9C10YHQsCDRgdGC0YDQtdC80LjRgtC10LvRjNC90L4g0LzRh9Cw0YnQtdCz0L7RgdGPINCw0LLRgtC+0LzQvtCx0LjQu9GPITwvcD48cD7QkiDQmNC90LTQuNC4INGD0LbQsNGB0L3QvtC1INC00L7RgNC+0LbQvdC+0LUg0LTQstC40LbQtdC90LjQtSwg0LrQsNC6INCx0Ysg0J/Rg9C/0L7QuiDQvdC1INC/0L7RgdGC0YDQsNC00LDQuyEg0KLRiyDQtNC+0LvQttC10L0g0L/RgNC+0LLQtdGB0YLQuCDQtdCz0L4g0LTQviDRhtC10LvQuCwg0LjQt9Cx0LXQs9Cw0Y8g0YHRgtC+0LvQutC90L7QstC10L3QuNC5INGBINC80LDRiNC40L3QsNC80LguPC9wPmAsXHJcbiAgICBnYW1lOiBcImFzaWFcIlxyXG4gIH0seyAvLyA2IHBpemRyaWtcclxuICAgIGNsYXNzOiBcInBpemRyaWtcIixcclxuICAgIGltZzogXCJpbWcvcHItcGl6ZHJpay5wbmdcIixcclxuICAgIHRpdGxlOiBcItCf0YDQvtGE0LXRgdGB0L7RgCDQn9C40LfQtNGA0LjQulwiLFxyXG4gICAgdGV4dDogYDxwPtCX0L3QsNC80LXQvdC40YLRi9C5INC/0YDQvtGE0LXRgdGB0L7RgCDQsdGL0Lsg0L7Rh9C10L3RjCDQvtCx0YDQsNC00L7QstCw0L0sINGD0LLQuNC00LXQsiDRgdGC0LDRgNC+0LPQviDQtNGA0YPQs9CwLjwvcD5cclxuICAgIDxwPtCd0L4g0YPRgdC70YvRiNCw0LIg0L4g0L/QvtGF0LjRidC10L3QuNC4INCQ0YXQuNC90LXQuCwg0L/RgNC40YjQtdC7INCyINGB0LjQu9GM0L3QvtC1INCy0L7Qu9C90LXQvdC40LUuPC9wPmBcclxuICB9LHsgLy8gNyBjb21wcm9tYXRcclxuICAgIGNsYXNzOiBcImNvbXByb21hdFwiLFxyXG4gICAgdGV4dDogYDxwPi0g0JTQvtGA0L7Qs9C+0Lkg0J/Rg9C/0L7QuiwgLSDRgdC60LDQt9Cw0Lsg0L/RgNC+0YTQtdGB0YHQvtGALiAtINCU0L7QutGC0L7RgCDQl9C70L7QsdC90LjQutGD0YEg0L7Rh9C10L3RjCDQvtC/0LDRgdC10L0uINCn0YLQvtCx0Ysg0L/QvtCx0LXQtNC40YLRjCDQtdCz0L4sINGC0Ysg0LTQvtC70LbQtdC9INGB0L7QsdGA0LDRgtGMINC90LAg0L3QtdCz0L4g0LrQvtC80L/RgNC+0LzQsNGCLjwvcD48cD4tINCT0LTQtSDQttC1INC80L3QtSDQtdCz0L4g0L3QsNC50YLQuD8gLSDRgdC/0YDQvtGB0LjQuyDQn9GD0L/QvtC6LjwvcD48cD4tINCvINGB0LvRi9GI0LDQuywg0YfRgtC+INCyINC/0L7RgdC70LXQtNC90LXQtSDQstGA0LXQvNGPINCU0L7QutGC0L7RgCDQl9C70L7QsdC90LjQutGD0YEg0LzQvdC+0LPQviDQv9Cw0LrQvtGB0YLQuNC7INCyINCV0LLRgNC+0L/QtS4g0J3QsNCy0LXRgNC90Y/QutCwLCDRgtCw0Lwg0YLRiyDQvdCw0LnQtNC10YjRjCDRh9GC0L4t0L3QuNCx0YPQtNGMINC40L3RgtC10YDQtdGB0L3QvtC1LjwvcD5gXHJcbiAgfSx7IC8vIDggZXVyb3BlXHJcbiAgICBjbGFzczogXCJldXJvcGVcIixcclxuICAgIG1hcDogXCJldXJvcGVcIixcclxuICAgIHRpdGxlOiBcItCV0LLRgNC+0L/QsFwiLFxyXG4gICAgdGV4dDogYNCf0L4g0YHQvtCy0LXRgtGDINGB0LLQvtC10LPQviDQtNGA0YPQs9CwINCf0YDQvtGE0LXRgdGB0L7RgNCwINCf0LjQt9C00YDQuNC60LAg0J/Rg9C/0L7QuiDQlNC20L7QvdGBINC+0YLQv9GA0LDQstC40LvRgdGPINCyINCV0LLRgNC+0L/Rgywg0YfRgtC+0LHRiyDRgdC+0LHRgNCw0YLRjCDQutC+0LzQv9GA0L7QvNCw0YIg0L3QsCDQutC+0LLQsNGA0L3QvtCz0L4g0JTQvtC60YLQvtGA0LAg0JfQu9C+0LHQvdC40LrRg9GB0LAuYFxyXG4gIH0seyAvLyA5IGV1cm9wZS1nYW1lXHJcbiAgICBjbGFzczogXCJldXJvcGUtZ2FtZVwiLFxyXG4gICAgdGV4dDogYDxwPiDQn9C+0LzQvtCz0Lgg0J/Rg9C/0LrRgyDQlNC20L7QvdGB0YMg0YHQvtCx0YDQsNGC0Ywg0LrQvtC80L/RgNC+0LzQsNGCINC90LAg0LfQu9C+0LTQtdGPITwvcD48cD7Qn9C+0LTQsdC10YDQuCDRgdGC0L7Qu9C40YbRgyDQtNC70Y8g0LrQsNC20LTQvtC5INC10LLRgNC+0L/QtdC50YHQutC+0Lkg0YHRgtGA0LDQvdGLINC4INGD0LfQvdCw0LksINGH0LXQvCDQvtGC0LvQuNGH0LjQu9GB0Y8g0JTQvtC60YLQvtGAINCX0LvQvtCx0L3QuNC60YPRgSDQsiDRjdGC0L7QvCDQs9C+0YDQvtC00LUuPC9wPmAsXHJcbiAgICBnYW1lOiBcImV1cm9wZVwiXHJcbiAgfSx7IC8vIDEwIGV1cm9wZS13aW5cclxuICAgIGNsYXNzOiBcImV1cm9wZS13aW5cIixcclxuICAgIHRpdGxlOiBcItCX0LDQvNC10YfQsNGC0LXQu9GM0L3QviFcIixcclxuICAgIHRleHQ6IGA8cD4g0J/Rg9C/0L7QuiDQlNC20L7QvdGBINGB0L7QsdGA0LDQuyDQvNC90L7Qs9C+INC60L7QvNC/0YDQvtC80LDRgtCwINC90LAg0JTQvtC60YLQvtGA0LAg0JfQu9C+0LHQvdC40LrRg9GB0LAhINCi0LXQv9C10YDRjCDQvtC9INGB0LzQvtC20LXRgiDRiNCw0L3RgtCw0LbQuNGA0L7QstCw0YLRjCDQtdCz0L4sINGH0YLQvtCx0Ysg0LLQtdGA0L3Rg9GC0Ywg0LLQvtC30LvRjtCx0LvQtdC90L3Rg9GOINCQ0YXQuNC90LXRji48L3A+YFxyXG4gIH0seyAvLyAxMSByZWFzb25cclxuICAgIGNsYXNzOiBcInJlYXNvblwiLFxyXG4gICAgdGV4dDogYDxwPtCd0L4g0LPQtNC1INC20LUg0LjRgdC60LDRgtGMINGN0YLQvtCz0L4g0L3QtdCz0L7QtNGP0Y8sINGH0YLQvtCx0Ysg0L3QsNGH0LDRgtGMINC10LPQviDRiNCw0L3RgtCw0LbQuNGA0L7QstCw0YLRjD88L3A+PHA+0J/Rg9C/0L7QuiDQt9Cw0LTRg9C80LDQu9GB0Y8gLSDQt9Cw0YfQtdC8INCX0LvQvtCx0L3QuNC60YPRgdGDINCQ0YXQuNC90LXRjz8gPC9wPmBcclxuICB9LHsgLy8gMTIgbXVtYmEtdW1iYVxyXG4gICAgY2xhc3M6IFwibXVtYmEtdW1iYVwiLFxyXG4gICAgaW1nOiBcImltZy9wYW50aGVyLnBuZ1wiLFxyXG4gICAgdGl0bGU6IFwi0J/Qu9C10LzRjyDQnNGD0LzQsdCwLdCu0LzQsdCwXCIsXHJcbiAgICB0ZXh0OiBgPHA+0JDRhdC40L3QtdGPINCU0LbQvtC90YEg0LHQu9C40LfQutC+INC00YDRg9C20LjRgiDRgSDQmtC+0YDQuNGH0L3QtdCy0YvQvCDQodGD0YHQu9C40LrQvtC8IC0g0LLQvtC20LTQtdC8INC/0LvQtdC80LXQvdC4INCc0YPQvNCx0LAt0K7QvNCx0LAuPC9wPjxwPtCX0LvQvtCx0L3QuNC60YPRgSDQvdCw0LLQtdGA0L3Rj9C60LAg0LfQvdCw0LXRgiwg0YfRgtC+INCyINGN0YLQvtC8INC/0LvQtdC80LXQvdC4INGF0YDQsNC90LjRgtGB0Y8g0LHQtdGB0YbQtdC90L3QsNGPINGA0LXQu9C40LrQstC40Y8gLSDQv9C+0LTRgtGP0LbQutC4INGP0L/QvtC90YHQutC+0LPQviDQsdC+0LPQsCDQkNC80Y0t0L3QviDQnNC40L3QsNC60LDQvdGD0YHQuCDQvdC+INCa0LDQvNC4LiAgPC9wPmBcclxuICB9LHsgLy8gMTMgYW5zd2VyXHJcbiAgICBjbGFzczogXCJhbnN3ZXJcIixcclxuICAgIHRleHQ6IGA8cD7QnNC+0LbQtdGCINCx0YvRgtGMLCDRgSDQv9C+0LzQvtGJ0YzRjiDQkNGF0LjQvdC10Lgg0L7QvSDRgNCw0YHRgdGH0LjRgtGL0LLQsNC10YIg0LTQvtCz0L7QstC+0YDQuNGC0YzRgdGPINGBINCa0L7RgNC40YfQvdC10LLRi9C8INCh0YPRgdC70LjQutC+0Lwg0Lgg0LfQsNCx0YDQsNGC0Ywg0L/QvtC00YLRj9C20LrQuCDRgdC10LHQtSE8L3A+YFxyXG4gIH0seyAvLyAxNCBhZnJpY2FcclxuICAgIGNsYXNzOiBcImFmcmljYVwiLFxyXG4gICAgbWFwOiBcImFmcmljYVwiLFxyXG4gICAgdGl0bGU6IFwi0JDRhNGA0LjQutCwXCIsXHJcbiAgICB0ZXh0OiBgPHA+0KDQsNGB0YHRh9C40YLRi9Cy0LDRjyDQv9C10YDQtdGF0LLQsNGC0LjRgtGMINCU0L7QutGC0L7RgNCwINCX0LvQvtCx0L3QuNC60YPRgdCwLCDQn9GD0L/QvtC6INCU0LbQvtC90YEg0L7RgtC/0YDQsNCy0LjQu9GB0Y8g0LIg0KLQsNC90LfQsNC90LjRjiwg0LIg0L/Qu9C10LzRjyDQnNGD0LzQsdCwLdCu0LzQsdCwLlxyXG4gICAgPC9wPmAsXHJcbiAgfSx7IC8vIDE1IGRvZG9tYVxyXG4gICAgY2xhc3M6IFwiZG9kb21hXCIsXHJcbiAgICB0YXNrOiBcIndvcmRcIixcclxuICAgIHRpdGxlOiBcItCh0YLQvtC70LjRhtCwINCi0LDQvdC30LDQvdC40Lg/XCIsXHJcbiAgICB0ZXh0OiBgPHA+0KfRgtC+0LHRiyDQv9GA0L7QtNC+0LvQttC40YLRjCDQv9GD0YLQtdGI0LXRgdGC0LLQuNC1LCDQvdCw0LfQvtCy0Lgg0YHRgtC+0LvQuNGG0YMg0LPQvtGB0YPQtNCw0YDRgdGC0LLQsCDQotCw0L3Qt9Cw0L3QuNGPPC9wPmAsXHJcbiAgICBhbnN3ZXI6IFtcItC00L7QtNC+0LzQsFwiXSxcclxuICB9LHsgLy8gMTYgZmxvd2VyXHJcbiAgICBjbGFzczogXCJmbG93ZXJcIixcclxuICAgIHRpdGxlOiBcItCm0LLQtdGC0L7QuiDQtNC70Y8g0JDRhdC40L3QtdC4XCIsXHJcbiAgICB0ZXh0OiBgPHA+0J/RgNC+0LHQuNGA0LDRj9GB0Ywg0L/QviDQvdC10LPQvtGB0YLQtdC/0YDQuNC40LzQvdGL0Lwg0LDRhNGA0LjQutCw0L3RgdC60LjQvCDQt9C10LzQu9GP0LwsINC30L3QsNC80LXQvdC40YLRi9C5INC/0YPRgtC10YjQtdGB0YLQstC10L3QvdC40Log0YDQtdGI0LjQuyDQstC+0YHQv9C+0LvRjNC30L7QstCw0YLRjNGB0Y8g0LzQvtC80LXQvdGC0L7QvCDQuCDQvdCw0LnRgtC4INC00LvRjyDRgdCy0L7QtdC5INCy0L7Qt9C70Y7QsdC70LXQvdC90L7QuSDRg9C90LjQutCw0LvRjNC90YvQuSDRhtCy0LXRgtC+0LogLSDRhdC40YnQvdGD0Y4g0LDRhNGA0LjQutCw0L3RgdC60YPRjiDQvNGD0YXQvtC/0L7QttC40YDQsNC70LrRgy48L3A+PHA+0JDRhdC40L3QtdGPINCx0YPQtNC10YIg0YHRh9Cw0YHRgtC70LjQstCwLCDQv9C+0LvRg9GH0LjQsiDRgtCw0LrQvtC5INC/0L7QtNCw0YDQvtC6LCDQv9C+0LTRg9C80LDQuyDQlNC20L7QvdGBLjwvcD5gXHJcbiAgfSx7IC8vIDE3IHRyaWJlXHJcbiAgICBjbGFzczogXCJ0cmliZVwiLFxyXG4gICAgdGl0bGU6IFwi0JLRgNCw0LbQtNC10LHQvdC+0LUg0L/Qu9C10LzRj1wiLFxyXG4gICAgdGV4dDogYDxwPtCSINC/0L7QuNGB0LrQsNGFINC80YPRhdC+0L/QvtC20LjRgNCw0LvQutC4INCf0YPQv9C+0Log0LfQsNCx0YDQtdC7INC90LAg0YLQtdGA0YDQuNGC0L7RgNC40Y4g0LLRgNCw0LbQtNC10LHQvdC+0LPQviDQv9C70LXQvNC10L3QuCwg0LrQvtGC0L7RgNC+0LUg0YHRgNCw0LfRgyDQttC1INCyINC/0L7Qu9C90L7QvCDRgdC+0YHRgtCw0LLQtSDQv9C+0LPQvdCw0LvQvtGB0Ywg0LfQsCDQvdC40LwuIDwvcD48cD7QodC/0LDRgdC4INCf0YPQv9C60LAg0L7RgiDQv9C+0LPQvtC90LgsINGB0L7QsdC40YDQsNGPINC/0L4g0L/Rg9GC0Lgg0LDQu9C80LDQt9GLLiDQmCDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+INC90LDQudC00Lgg0YbQstC10YLQvtC6INC00LvRjyDQkNGF0LjQvdC10LguPC9wPmAsXHJcbiAgICBnYW1lOiBcImFmcmljYVwiXHJcbiAgfSx7IC8vIDE4IGZpbmQtZmxvd2VyXHJcbiAgICBjbGFzczogXCJmaW5kLWZsb3dlclwiLFxyXG4gICAgaW1nOiBcImZsb3dlclwiLFxyXG4gICAgdGl0bGU6IFwi0JLQtdC70LjQutC+0LvQtdC/0L3QviFcIixcclxuICAgIHRleHQ6IGA8cD7Qn9GD0L/QvtC6INCU0LbQvtC90YEg0L3QsNGI0LXQuyDRgNC10LTQutC40Lkg0YbQstC10YLQvtC6INCyINC/0L7QtNCw0YDQvtC6INC00LvRjyDRgdCy0L7QtdC5INCy0L7Qt9C70Y7QsdC70LXQvdC90L7QuSE8L3A+YFxyXG4gIH0seyAvLyAxOSBsYXRlXHJcbiAgICBjbGFzczogXCJsYXRlXCIsXHJcbiAgICB0aXRsZTogXCLQntC/0L7Qt9C00LDQuyFcIixcclxuICAgIHRleHQ6IGA8cD7Ql9C90LDQvNC10L3QuNGC0YvQuSDQv9GD0YLQtdGI0LXRgdGC0LLQtdC90L3QuNC6INC00L7QsdGA0LDQu9GB0Y8g0LTQviDQv9C70LXQvNC10L3QuCDQnNGD0LzQsdCwLdCu0LzQsdCwLCDQvdC+INC60L7QstCw0YDQvdGL0Lkg0JTQvtC60YLQvtGAINCX0LvQvtCx0L3QuNC60YPRgSDQvtC/0LXRgNC10LTQuNC7INC10LPQviE8L3A+PHA+0JLQvtC20LTRjCDQmtC+0YDQuNGH0L3QtdCy0YvQuSDQodGD0YHQu9C40Log0YHQutCw0LfQsNC7LCDRh9GC0L4g0LfQu9C+0LTQtdC5INGD0YjQtdC7INCx0YPQutCy0LDQu9GM0L3QviDQv9GP0YLRjCDQvNC40L3Rg9GCINC90LDQt9Cw0LQg0Lgg0YHQtdC7INC90LAg0L/QvtGB0LvQtdC00L3QuNC5INCy0LXRgNGC0L7Qu9C10YIsINC70LXRgtGP0YnQuNC5INCyINCQ0LLRgdGC0YDQsNC70LjRji48L3A+PHA+0KEg0L3QuNC8INCx0YvQu9CwINCQ0YXQuNC90LXRjyDQuCDQv9C+0LTRgtGP0LbQutC4INGP0L/QvtC90YHQutC+0LPQviDQsdC+0LPQsCDQkNC80Y0t0L3QviDQnNC40L3QsNC60LDQvdGD0YHQuCDQvdC+INCa0LDQvNC4LjwvcD5gLFxyXG4gIH0seyAvLyAyMCBhdXN0cmFsaWFcclxuICAgIGNsYXNzOiBcImF1c3RyYWxpYVwiLFxyXG4gICAgbWFwOiBcImF1c3RyYWxpYVwiLFxyXG4gICAgdGl0bGU6IFwi0JDQstGB0YLRgNCw0LvQuNGPLCDQodC40LTQvdC10LlcIixcclxuICAgIHRleHQ6IGA8cD7Qn9GD0L/QvtC6INCU0LbQvtC90YEg0LIg0L7RgtGH0LDRj9C90LjQuCDQsdGA0L7RgdC40LvRgdGPINGB0LvQtdC00L7QvCDQt9CwINCU0L7QutGC0L7RgNC+0LwuIDwvcD48cD7Qn9GA0LjQu9C10YLQtdCyINCyINCh0LjQtNC90LXQuSwg0L7QvSDQv9C+0L3Rj9C7LCDRh9GC0L4g0L3QtSDQt9C90LDQtdGCLCDQutGD0LTQsCDQvtGC0L/RgNCw0LLQuNGC0YzRgdGPINC00LDQu9GM0YjQtS48L3A+YFxyXG4gIH0seyAvLyAyMSBjaG9pc2VcclxuICAgIGNsYXNzOiBcImNob2lzZVwiLFxyXG4gICAgdGFzazogXCJjaG9pc2VcIixcclxuICAgIHRpdGxlOiBcItCa0YPQtNCwINC40LTRgtC4INCf0YPQv9C60YMg0JTQttC+0L3RgdGDP1wiLFxyXG4gICAgdmFyaWFudHM6IFtcclxuICAgICAge1xyXG4gICAgICAgIGluZGV4OiBcIjFcIixcclxuICAgICAgICB0ZXh0OiBcItCh0LzQvtGC0YDQtdGC0Ywg0L3QsCDQutC10L3Qs9GD0YDRg1wiLFxyXG4gICAgICAgIGV4aXQ6IHRydWUsXHJcbiAgICAgIH0se1xyXG4gICAgICAgIGluZGV4OiBcIjJcIixcclxuICAgICAgICB0ZXh0OiBcItCh0LzQvtGC0YDQtdGC0Ywg0LTQvtGB0YLQvtC/0YDQuNC80LXRh9Cw0YLQtdC70YzQvdC+0YHRgtC4XCIsXHJcbiAgICAgICAgZXhpdDogZmFsc2UsXHJcbiAgICAgICAgbWVzc2FnZTogXCJcIixcclxuICAgICAgfSx7XHJcbiAgICAgICAgaW5kZXg6IFwiM1wiLFxyXG4gICAgICAgIHRleHQ6IFwi0J3QsCDQv9C70Y/QtlwiLFxyXG4gICAgICAgIGV4aXQ6IGZhbHNlLFxyXG4gICAgICAgIG1lc3NhZ2U6IFwiXCIsXHJcbiAgICAgIH0se1xyXG4gICAgICAgIGluZGV4OiBcIjRcIixcclxuICAgICAgICB0ZXh0OiBcItCSINC/0L7Qu9C40YbQuNGOXCIsXHJcbiAgICAgICAgZXhpdDogZmFsc2UsXHJcbiAgICAgICAgbWVzc2FnZTogXCJcIixcclxuICAgICAgfVxyXG4gICAgXVxyXG4gIH0seyAvLyAyMiBmYXJtXHJcbiAgICBjbGFzczogXCJmYXJtXCIsXHJcbiAgICB0aXRsZTogXCLQn9GA0LjQs9C+0YDQvtC0INCh0LjQtNC90LXRj1wiLFxyXG4gICAgdGV4dDogYDxwPtCd0LUg0L/RgNC40LTRg9C80LDQsiwg0LrRg9C00LAg0L/QvtC00LDRgtGM0YHRjywg0J/Rg9C/0L7QuiDQlNC20L7QvdGBINGA0LXRiNC40Lsg0YHQvtCy0LXRgNGI0LjRgtGMINGN0LrRgdC60YPRgNGB0LjRjiDQsiDQv9GA0LjQs9C+0YDQvtC0INCh0LjQtNC90LXRjyDQuCDQv9C+0YHQvNC+0YLRgNC10YLRjCDQvdCwINC90LDRgdGC0L7Rj9GJ0LjRhSDQutC10L3Qs9GD0YDRgywg0YDQsNC3INGD0LYg0L/RgNC10LTRgdGC0LDQstC40LvQsNGB0Ywg0YLQsNC60LDRjyDQstC+0LfQvNC+0LbQvdC+0YHRgtGMLjwvcD5gXHJcbiAgfSx7IC8vIDIzIGthbmdhcm9vXHJcbiAgICBjbGFzczogXCJrYW5nYXJvb1wiLFxyXG4gICAgdGl0bGU6IFwi0J3QsNGI0LXRgdGC0LLQuNC1INC60LXQvdCz0YPRgNGDXCIsXHJcbiAgICB0ZXh0OiBgPHA+0KXQvtC30Y/QuNC9INGE0LXRgNC80YssINC90LAg0LrQvtGC0L7RgNGD0Y4g0L/RgNC40LXRhdCw0Lsg0LfQvdCw0LzQtdC90LjRgtGL0Lkg0L/Rg9GC0LXRiNC10YHRgtCy0LXQvdC90LjQuiwg0LHRi9C7INC+0YfQtdC90Ywg0LLQt9Cy0L7Qu9C90L7QstCw0L0uINCj0LbQtSDQvNC90L7Qs9C40LUg0LPQvtC00Ysg0LXQs9C+INC20LjQt9C90Ywg0L7RgtGA0LDQstC70Y/Qu9C4INC30LvQvtCy0YDQtdC00L3Ri9C1INC60LXQvdCz0YPRgNGDLCDRgdC+0LLQtdGA0YjQsNCy0YjQuNC1INC90LDQsdC10LPQuCDQvdCwINCz0YDRj9C00LrQuC48L3A+PHA+0JTQvtCx0YDQvtGB0LXRgNC00LXRh9C90YvQuSDQn9GD0L/QvtC6INCU0LbQvtC90YEg0YDQtdGI0LjQuyDQv9C+0LzQvtGH0Ywg0YTQtdGA0LzQtdGA0YMuPC9wPmBcclxuICB9LHsgLy8gMjQgYmF0dGxlXHJcbiAgICBjbGFzczogXCJiYXR0bGVcIixcclxuICAgIHRleHQ6IGA8cD7Qp9GC0L7QsdGLINGB0L/RgNCw0LLQuNGC0YzRgdGPINGBINGA0LDQt9C+0YDQuNGC0LXQu9GM0L3Ri9C8INC90LDQsdC10LPQvtC8INC60LXQvdCz0YPRgNGDLCDQv9C+0LrRg9C/0LDQudGC0LUg0YXQuNGJ0L3Ri9C1INGA0LDRgdGC0LXQvdC40Y8g0Lgg0LLRi9GB0LDQttC40LLQsNC50YLQtSDQuNGFINC90LAg0L/Rg9GC0Lgg0LLRgNC10LTQuNGC0LXQu9C10LkuPC9wPmAsXHJcbiAgICBnYW1lOiBcImF1c3RyYWxpYVwiXHJcbiAgfSx7IC8vIDI1IG5ld3NwYXBlclxyXG4gICAgY2xhc3M6IFwibmV3c3BhcGVyXCIsXHJcbiAgICB0aXRsZTogXCLQn9C+0LHQtdC00LAhXCIsXHJcbiAgICB0ZXh0OiBgPHA+0J/RgNC+0LbQvtGA0LvQuNCy0YvQtSDQutC10L3Qs9GD0YDRgyDQstGL0L3Rg9C20LTQtdC90Ysg0YPQsdGA0LDRgtGM0YHRjyDQv9C+0LTQvtCx0YDRgy3Qv9C+0LfQtNC+0YDQvtCy0YMuINCe0L3QuCDQsdC+0LvRjNGI0LUg0L3QtSDQstC10YDQvdGD0YLRgdGPINC90LAg0YTQtdGA0LzRgy48L3A+PHA+0JIg0LrQsNGH0LXRgdGC0LLQtSDQsdC70LDQs9C+0LTQsNGA0L3QvtGB0YLQuCDRhNC10YDQvNC10YAg0YPQs9C+0YnQsNC10YIg0J/Rg9C/0LrQsCDQstC60YPRgdC90YvQvCDQvtCx0LXQtNC+0LwuINCX0LAg0LXQtNC+0Lkg0L/Rg9GC0LXRiNC10YHRgtCy0LXQvdC90LjQuiDRh9C40YLQsNC10YIg0LzQtdGB0YLQvdGD0Y4g0LPQsNC30LXRgtGDINC4INC90LDRgtGL0LrQsNC10YLRgdGPINC90LAg0L7Rh9C10L3RjCDQuNC90YLQtdGA0LXRgdC90YPRjiDQt9Cw0LzQtdGC0LrRgy48L3A+YFxyXG4gIH0seyAvLyAyNiBzaGlwXHJcbiAgICBjbGFzczogXCJzaGlwXCIsXHJcbiAgICBibG9ja1N0eWxlOiBcIm5ld3NwYXBlclwiLFxyXG4gICAgdGV4dDogYDxwPtCS0YfQtdGA0LAg0LLQtdGH0LXRgNC+0Lwg0LjQtyDQv9C+0YDRgtCwINCy0YvRiNC70L4g0YHRg9C00L3QviBcItCh0YLRgNC10LzQuNGC0LXQu9GM0L3Ri9C5INGF0LLQvtGB0YLQuNC6XCIsINC60L7RgtC+0YDQvtC1INC00LXRgNC20LjRgiDQutGD0YDRgSDQvdCwINCQ0L3RgtCw0YDQutGC0LjQutGDLiA8L3A+PHA+0J3QsCDQsdC+0YDRgtGDINGB0YPQtNC90LAg0L3QsNGF0L7QtNC40YLRgdGPINC/0LvQsNCy0YPRh9C40Lkg0LfQvtC+0L/QsNGA0Log0YEg0YDQtdC00LrQuNC80Lgg0LLQuNC00LDQvNC4INC20LjQstC+0YLQvdGL0YUsINCwINGC0LDQutC20LUg0LPRgNGD0L/Qv9CwINGD0YfQtdC90YvRhSwg0LIg0YfQuNGB0LvQtSDQutC+0YLQvtGA0YvRhSDQt9C90LDQvNC10L3QuNGC0YvQuSDQuNGB0YHQu9C10LTQvtCy0LDRgtC10LvRjCDQstGB0LXQs9C+INC4INCy0YHRjyDQlNC+0LrRgtC+0YAg0JfQu9C+0LHQvdC40LrRg9GBLjwvcD5gXHJcbiAgfSx7IC8vIDI3IHRvLWFudGFyY3RpY2FcclxuICAgIGNsYXNzOiBcInRvLWFudGFyY3RpY2FcIixcclxuICAgIHRleHQ6IGA8cD7QotCw0Log0LLQvtGCINC30LDRh9C10Lwg0LfQu9C+0LTQtdC5INCX0LvQvtCx0L3QuNC60YPRgSDQvtGC0L/RgNCw0LLQuNC70YHRjyDQsiDQkNCy0YHRgtGA0LDQu9C40Y4hINCe0YLRgdGO0LTQsCDQvtC9INC+0YLQv9C70YvQstCw0LXRgiDQsiDQkNC90YLQsNGA0LrRgtC40LTRgyE8L3A+PHA+0J3QviDQt9Cw0YfQtdC8INC10LzRgyDQsiDQkNC90YLQsNGA0LrRgtC40LTRgz8g0Jgg0L/QvtGH0LXQvNGDINC+0L0g0L/RgNC+0LTQvtC70LbQsNC10YIg0YPQtNC10YDQttC40LLQsNGC0Ywg0JDRhdC40L3QtdGOPzwvcD5gXHJcbiAgfSx7IC8vIDI4IGFudGFyY3RpY2FcclxuICAgIGNsYXNzOiBcImFudGFyY3RpY2FcIixcclxuICAgIHRpdGxlOiBcItCQ0L3RgtCw0YDQutGC0LjQtNCwXCIsXHJcbiAgICB0ZXh0OiBgPHA+0JfQvdCw0LzQtdC90LjRgtGL0Lkg0L/Rg9GC0LXRiNC10YHRgtCy0LXQvdC90LjQuiDQn9GD0L/QvtC6INCU0LbQvtC90YEg0L7RgtC/0YDQsNCy0LjQu9GB0Y8g0LIg0JDQvdGC0LDRgNC60YLQuNC00YMsINC/0YDQtdGB0LvQtdC00YPRjyDQlNC+0LrRgtC+0YDQsCDQl9C70L7QsdC90LjQutGD0YHQsCwg0YPQutGA0LDQstGI0LXQs9C+INC/0L7QtNGC0Y/QttC60Lgg0Y/Qv9C+0L3RgdC60L7Qs9C+INCx0L7Qs9CwINCQ0LzRjS3QvdC+INCc0LjQvdCw0LrQsNC90YPRgdC4INC90L4g0JrQsNC80Lgg0YMg0LLQvtC20LTRjyDQv9C70LXQvNC10L3QuCDQnNGD0LzQsdCwLdCu0LzQsdCwINC4INCy0L7Qt9C70Y7QsdC70LXQvdC90YPRjiDRgdCw0LzQvtCz0L4g0J/Rg9C/0LrQsC48L3A+PHA+0KfRgtC+0LHRiyDQtNC+0LHRgNCw0YLRjNGB0Y8g0LTQviDRgdGC0L7Rj9C90LrQuCDQt9C70L7QtNC10Y8sINCf0YPQv9C+0Log0L/RgNC10L7QtNC+0LvQtdCy0LDQtdGCINGB0L3QtdC20L3Ri9C1INCz0L7RgNGLINC4INC70LXQtNGP0L3Ri9C1INC/0YPRgdGC0YvQvdC4LCDQv9C10YDQtdC70LXQt9Cw0LXRgiDRh9C10YDQtdC3INCw0LnRgdCx0LXRgNCz0Lgg0Lgg0YHQutCw0YLRi9Cy0LDQtdGC0YHRjyDQvdCwINC/0L7Qv9C1INGBINC70LXQtNC90LjQutC+0LIsINGB0YDQsNC20LDQtdGC0YHRjyDRgSDQv9C40L3Qs9Cy0LjQvdCw0LzQuCDQuCDQvdC+0YfRg9C10YIg0LIg0L3QvtGA0LDRhSDQu9C10LzQuNC90LPQvtCyLjwvcD5gXHJcbiAgfSx7IC8vIDI5IHBpenphXHJcbiAgICBjbGFzczogXCJwaXp6YVwiLFxyXG4gICAgdGl0bGU6IFwi0JvQvtCz0L7QstC+INCU0L7QutGC0L7RgNCwINCX0LvQvtCx0L3QuNC60YPRgdCwXCIsXHJcbiAgICB0ZXh0OiBgPHA+0J3QsNC60L7QvdC10YYsINCf0YPQv9C+0Log0JTQttC+0L3RgSDQtNC+0LHRgNCw0LvRgdGPINC00L4g0LvQsNCz0LXRgNGPINGB0LLQvtC10LPQviDQv9GA0L7RgtC40LLQvdC40LrQsCwg0LLRgdGC0LDQuyDQv9C10YDQtdC0INCy0YXQvtC00L3QvtC5INC00LLQtdGA0YzRjiDQuCDQv9C+0LfQstC+0L3QuNC7LjwvcD48cD4tINCa0YLQviDRgtCw0Lw/IC0g0YHQv9GA0L7RgdC40Lsg0LPQvtC70L7RgSDQlNC+0LrRgtC+0YDQsCDQl9C70L7QsdC90LjQutGD0YHQsC48L3A+PHA+LSDQlNC+0YHRgtCw0LLQutCwINC/0LjRhtGG0YssIC0g0L7RgtCy0LXRgtC40Lsg0J/Rg9C/0L7QuiDQlNC20L7QvdGBLjwvcD48cD4tINCd0YMg0L3QsNC60L7QvdC10YYt0YLQviEgLSDQvtCx0YDQsNC00L7QstCw0LvRgdGPINCU0L7QutGC0L7RgCDQl9C70L7QsdC90LjQutGD0YEuIC0g0J7RgtC60YDRi9Cy0LDRjiwg0LfQsNGF0L7QtNC40YLQtSE8L3A+YFxyXG4gIH0seyAvLyAzMCBldmlsLXBsYW5cclxuICAgIGNsYXNzOiBcImV2aWwtcGxhblwiLFxyXG4gICAgdGV4dDogYDxwPtCU0L7QutGC0L7RgCDQl9C70L7QsdC90LjQutGD0YEg0L7Rh9C10L3RjCDRg9C00LjQstC40LvRgdGPLCDRg9Cy0LjQtNC10LIg0J/Rg9C/0LrQsCwg0L3QviDRgdC+0LLRgdC10Lwg0L3QtSDRgNCw0YHRgtC10YDRj9C70YHRjy48L3A+PHA+LSDQryDQt9C90LDRjiwg0LfQsNGH0LXQvCDRgtGLINC/0YDQuNGI0LXQuywg0J/Rg9C/0L7QuiDQlNC20L7QvdGBLCAtINGB0LrQsNC30LDQuyDQvtC9INGBINC/0YDQtdC30YDQuNGC0LXQu9GM0L3QvtC5INGD0YXQvNGL0LvQutC+0LkuIC0g0J3QviDRgtGLINC+0L/QvtC30LTQsNC7ITwvcD48cD4tINCeINC90LXRgiEgLSDQstC+0YHQutC70LjQutC90YPQuyDQn9GD0L/QvtC6INCU0LbQvtC90YEuIC0g0KfRgtC+INGC0Ysg0YHQtNC10LvQsNC7INGBINCQ0YXQuNC90LXQtdC5PyEg0J7QvdCwINCy0LXQtNGMINGD0LbQtSDQv9C+0LzQvtCz0LvQsCDRgtC10LHQtSDQtNC+0LHRi9GC0Ywg0L3QtdCy0LXRgNC+0Y/RgtC90L4g0YbQtdC90L3Ri9C1INC/0L7QtNGC0Y/QttC60Lgg0Y/Qv9C+0L3RgdC60L7Qs9C+INCx0L7Qs9CwINCQ0LzRjS3QvdC+INCc0LjQvdCw0LrQsNC90YPRgdC4INC90L4g0JrQsNC80LghINCe0YLQv9GD0YHRgtC4INC20LUg0LXQtSE8L3A+PHA+LSDQndC10YIsINC90LUg0L7RgtC/0YPRidGDLCAtINC+0YLQstC10YLQuNC7INCX0LvQvtCx0L3QuNC60YPRgS4gLSDQntC90LAg0L3Rg9C20L3QsCDQvNC90LUsINGH0YLQvtCx0Ysg0YHQtNC10LvQsNGC0Ywg0LrRgNCw0YHQuNCy0L7QtSDRhNC+0YLQviDQsiDQv9C+0LTRgtGP0LbQutCw0YUg0Y/Qv9C+0L3RgdC60L7Qs9C+INCx0L7Qs9CwINCQ0LzRjS3QvdC+INCc0LjQvdCw0LrQsNC90YPRgdC4INC90L4g0JrQsNC80Lgg0L3QsCDRhNC+0L3QtSDQsNC50YHQsdC10YDQs9CwISDQntC90LAg0LLQtdC00Ywg0LfQsNC80LXRh9Cw0YLQtdC70YzQvdGL0Lkg0YTQvtGC0L7Qs9GA0LDRhCEg0KPQttC1INC30LDQstGC0YDQsCDRjdGC0L4g0YTQvtGC0L4g0LLRi9C50LTQtdGCINC90LAg0L/QtdGA0LLRi9GFINC/0L7Qu9C+0YHQsNGFINCy0YHQtdGFINC80LjRgNC+0LLRi9GFINCz0LDQt9C10YIsINC4INC80LjRgCDQsdGD0LTQtdGCINC/0L7QutC+0YDQtdC9INC4INC/0LDQtNC10YIg0L3QuNGGINC/0LXRgNC10LQg0LLQtdC70LjQutC40Lwg0Lgg0L/RgNC10LrRgNCw0YHQvdGL0Lwg0JTQvtC60YLQvtGA0L7QvCDQl9C70L7QsdC90LjQutGD0YHQvtC8ITwvcD48cD7QmCDQvtC9INC90LDRgtGA0LDQstC40Lsg0L3QsCDQn9GD0L/QutCwINGB0LLQvtGOINCw0YDQvNC40Y4g0LrRgNC+0LLQvtC20LDQtNC90YvRhSDQv9C40L3Qs9Cy0LjQvdC+0LIuPC9wPmBcclxuICB9LHsgLy8gMzEgcGluZ3Vpbi1iYXR0bGVcclxuICAgIGNsYXNzOiBcInBpbmd1aW4tYmF0dGxlXCIsXHJcbiAgICB0ZXh0OiBgPHA+0KPQstC+0YDQsNGH0LjQstCw0LnRgtC10YHRjCDQvtGCINC/0LjQvdCz0LLQuNC90L7QsiDQlNC+0LrRgtC+0YDQsCDQl9C70L7QsdC90LjQutGD0YHQsCDQuCDRgdC+0LHQuNGA0LDQudGC0LUg0L/QsNC00LDRjtGJ0LjQtSDRgdC90LXQttC40L3QutC4LjwvcD5gLFxyXG4gICAgZ2FtZTogXCJhbnRhcmN0aWNhXCJcclxuICB9LHsgLy8gMzIgZmx5XHJcbiAgICBjbGFzczogXCJmbHlcIixcclxuICAgIHRpdGxlOiBcItCf0L7QsdC10LTQsCFcIixcclxuICAgIHRleHQ6IGA8cD7Qn9GD0L/QvtC6INCU0LbQvtC90YEg0L/QvtCx0LXQtNC40Lsg0LLRgdC10YUg0L/QuNC90LPQstC40L3QvtCyLCDQvdC+INCU0L7QutGC0L7RgCDQl9C70L7QsdC90LjQutGD0YEg0YPQttC1INC/0L7QtNC90LjQvNCw0LvRgdGPINC90LAg0LPQvtGA0YMg0LLQvNC10YHRgtC1INGBINCQ0YXQuNC90LXQtdC5LCDRh9GC0L7QsdGLINGB0LTQtdC70LDRgtGMINC60YDQsNGB0LjQstGD0Y4g0YTQvtGC0L7Qs9GA0LDRhNC40Y4uPC9wPjxwPtCV0LzRgyDQvdC40LrQsNC6INCx0YvQu9C+INC90LUg0YPRgdC/0LXRgtGMITwvcD48cD7QndC+INC30L3QsNC80LXQvdC40YLRi9C5INC/0YPRgtC10YjQtdGB0YLQstC10L3QvdC40Log0Lgg0LjRgdC60LDRgtC10LvRjCDQv9GA0LjQutC70Y7Rh9C10L3QuNC5INCf0YPQv9C+0Log0JTQttC+0L3RgSDQsdGL0Lsg0LfQvdCw0LzQtdC90LjRgiDRgtC10LwsINGH0YLQviDQvdC40LrQvtCz0LTQsCDQvdC1INGB0LTQsNCy0LDQu9GB0Y8hINCe0L0g0YHRhdCy0LDRgtC40Lsg0L/QvtCy0LXRgNC20LXQvdC90L7Qs9C+INC/0LjQvdCz0LLQuNC90LAsINGB0LXQuyDQvdCwINC90LXQs9C+INC4INC30LDRgdGC0LDQstC40Lsg0LvQtdGC0LXRgtGMINCy0YHQu9C10LQg0LfQsCDQt9C70L7QtNC10LXQvC48L3A+YFxyXG4gIH0seyAvLyAzMyBwaG90b1xyXG4gICAgY2xhc3M6IFwicGhvdG9cIixcclxuICAgIHRleHQ6IGA8cD7Qn9GA0LjQt9C10LzQu9C40LLRiNC40YHRjCDQv9GA0Y/QvNC+INC/0LXRgNC10LQg0YPQtNC40LLQu9C10L3QvdGL0Lwg0JTQvtC60YLQvtGA0L7QvCDQl9C70L7QsdC90LjQutGD0YHQvtC8LCDQn9GD0L/QvtC6INCU0LbQvtC90YEg0LLRi9C30YvQstCw0Y7RidC1INGB0LrQsNC30LDQuyDQtdC80YM6PC9wPjxwPi0g0K8g0L3QtSDQv9C+0LfQstC+0LvRjiDRgtC10LHQtSDRgdC00LXQu9Cw0YLRjCDQutGA0LDRgdC40LLRg9GOINGE0L7RgtC+0LPRgNCw0YTQuNGOINCyINC/0L7QtNGC0Y/QttC60LDRhSDRj9C/0L7QvdGB0LrQvtCz0L4g0LHQvtCz0LAg0JDQvNGNLdC90L4g0JzQuNC90LDQutCw0L3Rg9GB0Lgg0L3QviDQmtCw0LzQuCDQvdCwINGE0L7QvdC1INCw0LnRgdCx0LXRgNCz0LAg0Lgg0LLQvtC/0LvQvtGC0LjRgtGMINCyINC20LjQt9C90Ywg0Y3RgtC+0YIg0YPQttCw0YHQvdGL0Lkg0L/Qu9Cw0L0g0L/QviDQt9Cw0LLQvtC10LLQsNC90LjRjiDQvNC40YDQsCE8L3A+PHA+LSDQpdCwLdGF0LAsIC0g0L7RgtCy0LXRgtC40Lsg0JfQu9C+0LHQvdC40LrRg9GBLiAtINCYINC60LDQuiDQttC1INGC0Ysg0YHQvNC+0LbQtdGI0Ywg0LzQvdC1INC/0L7QvNC10YjQsNGC0Yw/PC9wPjxwPtCYINGC0YPRgiDQvdCw0YHRgtCw0Lsg0LfQstC10LfQtNC90YvQuSDRh9Cw0YEg0L/RgNC+0YTQtdGB0YHQvtGA0LAg0J/QuNC30LTRgNC40LrQsCwg0L/RgNC10LTQu9C+0LbQuNCy0YjQtdCz0L4g0YHQstC+0LXQvNGDINC00YDRg9Cz0YMg0LfQsNC80LXRh9Cw0YLQtdC70YzQvdGD0Y4g0LjQtNC10Y4uPC9wPjxwPi0g0KMg0LzQtdC90Y8g0LXRgdGC0Ywg0LrQvtC80L/RgNC+0LzQsNGCINC90LAg0YLQtdCx0Y8sINCX0LvQvtCx0L3QuNC60YPRgSwgLSDRgNCw0YHRgdC80LXRj9C70YHRjyDQn9GD0L/QvtC6INCU0LbQvtC90YEuIC0g0JXRgdC70Lgg0LzQuNGAINGD0LfQvdCw0LXRgiDQviDQvdC10LwsINGC0LXQsdC1INC90LUg0L/QvtC80L7QttC10YIg0LTQsNC20LUg0YHQsNC80LDRjyDQutGA0LDRgdC40LLQsNGPINGE0L7RgtC+0LPRgNCw0YTQuNGPINC90LAg0YTQvtC90LUg0LDQudGB0LHQtdGA0LPQsCwg0YHQtNC10LvQsNC90L3QsNGPINC80L7QtdC5INCy0L7Qt9C70Y7QsdC70LXQvdC90L7QuSE8L3A+YFxyXG4gIH0seyAvLyAzNCB3aW5cclxuICAgIGNsYXNzOiBcIndpblwiLFxyXG4gICAgdGV4dDogYDxwPtCh0LrQsNC30LDRgtGMLCDRh9GC0L4g0JTQvtC60YLQvtGAINCX0LvQvtCx0L3QuNC60YPRgSDRgNCw0YHRgdGC0YDQvtC40LvRgdGPLCAtINC90LjRh9C10LPQviDQvdC1INGB0LrQsNC30LDRgtGMLiDQntC9INCx0YvQuyDRgNCw0LfQsdC40YIsINGA0LDQt9C00LDQstC70LXQvSwg0YDQsNGB0YHRg9GB0L7Qu9C10L0hPC9wPjxwPi0g0J/RgNC+0LrQu9GP0YLRi9C5INCf0YPQv9C+0LosIC0g0LHRg9GA0LrQvdGD0Lsg0L7QvSwg0LHRgNC+0YHQuNC7INC90LAg0YHQvdC10LMg0YTQvtGC0L7QsNC/0L/QsNGA0LDRgiwg0YDQsNC30LLQtdGA0L3Rg9C70YHRjyDQuCDQv9C+0LHRgNC10Lsg0L/RgNC+0YfRjC48L3A+YFxyXG4gIH0seyAvLyAzNSB0by1hbWVyaWNhXHJcbiAgICBjbGFzczogXCJ0by1hbWVyaWNhXCIsXHJcbiAgICB0ZXh0OiBgPHA+0J/Rg9C/0L7QuiDQsdGA0L7RgdC40LvRgdGPINC6INGB0LLQvtC10Lkg0LLQvtC30LvRjtCx0LvQtdC90L3QvtC5INCQ0YXQuNC90LXQtSwg0LfQsNC60LvRjtGH0LjQuyDQtdC1INCyINC20LDRgNC60LjQtSDQvtCx0YrRj9GC0LjRjyDQuCDRgdGC0YDQsNGB0YLQvdC+INC/0L7RhtC10LvQvtCy0LDQuy48L3A+PHA+LSDQotGLINGB0L/QsNGBINC80LXQvdGPLCDQv9GD0L/RgdC40LohIC0g0LLQvtGB0LrQu9C40LrQvdGD0LvQsCDQvtC90LAsINGC0LXRgNGP0Y8g0YHQvtC30L3QsNC90LjQtSDQvdCwINGA0YPQutCw0YUg0YMg0LPQtdGA0L7Rjy48L3A+PHA+0J/Rg9C/0L7QuiDQt9Cw0LrQuNC90YPQuyDQsdC10YHRh9GD0LLRgdGC0LLQtdC90L3Rg9GOINCQ0YXQuNC90LXRjiDQvdCwINC/0LvQtdGH0L4sINC+0YHQtdC00LvQsNC7INC/0LjQvdCz0LLQuNC90LAg0Lgg0L/QvtC70LXRgtC10Lsg0Log0LHQtdGA0LXQs9Cw0Lwg0K7QttC90L7QuSDQkNC80LXRgNC40LrQuC48L3A+YFxyXG4gIH0seyAvLyAzNiBhbWVyaWNhXHJcbiAgICBjbGFzczogXCJhbWVyaWNhXCIsXHJcbiAgICB0aXRsZTogXCLQrtC20L3QsNGPINCQ0LzQtdGA0LjQutCwLCDQn9Cw0YLQsNCz0L7QvdC40Y9cIixcclxuICAgIHRleHQ6IGA8cD7QldC00LLQsCDQtNC+0LvQtdGC0LXQsiDQtNC+INGO0LbQvdC+0LPQviDQv9C+0LHQtdGA0LXQttGM0Y8g0K7QttC90L7QuSDQkNC80LXRgNC40LrQuCwg0L/QuNC90LPQstC40L0g0LLQt9Cx0YDRi9C60L3Rg9C7LCDRgdCx0YDQvtGB0LjQuyDRgdC10LTQvtC60L7QsiDQuCDQs9C+0YDQtNC+INC/0L7Qu9C10YLQtdC7INC00L7QvNC+0LksINCyINCQ0L3RgtCw0YDQutGC0LjQtNGDLjwvcD48cD7Qn9GD0L/QvtC6INC/0L7Qs9GA0L7Qt9C40Lsg0LrRg9C70LDQutC+0Lwg0LLRgdC70LXQtCDRg9C00LDQu9GP0Y7RidC10LnRgdGPINC/0YLQuNGG0LUg0Lgg0LPRgNGD0YHRgtC90L4g0LLQt9C00L7RhdC90YPQuy4g0J7QvSDRgdC+0LHQuNGA0LDQu9GB0Y8g0LTQvtCx0YDQsNGC0YzRgdGPINC00L4g0YHQstC+0LXQs9C+INC40L3RgdGC0LjRgtGD0YLQsCDQsiDQmtC+0L3QvdC10LrRgtC40LrRg9GC0LUsINCwINCy0L7QstGB0LUg0L3QtSDQt9Cw0YHRgtGA0Y/RgtGMINCyINC/0YPRgdGC0YvQvdGP0YUg0J/QsNGC0LDQs9C+0L3QuNC4LjwvcD48cD7QndC+INC00LXQu9Cw0YLRjCDQvdC10YfQtdCz0L4sINC30L3QsNC80LXQvdC40YLRi9C5INC/0YPRgtC10YjQtdGB0YLQstC10L3QvdC40Log0Lgg0LjRgdC60LDRgtC10LvRjCDQv9GA0LjQutC70Y7Rh9C10L3QuNC5INCf0YPQv9C+0Log0JTQttC+0L3RgSDQv9C+0L/RgNCw0LLQuNC7INC90LAg0L/Qu9C10YfQtSDQsdC10YHRh9GD0LLRgdGC0LLQtdC90L3Rg9GOINCQ0YXQuNC90LXRjiDQuCDQv9C+0YjQsNCz0LDQuyDQvdCwINGB0LXQstC10YAuPC9wPmBcclxuICB9LHsgLy8gMzcgaW5kaWFuXHJcbiAgICBjbGFzczogXCJpbmRpYW5cIixcclxuICAgIHRpdGxlOiBcItCm0LXQvdGC0YDQsNC70YzQvdCw0Y8g0JDQvNC10YDQuNC60LAsINCT0L7QvdC00YPRgNCw0YFcIixcclxuICAgIHRleHQ6IGA8cD7Qn9GD0L/QvtC6INCU0LbQvtC90YEg0YHQv9C+0LrQvtC50L3QviDQtNC+0YjQsNCz0LDQuyDQtNC+INCT0L7QvdC00YPRgNCw0YHQsCwg0L3QviDRgtGD0YIg0LXQs9C+INC+0YHRgtCw0L3QvtCy0LjQu9CwINGC0L7Qu9C/0LAg0L3QtdC00YDRg9C20LXQu9GO0LHQvdC+INC90LDRgdGC0YDQvtC10L3QvdGL0YUg0LDQsdC+0YDQuNCz0LXQvdC+0LIuPC9wPjxwPtCf0YDQuNGI0LvQvtGB0Ywg0YHQv9Cw0YHQsNGC0YzRgdGPINCx0LXQs9GB0YLQstC+0LwhPC9wPmBcclxuICB9LHsgLy8gMzggZ29uZHVyYXNcclxuICAgIGNsYXNzOiBcImdvbmR1cmFzXCIsXHJcbiAgICB0YXNrOiBcIndvcmRcIixcclxuICAgIHRpdGxlOiBcItCh0YLQvtC70LjRhtCwINCT0L7QvdC00YPRgNCw0YHQsD9cIixcclxuICAgIHRleHQ6IGA8cD7Qp9GC0L7QsdGLINGB0LrRgNGL0YLRjNGB0Y8g0L7RgiDQv9GA0LXRgdC70LXQtNC+0LLQsNGC0LXQu9C10LksINC90LDQt9C+0LLQuCDRgdGC0L7Qu9C40YbRgyDQk9C+0L3QtNGD0YDQsNGB0LA8L3A+YCxcclxuICAgIGFuc3dlcjogXCLRgtC10LPRg9GB0LjQs9Cw0LvRjNC/0LBcIixcclxuICB9LHsgLy8gMzkgcHlyYW1pZFxyXG4gICAgY2xhc3M6IFwicHlyYW1pZFwiLFxyXG4gICAgdGV4dDogYDxwPtCj0LHQtdCz0LDRjyDQvtGCINCy0YDQsNC20LTQtdCx0L3QvtCz0L4g0L/Qu9C10LzQtdC90LgsINCf0YPQv9C+0Log0YHQv9GA0Y/RgtCw0LvRgdGPINCyINC+0LPRgNC+0LzQvdC+0Lkg0L/QuNGA0LDQvNC40LTQtSDQuNC90LTQtdC50YbQtdCyINCc0LDQudGPLCDQutC+0YLQvtGA0L7QuSDQsdGL0LvQviDQsdC+0LvRjNGI0LUg0YLRgNC10YUg0YLRi9GB0Y/RhyDQu9C10YIuIDwvcD48cD7Qn9GD0YLRjCDQvdCw0LfQsNC0INCx0YvQuyDQvtGC0YDQtdC30LDQvSDQsNCx0L7RgNC40LPQtdC90LDQvNC4LCDQv9C+0Y3RgtC+0LzRgyDQn9GD0L/QvtC6INCU0LbQvtC90YEg0L/QvtC/0YDQsNCy0LjQuyDQvdCwINC/0LvQtdGH0LUg0LHQtdGB0YfRg9Cy0YHRgtCy0LXQvdC90YPRjiDQkNGF0LjQvdC10Y4g0Lgg0L/QvtGI0LDQs9Cw0Lsg0LLQv9C10YDQtdC0LjwvcD5gXHJcbiAgfSx7IC8vIDQwIG1hemVcclxuICAgIGNsYXNzOiBcIm1hemVcIixcclxuICAgIHRleHQ6IGA8cD7QntGH0LXQvdGMINGB0LrQvtGA0L4g0L7QvSDQv9C+0L3Rj9C7LCDRh9GC0L4g0LLQvdGD0YLRgNC4INC/0LjRgNCw0LzQuNC00Ysg0LvQtdC20LjRgiDQvtCz0YDQvtC80L3Ri9C5INC70LDQsdC40YDQuNC90YIuPC9wPjxwPtCf0YDQvtCy0LXQtNC4INCf0YPQv9C60LAg0JTQttC+0L3RgdCwINC/0L4g0LvQsNCx0LjRgNC40L3RgtGDINC60LDQuiDQvNC+0LbQvdC+INCx0YvRgdGC0YDQtdC1LCDQuNC30LHQtdCz0LDRjyDQs9C40LPQsNC90YLRgdC60LjRhSDQutGA0YvRgS48L3A+YCxcclxuICAgIGdhbWU6IFwiYW1lcmljYVwiLFxyXG4gIH0seyAvLyA0MSBvdXRcclxuICAgIGNsYXNzOiBcIm91dFwiLFxyXG4gICAgdGl0bGU6IFwi0JLRi9GF0L7QtCDQvdCw0LnQtNC10L0hXCIsXHJcbiAgICB0ZXh0OiBgPHA+0J/Rg9C/0L7QuiDQlNC20L7QvdGBINCy0YvRiNC10Lsg0LjQtyDQu9Cw0LHQuNGA0LjQvdGC0LAg0LDRhtGC0LXQutC+0LIg0L/RgNGP0LzQviDQv9C10YDQtdC0INC60LDQvNC/0YPRgdC+0Lwg0YHQstC+0LXQs9C+INC40L3RgdGC0LjRgtGD0YLQsC48L3A+PHA+0JDRhdC40L3QtdGPINC90LAg0LXQs9C+INC/0LvQtdGH0LUg0L3QsNC60L7QvdC10YYt0YLQviDQt9Cw0YjQtdCy0LXQu9C40LvQsNGB0Ywg0Lgg0L/RgNC40YjQu9CwINCyINGB0LXQsdGPLjwvcD48cD4tINCeLCDQvNC+0Lkg0LPQtdGA0L7QuSEgLSDQv9Cw0YLQtdGC0LjRh9C10YHQutC4INC/0YDQvtGI0LXQv9GC0LDQu9CwINC+0L3QsCDQuCDRgdC90L7QstCwINGD0L/QsNC70LAg0LIg0L7QsdC80L7RgNC+0Log0L7RgiDRgNCw0LTQvtGB0YLQuC48L3A+YFxyXG4gIH1cclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHNjcmVlbnM7IiwiaW1wb3J0IEV1cm9wZUdhbWUgZnJvbSBcIi4uLy4uL2V1cm9wZVwiO1xyXG5pbXBvcnQgQWZyaWNhR2FtZSBmcm9tIFwiLi4vLi4vYWZyaWNhXCI7XHJcbmltcG9ydCBBc2lhR2FtZSBmcm9tIFwiLi4vLi4vYXNpYVwiO1xyXG5pbXBvcnQgQXVzdHJhbGlhR2FtZSBmcm9tIFwiLi4vLi4vYXVzdHJhbGlhXCI7XHJcbmltcG9ydCBBbnRhcmN0aWNhR2FtZSBmcm9tIFwiLi4vLi4vYW50YXJjdGljYVwiO1xyXG5pbXBvcnQgQW1lcmljYUdhbWUgZnJvbSBcIi4uLy4uL2FtZXJpY2FcIjtcclxuXHJcbmNvbnN0IGNyZWF0ZVBsYXlncm91bmQgPSAoZ2FtZU5hbWUpID0+IHtcclxuICBsZXQgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBlbC5jbGFzc0xpc3QuYWRkKGBnYW1lLSR7Z2FtZU5hbWV9YCk7XHJcbiAgZWwuc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XHJcbiAgcmV0dXJuIGVsO1xyXG59O1xyXG5cclxubGV0IHBvaW50cyA9IDA7XHJcblxyXG5jb25zdCBpbml0R2FtZSA9IChnYW1lTmFtZSwgY2FsbGJhY2spID0+IHtcclxuICBsZXQgcGxheWdyb3VuZCA9IGNyZWF0ZVBsYXlncm91bmQoZ2FtZU5hbWUpO1xyXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocGxheWdyb3VuZCk7XHJcbiAgbGV0IGdhbWU7XHJcblxyXG4gIHN3aXRjaChnYW1lTmFtZSkge1xyXG4gICAgY2FzZSBcImFzaWFcIjpcclxuICAgICAgZ2FtZSA9IG5ldyBBc2lhR2FtZShwbGF5Z3JvdW5kKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwiZXVyb3BlXCI6XHJcbiAgICAgIGdhbWUgPSBuZXcgRXVyb3BlR2FtZShwbGF5Z3JvdW5kKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwiYWZyaWNhXCI6XHJcbiAgICAgIGdhbWUgPSBuZXcgQWZyaWNhR2FtZShwbGF5Z3JvdW5kKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwiYXVzdHJhbGlhXCI6XHJcbiAgICAgIGdhbWUgPSBuZXcgQXVzdHJhbGlhR2FtZShwbGF5Z3JvdW5kKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwiYW50YXJjdGljYVwiOlxyXG4gICAgICBnYW1lID0gbmV3IEFudGFyY3RpY2FHYW1lKHBsYXlncm91bmQpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgXCJhbWVyaWNhXCI6XHJcbiAgICAgIGdhbWUgPSBuZXcgQW1lcmljYUdhbWUocGxheWdyb3VuZCk7XHJcbiAgICAgIGJyZWFrO1xyXG4gIH1cclxuXHJcbiAgaWYgKGdhbWUpIHtcclxuICAgIGdhbWUub25jZShcIndpblwiLCAoZ2FtZVBvaW50cykgPT4ge1xyXG4gICAgICBwb2ludHMgKz0gZ2FtZVBvaW50cztcclxuICAgICAgZ2FtZSA9IG51bGw7XHJcbiAgICAgIHBsYXlncm91bmQucmVtb3ZlKCk7XHJcbiAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpbml0R2FtZTsiLCJjb25zdCBoaWRlID0gZWwgPT4ge1xyXG4gIGVsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxufVxyXG5cclxuY29uc3Qgc2hvdyA9IGVsID0+IHtcclxuICBlbC5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcclxufVxyXG5cclxubGV0IHVwZGF0ZVNjcmVlbiA9ICgoKSA9PiB7XHJcbiAgbGV0IHNjcmVlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZ2FtZS1zY3JlZW5cIik7XHJcbiAgbGV0IHBpYyA9IHNjcmVlbi5xdWVyeVNlbGVjdG9yKFwiLnNjcmVlbl9fcGljXCIpO1xyXG4gIGxldCBpbWcgPSBwaWMucXVlcnlTZWxlY3RvcihcIi5zY3JlZW5fX2ltZ1wiKTtcclxuICBsZXQgdGl0bGUgPSBzY3JlZW4ucXVlcnlTZWxlY3RvcihcIi5zY3JlZW5fX3RpdGxlXCIpO1xyXG4gIGxldCB0ZXh0ID0gc2NyZWVuLnF1ZXJ5U2VsZWN0b3IoXCIuc2NyZWVuX190ZXh0XCIpO1xyXG4gIGxldCBuZXh0ID0gc2NyZWVuLnF1ZXJ5U2VsZWN0b3IoXCIuc2NyZWVuX19uZXh0XCIpO1xyXG4gIGxldCBuZXh0VGV4dCA9IG5leHQucXVlcnlTZWxlY3RvcihcImJcIik7XHJcblxyXG4gIFxyXG4gIGNvbnN0IHJlc2V0ID0gKCkgPT4ge1xyXG4gICAgc2hvdyhwaWMpO1xyXG4gICAgc2hvdyhpbWcpO1xyXG4gICAgc2hvdyh0aXRsZSk7XHJcbiAgICBzaG93KHRleHQpO1xyXG4gICAgcGljLnJlbW92ZUF0dHJpYnV0ZShcImRhdGEtbWFwXCIpO1xyXG4gICAgc2NyZWVuLnJlbW92ZUF0dHJpYnV0ZShcImRhdGEtY2xhc3NcIik7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gKGRhdGEsIG5leHRDYWxsYmFjaykgPT4ge1xyXG4gICAgaWYgKCFkYXRhKSB7XHJcbiAgICAgIGhpZGUoc2NyZWVuKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0KCk7XHJcblxyXG4gICAgc2NyZWVuLnNldEF0dHJpYnV0ZShcImRhdGEtY2xhc3NcIiwgZGF0YS5jbGFzcyk7XHJcblxyXG4gICAgaWYgKGRhdGEuaW1nKSB7XHJcbiAgICAgIGltZy5zcmMgPSBkYXRhLmltZztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGhpZGUoaW1nKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGF0YS5tYXApIHtcclxuICAgICAgcGljLnNldEF0dHJpYnV0ZShcImRhdGEtbWFwXCIsIGRhdGEubWFwKTtcclxuICAgIH0gZWxzZSBpZiAoIWRhdGEuaW1nKSB7XHJcbiAgICAgIGhpZGUocGljKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGF0YS50aXRsZSkge1xyXG4gICAgICB0aXRsZS5pbm5lckhUTUwgPSBkYXRhLnRpdGxlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaGlkZSh0aXRsZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGRhdGEudGV4dCkge1xyXG4gICAgICB0ZXh0LmlubmVySFRNTCA9IGRhdGEudGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGhpZGUodGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGRhdGEubmV4dCkge1xyXG4gICAgICBuZXh0VGV4dC50ZXh0Q29udGVudCA9IGRhdGEubmV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG5leHRUZXh0LnRleHRDb250ZW50ID0gXCLQlNCw0LvRjNGI0LVcIjtcclxuICAgIH1cclxuXHJcbiAgICBuZXh0Lm9uY2xpY2sgPSAoKSA9PiBuZXh0Q2FsbGJhY2soKTtcclxuICAgIFxyXG4gICAgc2hvdyhzY3JlZW4pO1xyXG4gIH1cclxufSkoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVwZGF0ZVNjcmVlbjsiXSwic291cmNlUm9vdCI6IiJ9